// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestApplication;

#nullable disable

namespace TestApplication.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TestApplication.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SharedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SharedId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("TestApplication.Shared", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Age")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Shareds");
                });

            modelBuilder.Entity("TestApplication.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<int>("SharedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SharedId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("TestApplication.Person", b =>
                {
                    b.HasOne("TestApplication.Shared", "Shared")
                        .WithMany()
                        .HasForeignKey("SharedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shared");
                });

            modelBuilder.Entity("TestApplication.Student", b =>
                {
                    b.HasOne("TestApplication.Shared", "Shared")
                        .WithMany()
                        .HasForeignKey("SharedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shared");
                });
#pragma warning restore 612, 618
        }
    }
}
