// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModelsUpgrade.Data;

#nullable disable

namespace ModelsUpgrade.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250212203935_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.AccountName", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountFicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountMenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountNameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountNatureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("AccountTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CurrencyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LevelCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("NotMenu")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ParentCode")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AccountFicationId");

                    b.HasIndex("AccountMenuId");

                    b.HasIndex("AccountNameId");

                    b.HasIndex("AccountNatureId");

                    b.HasIndex("AccountTypeId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("CurrencyDataId");

                    b.HasIndex("ParentCode");

                    b.ToTable("AccountName");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.AccountsBalanceFooter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountFicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountNameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountsBalanceHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountFicationId");

                    b.HasIndex("AccountNameId");

                    b.HasIndex("AccountsBalanceHeaderId");

                    b.ToTable("AccountsBalanceFooter");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.AccountsBalanceHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BalanceNameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<decimal?>("TotalBalance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("TotalCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("TotalDebit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("BalanceNameId");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.ToTable("AccountsBalanceHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.CheckDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountNameFromId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountNameToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BankNameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly?>("CheckDate")
                        .HasColumnType("date");

                    b.Property<string>("CheckImage")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CheckName")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<int>("CheckNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CheckNumber"));

                    b.Property<DateOnly?>("CheckSignDate")
                        .HasColumnType("date");

                    b.Property<string>("CheckSiteName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CheckStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CheckTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("CheckValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CostCenterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CurrencyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("DueDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NotifyDays")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<DateOnly?>("PaymentDate")
                        .HasColumnType("date");

                    b.Property<string>("RepetitionTimes")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UnderlineCheck")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AccountNameFromId");

                    b.HasIndex("AccountNameToId");

                    b.HasIndex("BankNameId");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CheckStatusId");

                    b.HasIndex("CheckTypeId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("CurrencyDataId");

                    b.ToTable("CheckDetail");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.CostCenter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountMenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountNatureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("NotMenu")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ParentCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AccountMenuId");

                    b.HasIndex("AccountNatureId");

                    b.HasIndex("AccountTypeId");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("ParentCodeId");

                    b.ToTable("CostCenter");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.FinancialCenter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountFicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountNameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FinancialNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FinancialNo"));

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountFicationId");

                    b.HasIndex("AccountNameId");

                    b.HasIndex("CompanyDataId");

                    b.ToTable("FinancialCenter");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.GeneralAccountFooter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountNameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Balance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValueSql("0");

                    b.Property<Guid?>("CostCenterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("Credit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Debit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GeneralAccountHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountNameId");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("GeneralAccountHeaderId");

                    b.ToTable("GeneralAccountFooter");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.GeneralAccountHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CurrencyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GeneralAccountTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("Month")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("0");

                    b.Property<decimal?>("TotalBalance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("TotalCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("TotalDebit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<short?>("Year")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.ToTable("GeneralAccountHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.JournalFooter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountNameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Balance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<Guid?>("CostCenterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("Credit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Debit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("JournalHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountNameId");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("JournalHeaderId");

                    b.ToTable("JournalFooter");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.JournalHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CurrencyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<int>("JournalNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JournalNo"));

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("Month")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("0");

                    b.Property<decimal?>("TotalBalance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("TotalCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("TotalDebit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<short?>("Year")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("CurrencyDataId");

                    b.ToTable("JournalHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.ReservationDebit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CostCenterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly?>("ReservationDate")
                        .HasColumnType("date");

                    b.Property<Guid?>("ReservationFromId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ReservationStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ReservationToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("ReservationUd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ReservationUd"));

                    b.Property<double?>("ReservationValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("ReservationFromId");

                    b.HasIndex("ReservationStatusId");

                    b.HasIndex("ReservationToId");

                    b.ToTable("ReservationDebit");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.ReservationStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ReservationStatus");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.MoneySetting.MoneyPayment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CostCenterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("FromAccountNameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FromCashId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaperNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ToAccountNameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Value")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("FromAccountNameId");

                    b.HasIndex("FromCashId");

                    b.HasIndex("ToAccountNameId");

                    b.ToTable("MoneyPayment");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.MoneySetting.MoneyReceive", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CostCenterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("FromAccountNameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FromCashId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaperNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ToAccountNameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Value")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("FromAccountNameId");

                    b.HasIndex("FromCashId");

                    b.HasIndex("ToAccountNameId");

                    b.ToTable("MoneyReceive");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.AccountFication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AccountFication");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.AccountFiscalYear", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly?>("CloseDate")
                        .HasColumnType("date");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyDataId");

                    b.ToTable("AccountFiscalYear");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.AccountMenu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AccountMenu");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.AccountNature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AccountNature");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.AccountType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AccountType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.BankCode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CityCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CountryCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CurrencyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GovernorateCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityCodeId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("CountryCodeId");

                    b.HasIndex("CurrencyDataId");

                    b.HasIndex("GovernorateCodeId");

                    b.ToTable("BankCode");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.CheckStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CheckStatus");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.CheckType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CheckType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.GeneralAccountType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GeneralAccountType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.JournalEntriesTypes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JournalEntriesTypes");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.LockersData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountNameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountNameId");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.ToTable("LockersData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.PaymentMode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeTax")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PaymentMode");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.BankSystem.BankAtm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AtmAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AtmCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AtmLat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AtmLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AtmLong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AtmModel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AtmSerial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AtmcounterForMonth")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<Guid?>("BankCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CityCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CountryCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GovernorateCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("BankCodeId");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CityCodeId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("CountryCodeId");

                    b.HasIndex("GovernorateCodeId");

                    b.ToTable("BankAtm");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.BankSystem.BankContract", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AtmNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<Guid?>("BankCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("ContractValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BankCodeId");

                    b.ToTable("BankContract");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.BankSystem.OrderStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OrderStatus");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.BankSystem.WorkPlan.WorkPlanComment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CommentDamag")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("WorkPlanFooterId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WorkPlanFooterId");

                    b.ToTable("WorkPlanComment");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.BankSystem.WorkPlan.WorkPlanDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderNumberDetails")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderNumberDetails"));

                    b.Property<Guid?>("WorkPlanFooterId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WorkPlanFooterId");

                    b.ToTable("WorkPlanDetail");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.BankSystem.WorkPlan.WorkPlanFooter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AppUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("BankAtmid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte?>("CounterForRejectTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderNumberFooter")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderNumberFooter"));

                    b.Property<Guid?>("OrderStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("WorkPlanHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("BankAtmid");

                    b.HasIndex("OrderStatusId");

                    b.HasIndex("WorkPlanHeaderId");

                    b.ToTable("WorkPlanFooter");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.BankSystem.WorkPlan.WorkPlanHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BankCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CityCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CountryCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GovernorateCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BankCodeId");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CityCodeId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("CountryCodeId");

                    b.HasIndex("GovernorateCodeId");

                    b.ToTable("WorkPlanHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.CityCode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GovernorateCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GovernorateCodeId");

                    b.ToTable("CityCode");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.CountryCode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeTaxTabel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CountryCode");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.CurrencyData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ExchangeRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CurrencyData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.GovernorateCode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CountryCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryCodeId");

                    b.ToTable("GovernorateCode");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdditionalInformation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("BranchManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchTaxId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BranchesDataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BranchesDataId"));

                    b.Property<Guid?>("CityCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CountryCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GovernorateCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BranchManagerId");

                    b.HasIndex("CityCodeId");

                    b.HasIndex("CompanyDataId");

                    b.ToTable("BranchesData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.ToTable("BranchesList");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ActivityCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CityCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CompanyDataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyDataId"));

                    b.Property<Guid?>("CountryCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GovernorateCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ActivityCodeId");

                    b.HasIndex("CityCodeId");

                    b.ToTable("CompanyData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Contractors.ConContractorData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountsNameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdditionalInformation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("CityCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CommercialRegisterNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContractorBarCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ContractorGroupsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContractorManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContractorName")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<Guid?>("CountryCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("GovernorateCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool?>("IsCompany")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCustomer")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActiveTax")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("TaxRegistrationNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TaxesErrand")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AccountsNameId");

                    b.HasIndex("CityCodeId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("ContractorGroupsId");

                    b.HasIndex("ContractorManagerId");

                    b.HasIndex("CountryCodeId");

                    b.HasIndex("GovernorateCodeId");

                    b.ToTable("ConContractorData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Contractors.ConContractorExtractDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContractorMasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("ImplementationRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("NetValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<Guid?>("ProjectItemsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ContractorMasterId");

                    b.HasIndex("ProjectItemsId");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("ConContractorExtractDetail");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Contractors.ConContractorExtractMaster", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContractorDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumberLetters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProjectDataId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("ContractorDataId");

                    b.HasIndex("ProjectDataId");

                    b.ToTable("ConContractorExtractMaster");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Contractors.ConProjectItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<double?>("ItemValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyDataId");

                    b.ToTable("ConProjectItem");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Contractors.ConProjectsData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountsNameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectPeriod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ProjectValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("AccountsNameId");

                    b.HasIndex("CompanyDataId");

                    b.ToTable("ConProjectsData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.CostAccounting.CostGeneralAccountFooter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountNameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("Credit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Debit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("JournalHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountNameId");

                    b.HasIndex("JournalHeaderId");

                    b.ToTable("CostGeneralAccountFooter");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.CostAccounting.CostGeneralAccountHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CurrencyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("Month")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("0");

                    b.Property<decimal?>("TotalBalance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("TotalCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("TotalDebit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<short?>("Year")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("CurrencyDataId");

                    b.ToTable("CostGeneralAccountHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.CostAccounting.CostJournalFooter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountNameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("Credit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Debit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("JournalHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountNameId");

                    b.HasIndex("JournalHeaderId");

                    b.ToTable("CostJournalFooter");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.CostAccounting.CostJournalHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CurrencyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("Month")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("0");

                    b.Property<decimal?>("TotalBalance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("TotalCredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("TotalDebit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<short?>("Year")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("CurrencyDataId");

                    b.ToTable("CostJournalHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.EInvoicing.APIURLTaxServer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("APIName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("APIURLTaxPostmanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<string>("APIURLtax")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ServerTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.ToTable("APIURLTaxServer");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.EInvoicing.ClientAccessToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ClientDataTokenId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeOnly?>("CreateTime")
                        .HasColumnType("time");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExpiresIn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Scope")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TokenType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("ClientDataTokenId");

                    b.ToTable("ClientAccessToken");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.EInvoicing.ClientDataToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientSecret1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientSecret2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.ToTable("ClientDataToken");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.EInvoicing.CustomerModes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CustomerModes");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.EInvoicing.DeliveryModes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeTax")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DeliveryModes");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.EInvoicing.DocumentsMode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("DocumentTypeVersion")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DocumentsMode");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.EInvoicing.InvoicingResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HashKey")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InternalId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("LongId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Uuid")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("InvoicingResult");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.EInvoicing.ItemsCodeType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ItemsCodeType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.EInvoicing.SalesTaxInvoiceFooter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ItemsHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ReturnSalesFooterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SalesInvoiceFooterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("TaxAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<Guid?>("TaxableTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ItemsHeaderId");

                    b.HasIndex("ReturnSalesFooterId");

                    b.HasIndex("SalesInvoiceFooterId");

                    b.HasIndex("TaxableTypeId");

                    b.ToTable("SalesTaxInvoiceFooter");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.EInvoicing.SalesTaxInvoiceHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ReturnSalesHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SalesInvoiceHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("TaxAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<Guid?>("TaxableTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("ReturnSalesHeaderId");

                    b.HasIndex("SalesInvoiceHeaderId");

                    b.HasIndex("TaxableTypeId");

                    b.ToTable("SalesTaxInvoiceHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.EInvoicing.ServerType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ServerType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.EInvoicing.TaxableType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LevelCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TaxCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("TaxPercent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<string>("TaxTable")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("Id");

                    b.HasIndex("ParentCodeId");

                    b.ToTable("TaxableType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Education.EduAcademyCourse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CourseLeavel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("CourseValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentCourseId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("ParentCourseId");

                    b.ToTable("EduAcademyCourse");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Education.EduQuestionDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("AnswerCheck")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("QuestionsAnswer")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("QuestionsMasterId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("QuestionsMasterId");

                    b.ToTable("EduQuestionDetail");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Education.EduQuestionType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EduQuestionType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Education.EduQuestionsMaster", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AcademyCourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("QuestionTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AcademyCourseId");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("QuestionTypeId");

                    b.ToTable("EduQuestionsMaster");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Education.EduStudentCourse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AcademyCourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("StudentDataId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StudentDataId");

                    b.ToTable("EduStudentCourse");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Education.EduStudentData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CityCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CountryCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly?>("DateBirth")
                        .HasColumnType("date");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EducationDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EducationeStimateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GenderDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GovernorateCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RecruitmentDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SocialDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StudentAddress")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("StudentAge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StudentBarCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UniversityDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("YareEducation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CityCodeId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("EducationDataId");

                    b.HasIndex("EducationeStimateId");

                    b.HasIndex("GenderDataId");

                    b.HasIndex("RecruitmentDataId");

                    b.HasIndex("SocialDataId");

                    b.HasIndex("UniversityDataId");

                    b.ToTable("EduStudentData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Education.EduStudentPayment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AcademyCourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("Credit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Debit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly?>("PaymentDate")
                        .HasColumnType("date");

                    b.Property<Guid?>("StudentDataId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AcademyCourseId");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("StudentDataId");

                    b.ToTable("EduStudentPayment");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Education.EduStudentQuestion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("QuestionAnswerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("QuestionValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<Guid?>("QuestionsAnswerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StudentAnswer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StudentDataId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("QuestionAnswerId");

                    b.HasIndex("StudentDataId");

                    b.ToTable("EduStudentQuestion");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Fixed.AccountFixedDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountFicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountNameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountNameLevel2Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly?>("BuyDate")
                        .HasColumnType("date");

                    b.Property<decimal?>("BuyValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValueSql("0");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CostCenterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("CurrentValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValueSql("0");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepreciationAccId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<DateOnly?>("LastUpdateDate")
                        .HasColumnType("date");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("Months")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("0");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Rate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<string>("Responsible")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountFicationId");

                    b.HasIndex("AccountNameId");

                    b.HasIndex("AccountNameLevel2Id");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("CostCenterId");

                    b.ToTable("AccountFixedDetail");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LevelCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentCode")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EducationData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EducationData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EducationStimate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EducationStimate");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpAccept", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EmpAcceptTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmployeesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Value")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("EmpAcceptTypeId");

                    b.HasIndex("EmployeesDataId");

                    b.ToTable("EmpAccept");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpAcceptType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmpAcceptType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpAttend", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AttendTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EmpDayWeekId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmployeesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AttendTypeId");

                    b.HasIndex("EmpDayWeekId");

                    b.HasIndex("EmployeesDataId");

                    b.ToTable("EmpAttend");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpAttendType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmpAttendType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpContractFooter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EmpContractHid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmpElementDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmpElementTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("ValueElment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("EmpContractHid");

                    b.HasIndex("EmpElementDataId");

                    b.HasIndex("EmpElementTypeId");

                    b.ToTable("EmpContractFooter");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpContractHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EmpContractTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmployeesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("EmpContractTypeId");

                    b.HasIndex("EmployeesDataId");

                    b.ToTable("EmpContractHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpContractType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmpContractType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpDayWeek", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmpDayWeek");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpElementData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EmpElemntNaturId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmpElemntNatureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmpElemntTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("MonthNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmpElemntNatureId");

                    b.HasIndex("EmpElemntTypeId");

                    b.ToTable("EmpElementData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpElementNature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmpElementNature");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpElementType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmpElementType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpGroupWork", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Accept")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("OverTime")
                        .HasColumnType("bit");

                    b.Property<TimeOnly?>("TotalTime")
                        .HasColumnType("time");

                    b.Property<bool?>("TotalTimeNotActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.ToTable("EmpGroupWork");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpLevel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EmpLevelTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmployeesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Value")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("EmpLevelTypeId");

                    b.HasIndex("EmployeesDataId");

                    b.ToTable("EmpLevel");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpLevelType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmpLevelType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpLoans", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EmpLoansTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmployeesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("MonthLoans")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("ValueMonth")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("EmpLoansTypeId");

                    b.HasIndex("EmployeesDataId");

                    b.ToTable("EmpLoans");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpLoansType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmpLoansType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmployeeCourse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Academy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EmployeeDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Years")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeDataId");

                    b.ToTable("EmployeeCourse");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmployeeData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Age")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("BasicSalary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CityCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CountryCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("EducationDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EducationStimateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EducationeStimateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmployeeAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("EmployeeNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeNo"));

                    b.Property<Guid?>("GenderDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GovernorateCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupWorkId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("JobDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<Guid?>("PaymentTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RecruitmentDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SocialDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UniversityDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("YareEducation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CityCodeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EducationDataId");

                    b.HasIndex("EducationStimateId");

                    b.HasIndex("GenderDataId");

                    b.HasIndex("GroupWorkId");

                    b.HasIndex("JobDataId");

                    b.HasIndex("PaymentTypeId");

                    b.HasIndex("RecruitmentDataId");

                    b.HasIndex("SocialDataId");

                    b.HasIndex("UniversityDataId");

                    b.ToTable("EmployeeData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmployeeJob", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EmployeeDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("PayrollValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeDataId");

                    b.ToTable("EmployeeJob");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmployeeSkills", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Darega")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descriptions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EmployeeDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SkillsName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeDataId");

                    b.ToTable("EmployeeSkills");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.FinalData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("ActualDayes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc10")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc11")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc12")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc13")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc14")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc15")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc16")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc17")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc18")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc19")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc20")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc21")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc22")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc23")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc24")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc25")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc26")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc27")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc28")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc29")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc30")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc31")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc32")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc33")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc34")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc35")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc36")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc37")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc38")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc39")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc4")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc40")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc41")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc42")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc43")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc44")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc45")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc46")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc47")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc48")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc49")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc5")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc50")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc51")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc52")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc53")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc54")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc55")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc56")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc57")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc58")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc59")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc6")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc60")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc7")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc8")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc9")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance10")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance11")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance12")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance13")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance14")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance15")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance16")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance17")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance18")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance19")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance20")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance21")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance22")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance23")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance24")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance25")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance26")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance27")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance28")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance29")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance30")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance31")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance32")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance33")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance34")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance35")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance36")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance37")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance38")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance39")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance4")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance40")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance41")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance42")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance43")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance44")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance45")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance46")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance47")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance48")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance49")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance5")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance50")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance51")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance52")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance53")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance54")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance55")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance56")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance57")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance58")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance59")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance6")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance60")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance7")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance8")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance9")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("AllowanceSum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Basicsalary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("CalculatorSalary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("CompFamilyMedicalInsValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("CompMedicalInsValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("CompanyMedicalInsPercent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("DaysAfterLeave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("DaysBeforJoin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc10")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc11")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc12")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc13")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc14")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc15")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc16")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc17")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc18")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc19")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc20")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc21")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc22")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc23")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc24")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc25")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc26")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc27")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc28")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc29")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc30")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc31")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc32")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc33")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc34")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc35")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc36")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc37")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc38")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc39")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc4")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc40")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc41")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc42")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc43")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc44")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc45")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc46")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc47")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc48")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc49")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc5")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc50")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc51")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc52")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc53")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc54")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc55")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc56")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc57")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc58")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc59")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc6")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc60")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc7")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc8")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc9")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction10")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction11")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction12")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction13")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction14")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction15")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction16")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction17")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction18")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction19")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction20")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction21")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction22")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction23")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction24")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction25")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction26")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction27")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction28")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction29")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction30")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction31")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction32")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction33")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction34")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction35")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction36")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction37")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction38")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction39")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction4")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction40")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction41")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction42")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction43")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction44")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction45")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction46")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction47")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction48")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction49")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction5")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction50")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction51")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction52")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction53")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction54")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction55")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction56")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction57")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction58")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction59")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction6")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction60")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction7")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction8")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction9")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("DeductionSum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("EmpFamilyMedicalInsValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("EmpMedicalInsPercent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("EmpMedicalInsValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<Guid>("EmployeeDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmployeesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GenralDescripation1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenralDescripation2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenralDescripation3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenralDescripation4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenralDescripation5")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InsuranceStatCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Month")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("MonthBasicSalary1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("MonthBasicSalary10")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("MonthBasicSalary11")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("MonthBasicSalary12")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("MonthBasicSalary2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("MonthBasicSalary3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("MonthBasicSalary4")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("MonthBasicSalary5")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("MonthBasicSalary6")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("MonthBasicSalary7")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("MonthBasicSalary8")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("MonthBasicSalary9")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<int?>("MonthDays")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("NSalaryExchanged")
                        .HasColumnType("bit");

                    b.Property<int?>("SubDepCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("SumBasicSalary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("SumMonthBasicSalary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Tax")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("TaxExemptBool")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("TaxableBool")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<int?>("Year")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("EmployeeDataId");

                    b.ToTable("FinalData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.FinalDataFixed", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("ActualDayes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc10")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc11")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc12")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc13")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc14")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc15")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc16")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc17")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc18")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc19")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc20")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc21")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc22")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc23")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc24")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc25")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc26")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc27")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc28")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc29")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc30")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc31")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc32")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc33")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc34")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc35")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc36")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc37")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc38")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc39")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc4")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc40")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc41")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc42")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc43")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc44")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc45")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc46")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc47")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc48")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc49")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc5")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc50")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc51")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc52")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc53")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc54")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc55")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc56")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc57")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc58")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc59")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc6")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc60")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc7")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc8")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allc9")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance10")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance11")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance12")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance13")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance14")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance15")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance16")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance17")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance18")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance19")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance20")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance21")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance22")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance23")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance24")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance25")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance26")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance27")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance28")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance29")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance30")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance31")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance32")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance33")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance34")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance35")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance36")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance37")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance38")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance39")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance4")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance40")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance41")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance42")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance43")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance44")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance45")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance46")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance47")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance48")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance49")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance5")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance50")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance51")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance52")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance53")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance54")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance55")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance56")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance57")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance58")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance59")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance6")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance60")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance7")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance8")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Allowance9")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("AllowanceSum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Basicsalary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("CalculatorSalary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("CompFamilyMedicalInsValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("CompMedicalInsValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("CompanyMedicalInsPercent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("DaysAfterLeave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("DaysBeforJoin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc10")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc11")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc12")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc13")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc14")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc15")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc16")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc17")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc18")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc19")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc20")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc21")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc22")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc23")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc24")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc25")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc26")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc27")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc28")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc29")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc30")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc31")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc32")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc33")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc34")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc35")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc36")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc37")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc38")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc39")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc4")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc40")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc41")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc42")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc43")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc44")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc45")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc46")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc47")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc48")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc49")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc5")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc50")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc51")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc52")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc53")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc54")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc55")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc56")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc57")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc58")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc59")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc6")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc60")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc7")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc8")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Dedc9")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction10")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction11")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction12")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction13")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction14")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction15")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction16")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction17")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction18")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction19")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction20")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction21")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction22")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction23")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction24")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction25")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction26")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction27")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction28")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction29")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction30")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction31")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction32")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction33")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction34")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction35")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction36")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction37")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction38")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction39")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction4")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction40")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction41")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction42")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction43")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction44")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction45")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction46")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction47")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction48")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction49")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction5")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction50")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction51")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction52")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction53")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction54")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction55")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction56")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction57")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction58")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction59")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction6")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction60")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction7")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction8")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Deduction9")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("DeductionSum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("EmpFamilyMedicalInsValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("EmpMedicalInsPercent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("EmpMedicalInsValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<Guid>("EmployeeDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmployeesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GenralDescripation1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenralDescripation2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenralDescripation3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenralDescripation4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenralDescripation5")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InsuranceStatCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Month")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("MonthBasicSalary1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("MonthBasicSalary10")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("MonthBasicSalary11")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("MonthBasicSalary12")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("MonthBasicSalary2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("MonthBasicSalary3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("MonthBasicSalary4")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("MonthBasicSalary5")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("MonthBasicSalary6")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("MonthBasicSalary7")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("MonthBasicSalary8")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("MonthBasicSalary9")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<int?>("MonthDays")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("NSalaryExchanged")
                        .HasColumnType("bit");

                    b.Property<int?>("SubDepCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("SumBasicSalary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("SumMonthBasicSalary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("Tax")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("TaxExemptBool")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("TaxableBool")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<int?>("Year")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("EmployeeDataId");

                    b.ToTable("FinalDataFixed");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.JobData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JobData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.RecruitmentData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RecruitmentData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.SocialData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SocialData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.StatusData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StatusData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.UniversityData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UniversityData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HotelSetting.HotelPayment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("Credit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<Guid?>("CustomerDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Debit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("HotelReservationMasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly?>("PaymentDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("CustomerDataId");

                    b.HasIndex("HotelReservationMasterId");

                    b.ToTable("HotelPayment");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HotelSetting.HotelReservationDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ReservationMasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ServicesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ReservationMasterId");

                    b.HasIndex("ServicesId");

                    b.ToTable("HotelReservationDetail");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HotelSetting.HotelReservationMaster", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CustomerDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly?>("EntryTime")
                        .HasColumnType("time");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NumberDays")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<TimeOnly?>("OutTime")
                        .HasColumnType("time");

                    b.Property<double?>("ReservationValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<Guid?>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("CustomerDataId");

                    b.HasIndex("RoomId");

                    b.ToTable("HotelReservationMaster");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HotelSetting.HotelRoomData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<int?>("LevelCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RoomType")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("RoomValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("ParentId");

                    b.ToTable("HotelRoomData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HotelSetting.HotelService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ServicesValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.ToTable("HotelService");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Inventory.AdditionAdjustment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ItemsHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("StoreDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("ItemsHeaderId");

                    b.HasIndex("StoreDataId");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("AdditionAdjustment");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Inventory.InventoryOrderFooter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("InventoryOrderHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ItemsHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UnitTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InventoryOrderHeaderId");

                    b.HasIndex("ItemsHeaderId");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("InventoryOrderFooter");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Inventory.InventoryOrderHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("StoreDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("TotalValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("StoreDataId");

                    b.ToTable("InventoryOrderHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Inventory.InventoryReports.ItemsStock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdditionAdjustmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ItemsBalanceFooterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ItemsHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<Guid?>("RequestReceiptFooterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ReturnPurchasesFooterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ReturnSalesFooterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SalesInvoiceFooterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SettlementDiscountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StoreDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TransformationsDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AdditionAdjustmentId");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("ItemsBalanceFooterId");

                    b.HasIndex("ItemsHeaderId");

                    b.HasIndex("RequestReceiptFooterId");

                    b.HasIndex("ReturnPurchasesFooterId");

                    b.HasIndex("ReturnSalesFooterId");

                    b.HasIndex("SalesInvoiceFooterId");

                    b.HasIndex("SettlementDiscountId");

                    b.HasIndex("StoreDataId");

                    b.HasIndex("TransformationsDetailId");

                    b.ToTable("ItemsStock");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Inventory.InventorySetting.BalanceName", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BalanceName");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Inventory.InventorySetting.StoreData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountsNameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CityCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CountryCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GovernorateCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StoreDataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StoreDataId"));

                    b.Property<Guid?>("StoreManager")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StoreManagerNavigationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StoreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountsNameId");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CityCodeId");

                    b.HasIndex("StoreManagerNavigationId");

                    b.ToTable("StoreData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Inventory.InventoryValuation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InventoryValuation");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Inventory.ItemsBalanceFooter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ItemsBalanceHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ItemsHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UnitTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ItemsBalanceHeaderId");

                    b.HasIndex("ItemsHeaderId");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("ItemsBalanceFooter");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Inventory.ItemsBalanceHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BalanceNameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ItemsBalanceHeaderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("StoreDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("TotalValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("BalanceNameId");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("StoreDataId");

                    b.ToTable("ItemsBalanceHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Inventory.SettlementDiscount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ItemsHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SettlementNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SettlementNo"));

                    b.Property<Guid?>("StoreDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("ItemsHeaderId");

                    b.HasIndex("StoreDataId");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("SettlementDiscount");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Inventory.TransformationsDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ItemsHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TransformationsMasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ItemsHeaderId");

                    b.HasIndex("TransformationsMasterId");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("TransformationsDetail");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Inventory.TransformationsMaster", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FromId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("TotalValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<int>("TransformationNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransformationNo"));

                    b.HasKey("Id");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("FromId");

                    b.HasIndex("ToId");

                    b.ToTable("TransformationsMaster");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ManageItems.ItemSize", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ItemHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("SizeTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("SizeValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("ItemHeaderId");

                    b.HasIndex("SizeTypeId");

                    b.ToTable("ItemSize");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ManageItems.ItemsColor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ColorTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ItemHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("SizeTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ColorTypeId");

                    b.HasIndex("ItemHeaderId");

                    b.HasIndex("SizeTypeId");

                    b.ToTable("ItemsColor");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ManageItems.ItemsGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCodeTax")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LevelCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ParentCodeNavigationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("ParentCodeNavigationId");

                    b.ToTable("ItemsGroup");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ManageItems.ItemsHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActiveTax")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActiveTaxDiscount")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ItemsCodeTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ItemsGroupsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ItemsTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SupplierDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("ItemsCodeTypeId");

                    b.HasIndex("ItemsGroupsId");

                    b.HasIndex("ItemsTypeId");

                    b.HasIndex("SupplierDataId");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("ItemsHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ManageItems.ItemsPricePurchase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DatePurchases")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ItemsHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("ItemsPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("SupplierDataId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ItemsHeaderId");

                    b.HasIndex("SupplierDataId");

                    b.ToTable("ItemsPricePurchase");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ManageItems.ItemsPriceSale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DateSales")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ItemsHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PriceTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("PriceValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<Guid?>("UnitTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ItemsHeaderId");

                    b.HasIndex("PriceTypeId");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("ItemsPriceSale");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ManageItems.ItemsProduction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly?>("ExpiryDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ItemsHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly?>("ProductionDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("ItemsHeaderId");

                    b.ToTable("ItemsProduction");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.ColorType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ColorType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.DiscountType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DiscountPercent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("DiscountValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DiscountType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.ItemsType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ItemsType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.PriceType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PriceType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.SizeType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SizeType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.UnitType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeTax")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UnitType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Medical.MedAnalysisName", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.ToTable("MedAnalysisName");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Medical.MedCustomerDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AnalysisNameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CustomerDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("RaysNameId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AnalysisNameId");

                    b.HasIndex("CustomerDataId");

                    b.HasIndex("RaysNameId");

                    b.ToTable("MedCustomerDetail");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Medical.MedCustomerMedicalService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CustomerDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("MedicalServicesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerDataId");

                    b.HasIndex("MedicalServicesId");

                    b.ToTable("MedCustomerMedicalService");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Medical.MedCustomerSurgicalService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CustomerDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("SurgicalServicesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CustomerDataId");

                    b.HasIndex("SurgicalServicesId");

                    b.ToTable("MedCustomerSurgicalService");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Medical.MedMedicalService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MedicalServicesValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.ToTable("MedMedicalService");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Medical.MedPartnerData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CityCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CountryCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GovernorateCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("JobDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartnerAddress")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PartnerDataBarCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("PartnerDataNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PartnerDataNumber"));

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CityCodeId");

                    b.HasIndex("JobDataId");

                    b.ToTable("MedPartnerData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Medical.MedRaysName", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.ToTable("MedRaysName");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Medical.MedSurgicalService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("SurgicalServicesValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.ToTable("MedSurgicalService");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.POSCasher.PosMachine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MachineSerial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.ToTable("PosMachine");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.POSCasher.PosPaymentDaily", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PaymentModesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("PaymentNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PaymentNo"));

                    b.Property<Guid>("PossalesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PaymentModesId");

                    b.HasIndex("PossalesId");

                    b.ToTable("PosPaymentDaily");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.POSCasher.PosSale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BarcodeInvoice")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CustomerDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("InvoiceNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("InvoiceNo"));

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PriceTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CustomerDataId");

                    b.HasIndex("PriceTypeId");

                    b.ToTable("PosSale");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.POSCasher.PosSalesDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ItemsHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PosSalesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ItemsHeaderId");

                    b.HasIndex("PosSalesId");

                    b.ToTable("PosSalesDetail");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.POSCasher.PosSalesDiscount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("DiscountAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("DiscountRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<Guid?>("DiscountTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PosreturnSalesFooterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PossalesDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PossalesDetailsId");

                    b.ToTable("PosSalesDiscount");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.POSCasher.PosSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DateHeureClose")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateHeureOpen")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EmployeesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("TotalValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("EmployeesDataId");

                    b.ToTable("PosSession");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PAdditionAdjustment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PItemsHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StoreDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("PItemsHeaderId");

                    b.HasIndex("StoreDataId");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("PAdditionAdjustment");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PInventoryOrderFooter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PInventoryHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PItemsHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PPurchaseOrderHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StoreDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("PInventoryHeaderId");

                    b.HasIndex("PItemsHeaderId");

                    b.HasIndex("StoreDataId");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("PInventoryOrderFooter");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PInventoryOrderHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("OrderNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("OrderNo"));

                    b.Property<Guid?>("StoreDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("TotalValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("StoreDataId");

                    b.ToTable("PInventoryOrderHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PItemsBalanceFooter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PItemsBalanceHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PItemsHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PItemsBalanceHeaderId");

                    b.HasIndex("PItemsHeaderId");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("PItemsBalanceFooter");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PItemsBalanceHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BalanceNameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("StoreDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("TotalValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("StoreDataId");

                    b.ToTable("PItemsBalanceHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PItemsGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCodeTax")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("LevelCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ParentCodeNavigationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("ParentCodeNavigationId");

                    b.ToTable("PItemsGroup");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PItemsHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountNameSalesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountsNamePurchasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("InternalCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActiveTax")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActiveTaxDiscount")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ItemsCodeTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ItemsTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("NameL2")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<Guid?>("PitemsGroupsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("StockLimit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<Guid?>("SupplierDataId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AccountNameSalesId");

                    b.HasIndex("AccountsNamePurchasId");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("ItemsTypeId");

                    b.HasIndex("PitemsGroupsId");

                    b.HasIndex("SupplierDataId");

                    b.ToTable("PItemsHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PItemsStock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PAdditionAdjustmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PInventoryOrderFooterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PItemsBalanceFooterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PItemsHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PRequestReceiptFooterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PRequestReservationFooterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PReturnPurchasesFooterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PReturnReservationFooterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PSettlementDiscountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<Guid?>("StoreDataId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("PAdditionAdjustmentId");

                    b.HasIndex("PInventoryOrderFooterId");

                    b.HasIndex("PItemsBalanceFooterId");

                    b.HasIndex("PItemsHeaderId");

                    b.HasIndex("PRequestReceiptFooterId");

                    b.HasIndex("PRequestReservationFooterId");

                    b.HasIndex("PReturnPurchasesFooterId");

                    b.HasIndex("PReturnReservationFooterId");

                    b.HasIndex("PSettlementDiscountId");

                    b.HasIndex("StoreDataId");

                    b.ToTable("PItemsStock");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PPurchasesInvoiceFooter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<double?>("ItemNetValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PItemsHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PPurchasesInvoiceHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PItemsHeaderId");

                    b.HasIndex("PPurchasesInvoiceHeaderId");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("PPurchasesInvoiceFooter");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PPurchasesInvoiceHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BarcodeInvoice")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DocumentsModesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("InvoiceNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("InvoiceNo"));

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PrequestReceiptHeaderid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SuppliersDataid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("PrequestReceiptHeaderid");

                    b.HasIndex("SuppliersDataid");

                    b.ToTable("PPurchasesInvoiceHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PRequestReceiptFooter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PItemsHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PRequestReceiptHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PItemsHeaderId");

                    b.HasIndex("PRequestReceiptHeaderId");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("PRequestReceiptFooter");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PRequestReceiptHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PpurchaseOrderHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("RequestReceiptNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RequestReceiptNo"));

                    b.Property<Guid?>("StoreDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("TotalValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("PpurchaseOrderHeaderId");

                    b.HasIndex("StoreDataId");

                    b.ToTable("PRequestReceiptHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PRequestReservationFooter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PItemsHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PrequestReservationHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PItemsHeaderId");

                    b.HasIndex("PrequestReservationHeaderId");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("PRequestReservationFooter");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PRequestReservationHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ReceiptNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ReceiptNo"));

                    b.Property<double?>("TotalValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.ToTable("PRequestReservationHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PReturnPurchasesFooter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PitemsHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PreturnPurchasesHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PitemsHeaderId");

                    b.HasIndex("PreturnPurchasesHeaderId");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("PReturnPurchasesFooter");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PReturnPurchasesHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BarcodeInvoice")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DocumentsModesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PaymentModesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PinvoicePurchasesHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("ReturnNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ReturnNo"));

                    b.Property<Guid?>("SuppliersDataId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("DocumentsModesId");

                    b.HasIndex("PaymentModesId");

                    b.HasIndex("PinvoicePurchasesHeaderId");

                    b.HasIndex("SuppliersDataId");

                    b.ToTable("PReturnPurchasesHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PReturnReservationFooter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PitemsHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PreturnReservationHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PitemsHeaderId");

                    b.HasIndex("PreturnReservationHeaderId");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("PReturnReservationFooter");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PReturnReservationHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ReceiptNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ReceiptNo"));

                    b.Property<double?>("TotalValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.ToTable("PReturnReservationHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PSettlementDiscount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ItemsHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("StoreDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("ItemsHeaderId");

                    b.HasIndex("StoreDataId");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("PSettlementDiscount");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ProgramSetting.ActivityCode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CodeTax")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ActivityCode");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ProgramSetting.ApplicationMenu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<int?>("LevelCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<long?>("MenuUd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentCode")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.ToTable("ApplicationMenu");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ProgramSetting.ApplicationMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApplicationMessage");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ProgramSetting.ApplicationSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("AccountNumberActivate")
                        .HasColumnType("bit");

                    b.Property<string>("AccountNumberValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("BarCodeItems")
                        .HasColumnType("bit");

                    b.Property<string>("BarCodeStartValue")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CountryCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("InventoryValuationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("SettingNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SettingNumber"));

                    b.HasKey("Id");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("CountryCodeId");

                    b.HasIndex("InventoryValuationId");

                    b.ToTable("ApplicationSetting");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ProgramSetting.AspPermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("AddForm")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ApplicationMenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AspNetUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("DeleteForm")
                        .HasColumnType("bit");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("EditForm")
                        .HasColumnType("bit");

                    b.Property<bool?>("ExportDataGrid")
                        .HasColumnType("bit");

                    b.Property<bool?>("ExportFile")
                        .HasColumnType("bit");

                    b.Property<bool?>("FilterForm")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("OpenForm")
                        .HasColumnType("bit");

                    b.Property<bool?>("PrinterReport")
                        .HasColumnType("bit");

                    b.Property<bool?>("ReadForm")
                        .HasColumnType("bit");

                    b.Property<bool?>("SearchForm")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationMenuId");

                    b.HasIndex("AspNetUserId");

                    b.ToTable("AspPermission");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ProgramSetting.AttachmentFilesType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AttachmentFilesType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ProgramSetting.AttatchmentFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AttachmentFilesTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AttachmentNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilesUrl")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AttachmentFilesTypeId");

                    b.ToTable("AttatchmentFile");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ProgramSetting.DatabaseDescription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LeavelCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ParentCodeNavigationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParentCodeNavigationId");

                    b.ToTable("DatabaseDescription");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ProgramSetting.GenderData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GenderData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ProgramSetting.HomePage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardTextLeft")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardTextRight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FooterText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("HomePage");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ProgramSetting.Month", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Month");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ProgramSetting.ProgramOption", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ApplicationMenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationMenuId");

                    b.ToTable("ProgramOption");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ProgramSetting.ReportsName", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ApplicationMenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationMenuId");

                    b.ToTable("ReportsName");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Purchasing.PurchasesInvoiceDiscount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("DiscountAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("DiscountRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<Guid?>("DiscountTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PurchasesInvoiceFooterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ReturnPurchasesFooterId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DiscountTypeId");

                    b.HasIndex("PurchasesInvoiceFooterId");

                    b.HasIndex("ReturnPurchasesFooterId");

                    b.ToTable("PurchasesInvoiceDiscount");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Purchasing.PurchasesInvoiceFooter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ItemsHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PurchasesInvoiceHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ItemsHeaderId");

                    b.HasIndex("PurchasesInvoiceHeaderId");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("PurchasesInvoiceFooter");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Purchasing.PurchasesInvoiceHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BarcodeInvoice")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DocumentsModesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("InvoiceNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceNo"));

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PaymentModesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RequestReceiptHeaderid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SuppliersDataid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("DocumentsModesId");

                    b.HasIndex("PaymentModesId");

                    b.HasIndex("RequestReceiptHeaderid");

                    b.HasIndex("SuppliersDataid");

                    b.ToTable("PurchasesInvoiceHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Purchasing.PurchasesOrderFooter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ItemsHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PurchaseOrderHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ItemsHeaderId");

                    b.HasIndex("PurchaseOrderHeaderId");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("PurchasesOrderFooter");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Purchasing.PurchasesOrderHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderNo"));

                    b.Property<Guid?>("SupplierDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("TotalValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("SupplierDataId");

                    b.ToTable("PurchasesOrderHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Purchasing.PurchasesTaxInvoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("InvoicePurchasesFooterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ReturnPurchasesFooterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("TaxAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<Guid?>("TaxableTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InvoicePurchasesFooterId");

                    b.HasIndex("ReturnPurchasesFooterId");

                    b.HasIndex("TaxableTypeId");

                    b.ToTable("PurchasesTaxInvoice");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Purchasing.RequestReceiptFooter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ItemsHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("RequestReceiptHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ItemsHeaderId");

                    b.HasIndex("RequestReceiptHeaderId");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("RequestReceiptFooter");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Purchasing.RequestReceiptHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PurchaseOrderHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RequestReceiptNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestReceiptNo"));

                    b.Property<Guid?>("StoreDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("TotalValue")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("PurchaseOrderHeaderId");

                    b.HasIndex("StoreDataId");

                    b.ToTable("RequestReceiptHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Purchasing.ReturnPurchasesFooter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ItemsHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ReturnPurchasesHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ItemsHeaderId");

                    b.HasIndex("ReturnPurchasesHeaderId");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("ReturnPurchasesFooter");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Purchasing.ReturnPurchasesHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BarcodeInvoice")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DocumentsModesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PaymentModesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PurchasesInvoiceHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ReturnNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReturnNo"));

                    b.Property<Guid?>("SuppliersDataId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("DocumentsModesId");

                    b.HasIndex("PaymentModesId");

                    b.HasIndex("PurchasesInvoiceHeaderId");

                    b.HasIndex("SuppliersDataId");

                    b.ToTable("ReturnPurchasesHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Purchasing.SupplierData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountsNameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdditionalInformation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("CityCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CommercialRegisterNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CountryCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<Guid?>("GovernorateCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsCompany")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCustomer")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActiveTax")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("SupplierBarCode")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<Guid?>("SupplierGroupsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SupplierManager")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SupplierManagerNavigationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("TaxRegistrationNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TaxesErrand")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AccountsNameId");

                    b.HasIndex("CityCodeId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("SupplierGroupsId");

                    b.HasIndex("SupplierManagerNavigationId");

                    b.ToTable("SupplierData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Purchasing.SupplierGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SupplierGroup");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.CrmContact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CrmContact");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.CrmOpportunity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CloseDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ContactId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.HasIndex("StatusId");

                    b.ToTable("CrmOpportunity");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.CrmOpportunityStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CrmOpportunityStatus");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.CrmTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OpportunityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OpportunityId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TypeId");

                    b.ToTable("CrmTask");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.CrmTaskType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CrmTaskType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.CrmTaskstatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CrmTaskstatus");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.RntActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.ToTable("RntActivity");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.RntContractsData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContractsHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContractsHid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FloorsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UnitTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ContractsHeaderId");

                    b.HasIndex("FloorsId");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("RntContractsData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.RntContractsHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ActivitiesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<Guid>("ActivitiesId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ContractCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractCode"));

                    b.Property<int?>("ContractMonthes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CustomerDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("IncreasingDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InsuranceMonthes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RentalMonthes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("ActivitiesId1");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("CustomerDataId");

                    b.ToTable("RntContractsHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.RntCustomerPercentData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CustomerPercentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("RevenuPercent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("RevenuValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("CustomerPercentId");

                    b.ToTable("RntCustomerPercentData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.RntCustomerPercentHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CustomerDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("NetRevenu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("TotalExpenses")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("TotalRevenu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("CustomerDataId");

                    b.ToTable("RntCustomerPercentHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.RntExpense", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("ExpenseCodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ExpenseDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ExpenseTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("ExpenseValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("ExpenseTypeId");

                    b.ToTable("RntExpense");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.RntExpenseType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.ToTable("RntExpenseType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.RntFloor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FloorsCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FloorsCode"));

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LevelCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ParentCodeNavigationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("ParentCodeNavigationId");

                    b.ToTable("RntFloor");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.RntReceiptsData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DiscountValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("DueValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("NetValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime?>("PaidDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("PaidValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<Guid?>("ReceiptHeader")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReceiptHeaderNavigationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReciptNo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("RemainingValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("ReceiptHeaderNavigationId");

                    b.ToTable("RntReceiptsData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.RntReceiptsHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContractsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CurrencyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReceiptCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReceiptCode"));

                    b.Property<DateTime?>("ReceiptDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("ContractsId");

                    b.HasIndex("CurrencyDataId");

                    b.ToTable("RntReceiptsHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Sales.CustomerCategories", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CustomerCategories");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Sales.CustomerData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountsNameSalesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdditionalInformation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("CityCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CustomerBarCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CustomerCategoriesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerModesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<Guid>("RepresentativeDataId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AccountsNameSalesId");

                    b.HasIndex("CityCodeId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("CustomerCategoriesId");

                    b.HasIndex("CustomerModesId");

                    b.HasIndex("RepresentativeDataId");

                    b.ToTable("CustomerData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Sales.DelegateData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountsNameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CityCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CountryCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DelegateAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("DelegateBarCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DelegateNationalId")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GovernorateCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("SalesValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("AccountsNameId");

                    b.HasIndex("CityCodeId");

                    b.HasIndex("CompanyDataId");

                    b.ToTable("DelegateData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Sales.InstallmentFooter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("InstallmentHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("InstallmentNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("InstallmentValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("PostedInstallment")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("InstallmentHeaderId");

                    b.ToTable("InstallmentFooter");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Sales.InstallmentHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CustomerDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Declaration")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal?>("DelayInterestRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,0)")
                        .HasDefaultValueSql("0");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileUrl")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<double?>("FirstBatch")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<int?>("InstallmentPeriod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<decimal?>("InterestRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,0)")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("NetValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<int?>("NumberInstallments")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("TotalValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("ValueInstallment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("CustomerDataId");

                    b.ToTable("InstallmentHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Sales.RequestReservationFooter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ItemsHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("RequestReservationHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ItemsHeaderId");

                    b.HasIndex("RequestReservationHeaderId");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("RequestReservationFooter");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Sales.RequestReservationHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReceiptNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReceiptNo"));

                    b.Property<double?>("TotalValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.ToTable("RequestReservationHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Sales.ReturnSalesFooter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ItemsHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ReturnSalesHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ItemsHeaderId");

                    b.HasIndex("ReturnSalesHeaderId");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("ReturnSalesFooter");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Sales.ReturnSalesHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BarcodeReturn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CustomerDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DocumentsModesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InvoiceSalesHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PaymentModesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PriceTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("ReturnNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ReturnNo"));

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("CustomerDataId");

                    b.HasIndex("DocumentsModesId");

                    b.HasIndex("InvoiceSalesHeaderId");

                    b.HasIndex("PaymentModesId");

                    b.HasIndex("PriceTypeId");

                    b.ToTable("ReturnSalesHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Sales.SalesInvoiceDelivery", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Approach")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CountryOfOriginId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DateValidity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeliveryModesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("DeliveryValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<string>("ExportPort")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("GrossWeight")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,0)")
                        .HasDefaultValueSql("0");

                    b.Property<Guid?>("InvoiceSalesHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("NetWeight")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,0)")
                        .HasDefaultValueSql("0");

                    b.Property<string>("Packaging")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Terms")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryModesId");

                    b.HasIndex("InvoiceSalesHeaderId");

                    b.ToTable("SalesInvoiceDelivery");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Sales.SalesInvoiceDiscount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("DiscountAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double?>("DiscountRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<Guid?>("DiscountTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ReturnSalesFooterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SalesInvoiceFooterId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DiscountTypeId");

                    b.HasIndex("ReturnSalesFooterId");

                    b.HasIndex("SalesInvoiceFooterId")
                        .IsUnique()
                        .HasFilter("[SalesInvoiceFooterId] IS NOT NULL");

                    b.ToTable("SalesInvoiceDiscount");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Sales.SalesInvoiceFooter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ItemsHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SalesInvoiceHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ItemsHeaderId");

                    b.HasIndex("SalesInvoiceHeaderId");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("SalesInvoiceFooter");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Sales.SalesInvoiceHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BarcodeInvoice")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CustomerDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("DocumentsModesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("InvoiceNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceNo"));

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PaymentModesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PriceTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RequestReservationHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.HasIndex("CustomerDataId");

                    b.HasIndex("DocumentsModesId");

                    b.HasIndex("PaymentModesId");

                    b.HasIndex("PriceTypeId");

                    b.HasIndex("RequestReservationHeaderId");

                    b.ToTable("SalesInvoiceHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Sales.SalesInvoicePayment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BankCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PaymentModesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SalesInvoiceHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BankCodeId");

                    b.HasIndex("PaymentModesId");

                    b.HasIndex("SalesInvoiceHeaderId");

                    b.ToTable("SalesInvoicePayment");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Security.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<Guid?>("BankCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<Guid?>("FacebookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BankCodeId");

                    b.ToTable("AppUser");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.UserSetting.ActivityLogs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LoginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ActivityLogs");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.UserSetting.Tenant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConnectionString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameL2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tenant");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.UserSetting.TenantUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CurrentUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTenantAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TenantUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TenantUserId"));

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("TenantUser");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.UserSetting.UsePermissions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("AddForm")
                        .HasColumnType("bit");

                    b.Property<string>("AppUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("ApplicationMenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("DeleteForm")
                        .HasColumnType("bit");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("EditForm")
                        .HasColumnType("bit");

                    b.Property<bool?>("ExportDataGrid")
                        .HasColumnType("bit");

                    b.Property<bool?>("ExportFile")
                        .HasColumnType("bit");

                    b.Property<bool?>("FilterForm")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("OpenForm")
                        .HasColumnType("bit");

                    b.Property<bool?>("PrinterReport")
                        .HasColumnType("bit");

                    b.Property<bool?>("ReadForm")
                        .HasColumnType("bit");

                    b.Property<bool?>("SearchForm")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("ApplicationMenuId");

                    b.ToTable("UsePermissions");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.WhatsApp.WhatsAppCompanyData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly?>("CreateDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly?>("ExpireDate")
                        .HasColumnType("date");

                    b.Property<string>("InstanceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("MobilNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WhatsAppCompanyData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.WhatsApp.WhatsAppMessageData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<DateOnly?>("MessageDate")
                        .HasColumnType("date");

                    b.Property<string>("MessageDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MessageNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageNo"));

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BranchesDataId");

                    b.HasIndex("CompanyDataId");

                    b.ToTable("WhatsAppMessageData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.WhatsApp.WhatsAppResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CustomerDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("MessageDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResultNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("SendDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerDataId");

                    b.HasIndex("MessageDataId");

                    b.ToTable("WhatsAppResult");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.WhatsApp.WhatsAppUrl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotActive")
                        .HasColumnType("bit");

                    b.Property<string>("MessageType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WhatsAppUrl");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.AccountName", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.AccountFication", "AccountFication")
                        .WithMany("AccountNames")
                        .HasForeignKey("AccountFicationId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.AccountMenu", "AccountMenu")
                        .WithMany("AccountNames")
                        .HasForeignKey("AccountMenuId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.AccountName", null)
                        .WithMany("InverseParentCodeNavigation")
                        .HasForeignKey("AccountNameId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.AccountNature", "AccountNature")
                        .WithMany("AccountNames")
                        .HasForeignKey("AccountNatureId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.AccountType", "AccountType")
                        .WithMany("AccountNames")
                        .HasForeignKey("AccountTypeId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany("AccountNames")
                        .HasForeignKey("CompanyDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.CurrencyData", "CurrencyData")
                        .WithMany("AccountNames")
                        .HasForeignKey("CurrencyDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.AccountName", "ParentCodeNavigation")
                        .WithMany()
                        .HasForeignKey("ParentCode")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("AccountFication");

                    b.Navigation("AccountMenu");

                    b.Navigation("AccountNature");

                    b.Navigation("AccountType");

                    b.Navigation("CompanyData");

                    b.Navigation("CurrencyData");

                    b.Navigation("ParentCodeNavigation");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.AccountsBalanceFooter", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.AccountFication", null)
                        .WithMany("AccountsBalanceFooters")
                        .HasForeignKey("AccountFicationId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.AccountName", null)
                        .WithMany("AccountsBalanceFooters")
                        .HasForeignKey("AccountNameId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.AccountsBalanceHeader", null)
                        .WithMany("AccountsBalanceFooters")
                        .HasForeignKey("AccountsBalanceHeaderId");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.AccountsBalanceHeader", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Inventory.InventorySetting.BalanceName", "BalanceName")
                        .WithMany("AccountsBalanceHeaders")
                        .HasForeignKey("BalanceNameId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany()
                        .HasForeignKey("BranchesDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany("AccountsBalanceHeaders")
                        .HasForeignKey("CompanyDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BalanceName");

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.CheckDetail", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.AccountName", "AccountNameFrom")
                        .WithMany("CheckDetailAccountNameFromNavigations")
                        .HasForeignKey("AccountNameFromId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.AccountName", "AccountNameTo")
                        .WithMany("CheckDetailAccountNameToNavigations")
                        .HasForeignKey("AccountNameToId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.BankCode", "BankName")
                        .WithMany("CheckDetails")
                        .HasForeignKey("BankNameId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany()
                        .HasForeignKey("BranchesDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.CheckStatus", "CheckStatus")
                        .WithMany("CheckDetails")
                        .HasForeignKey("CheckStatusId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.CheckType", "CheckType")
                        .WithMany("CheckDetails")
                        .HasForeignKey("CheckTypeId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany("CheckDetails")
                        .HasForeignKey("CompanyDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.CostCenter", "CostCenter")
                        .WithMany("CheckDetails")
                        .HasForeignKey("CostCenterId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.CurrencyData", "CurrencyData")
                        .WithMany("CheckDetails")
                        .HasForeignKey("CurrencyDataId");

                    b.OwnsOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.CheckValueObjs.CheckDateInfo", "DateInfo", b1 =>
                        {
                            b1.Property<Guid>("CheckDetailId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("CheckDate")
                                .HasColumnType("date");

                            b1.Property<DateOnly?>("CheckSignDate")
                                .HasColumnType("date");

                            b1.Property<DateOnly?>("DueDate")
                                .HasColumnType("date");

                            b1.Property<int?>("Month")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasDefaultValueSql("0");

                            b1.Property<DateOnly?>("PaymentDate")
                                .HasColumnType("date");

                            b1.Property<int?>("Year")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasDefaultValueSql("0");

                            b1.HasKey("CheckDetailId");

                            b1.ToTable("CheckDetail");

                            b1.WithOwner()
                                .HasForeignKey("CheckDetailId");
                        });

                    b.Navigation("AccountNameFrom");

                    b.Navigation("AccountNameTo");

                    b.Navigation("BankName");

                    b.Navigation("BranchesData");

                    b.Navigation("CheckStatus");

                    b.Navigation("CheckType");

                    b.Navigation("CompanyData");

                    b.Navigation("CostCenter");

                    b.Navigation("CurrencyData");

                    b.Navigation("DateInfo");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.CostCenter", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.AccountMenu", "AccountMenu")
                        .WithMany("CostCenters")
                        .HasForeignKey("AccountMenuId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.AccountNature", "AccountNature")
                        .WithMany("CostCenters")
                        .HasForeignKey("AccountNatureId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.AccountType", "AccountType")
                        .WithMany("CostCenters")
                        .HasForeignKey("AccountTypeId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("CostCenters")
                        .HasForeignKey("BranchesDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany()
                        .HasForeignKey("CompanyDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.CostCenter", "ParentCode")
                        .WithMany("InverseParentCodeNavigation")
                        .HasForeignKey("ParentCodeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.OwnsOne("ModelsUpgrade.UpdatedModels.CostAccounting.SettingAccounts.CostCenterValueObjs.CostCenterInformation", "CostInformation", b1 =>
                        {
                            b1.Property<Guid>("CostCenterId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("CenterName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<long>("CostNumber")
                                .HasColumnType("bigint");

                            b1.Property<string>("Description")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("Levelcode")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasDefaultValueSql("0");

                            b1.HasKey("CostCenterId");

                            b1.ToTable("CostCenter");

                            b1.WithOwner()
                                .HasForeignKey("CostCenterId");
                        });

                    b.Navigation("AccountMenu");

                    b.Navigation("AccountNature");

                    b.Navigation("AccountType");

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");

                    b.Navigation("CostInformation")
                        .IsRequired();

                    b.Navigation("ParentCode");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.FinancialCenter", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.AccountFication", "AccountFication")
                        .WithMany("FinancialCenters")
                        .HasForeignKey("AccountFicationId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.AccountName", "AccountName")
                        .WithMany("FinancialCenters")
                        .HasForeignKey("AccountNameId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany("FinancialCenters")
                        .HasForeignKey("CompanyDataId");

                    b.OwnsOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.FinancialCenterValueObjs.FinancialCenterTransactionInfo", "TransactionInfo", b1 =>
                        {
                            b1.Property<Guid>("FinancialCenterId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("Credit")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Debit")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("TotalCredit")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("TotalDebit")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.HasKey("FinancialCenterId");

                            b1.ToTable("FinancialCenter");

                            b1.WithOwner()
                                .HasForeignKey("FinancialCenterId");
                        });

                    b.Navigation("AccountFication");

                    b.Navigation("AccountName");

                    b.Navigation("CompanyData");

                    b.Navigation("TransactionInfo")
                        .IsRequired();
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.GeneralAccountFooter", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.AccountName", "AccountName")
                        .WithMany("GeneralAccountFooters")
                        .HasForeignKey("AccountNameId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.CostCenter", "CostCenter")
                        .WithMany("GeneralAccountFooters")
                        .HasForeignKey("CostCenterId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.GeneralAccountHeader", "GeneralAccountHeader")
                        .WithMany("GeneralAccountFooters")
                        .HasForeignKey("GeneralAccountHeaderId");

                    b.Navigation("AccountName");

                    b.Navigation("CostCenter");

                    b.Navigation("GeneralAccountHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.GeneralAccountHeader", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("GeneralAccountHeaders")
                        .HasForeignKey("BranchesDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany()
                        .HasForeignKey("CompanyDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.JournalFooter", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.AccountName", "AccountName")
                        .WithMany("JournalFooters")
                        .HasForeignKey("AccountNameId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.CostCenter", "CostCenter")
                        .WithMany("JournalFooters")
                        .HasForeignKey("CostCenterId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.JournalHeader", "JournalHeader")
                        .WithMany("JournalFooters")
                        .HasForeignKey("JournalHeaderId");

                    b.Navigation("AccountName");

                    b.Navigation("CostCenter");

                    b.Navigation("JournalHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.JournalHeader", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany()
                        .HasForeignKey("BranchesDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany("JournalHeaders")
                        .HasForeignKey("CompanyDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.CurrencyData", "CurrencyData")
                        .WithMany("JournalHeaders")
                        .HasForeignKey("CurrencyDataId");

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");

                    b.Navigation("CurrencyData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.ReservationDebit", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany()
                        .HasForeignKey("BranchesDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany("ReservationDebits")
                        .HasForeignKey("CompanyDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.CostCenter", "CostCenter")
                        .WithMany("ReservationDebits")
                        .HasForeignKey("CostCenterId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.ReservationDebit", "ReservationFrom")
                        .WithMany()
                        .HasForeignKey("ReservationFromId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.ReservationStatus", "ReservationStatus")
                        .WithMany("ReservationDebits")
                        .HasForeignKey("ReservationStatusId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.ReservationDebit", "ReservationTo")
                        .WithMany()
                        .HasForeignKey("ReservationToId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");

                    b.Navigation("CostCenter");

                    b.Navigation("ReservationFrom");

                    b.Navigation("ReservationStatus");

                    b.Navigation("ReservationTo");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.MoneySetting.MoneyPayment", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany()
                        .HasForeignKey("BranchesDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany("MoneyPayments")
                        .HasForeignKey("CompanyDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.CostCenter", "CostCenter")
                        .WithMany("MoneyPayments")
                        .HasForeignKey("CostCenterId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.AccountName", "FromAccountName")
                        .WithMany("MoneyPaymentFromAccountNames")
                        .HasForeignKey("FromAccountNameId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.AccountName", "FromCash")
                        .WithMany("MoneyPaymentFromCashes")
                        .HasForeignKey("FromCashId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.AccountName", "ToAccountName")
                        .WithMany("MoneyPaymentToAccountNames")
                        .HasForeignKey("ToAccountNameId");

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");

                    b.Navigation("CostCenter");

                    b.Navigation("FromAccountName");

                    b.Navigation("FromCash");

                    b.Navigation("ToAccountName");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.MoneySetting.MoneyReceive", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany()
                        .HasForeignKey("BranchesDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany("MoneyReceives")
                        .HasForeignKey("CompanyDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.CostCenter", "CostCenter")
                        .WithMany("MoneyReceives")
                        .HasForeignKey("CostCenterId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.AccountName", "FromAccountName")
                        .WithMany("MoneyReceiveFromAccountNames")
                        .HasForeignKey("FromAccountNameId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.AccountName", "FromCash")
                        .WithMany("MoneyReceiveFromCashes")
                        .HasForeignKey("FromCashId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.AccountName", "ToAccountName")
                        .WithMany("MoneyReceiveToAccountNames")
                        .HasForeignKey("ToAccountNameId");

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");

                    b.Navigation("CostCenter");

                    b.Navigation("FromAccountName");

                    b.Navigation("FromCash");

                    b.Navigation("ToAccountName");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.AccountFiscalYear", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany("AccountFiscalYears")
                        .HasForeignKey("CompanyDataId");

                    b.OwnsOne("ModelsUpgrade.Shared.Duration", "FiscalYearDuration", b1 =>
                        {
                            b1.Property<Guid>("AccountFiscalYearId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("EndDate")
                                .HasColumnType("date");

                            b1.Property<DateOnly>("StartDate")
                                .HasColumnType("date");

                            b1.HasKey("AccountFiscalYearId");

                            b1.ToTable("AccountFiscalYear");

                            b1.WithOwner()
                                .HasForeignKey("AccountFiscalYearId");
                        });

                    b.Navigation("CompanyData");

                    b.Navigation("FiscalYearDuration");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.BankCode", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.CityCode", "CityCode")
                        .WithMany("BankCodes")
                        .HasForeignKey("CityCodeId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany("BankCodes")
                        .HasForeignKey("CompanyDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.CountryCode", "CountryCode")
                        .WithMany()
                        .HasForeignKey("CountryCodeId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.CurrencyData", "CurrencyData")
                        .WithMany("BankCodes")
                        .HasForeignKey("CurrencyDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.GovernorateCode", "GovernorateCode")
                        .WithMany("BankCodes")
                        .HasForeignKey("GovernorateCodeId");

                    b.OwnsOne("ModelsUpgrade.Shared.ContactInfo", "Contacts", b1 =>
                        {
                            b1.Property<Guid>("BankCodeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Fax")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Mobile")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Phone")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Whatsapp")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("BankCodeId");

                            b1.ToTable("BankCode");

                            b1.WithOwner()
                                .HasForeignKey("BankCodeId");
                        });

                    b.Navigation("CityCode");

                    b.Navigation("CompanyData");

                    b.Navigation("Contacts")
                        .IsRequired();

                    b.Navigation("CountryCode");

                    b.Navigation("CurrencyData");

                    b.Navigation("GovernorateCode");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.LockersData", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.AccountName", "AccountName")
                        .WithMany("LockersData")
                        .HasForeignKey("AccountNameId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("LockersData")
                        .HasForeignKey("BranchesDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany()
                        .HasForeignKey("CompanyDataId");

                    b.Navigation("AccountName");

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.BankSystem.BankAtm", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.BankCode", "BankCode")
                        .WithMany("BankAtms")
                        .HasForeignKey("BankCodeId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany()
                        .HasForeignKey("BranchesDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.CityCode", "CityCode")
                        .WithMany("BankAtms")
                        .HasForeignKey("CityCodeId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany("BankAtms")
                        .HasForeignKey("CompanyDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.CountryCode", "CountryCode")
                        .WithMany()
                        .HasForeignKey("CountryCodeId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.GovernorateCode", "GovernorateCode")
                        .WithMany("BankAtms")
                        .HasForeignKey("GovernorateCodeId");

                    b.Navigation("BankCode");

                    b.Navigation("BranchesData");

                    b.Navigation("CityCode");

                    b.Navigation("CompanyData");

                    b.Navigation("CountryCode");

                    b.Navigation("GovernorateCode");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.BankSystem.BankContract", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.BankCode", "BankCode")
                        .WithMany("BankContracts")
                        .HasForeignKey("BankCodeId");

                    b.OwnsOne("ModelsUpgrade.Shared.Duration", "BankContractDuration", b1 =>
                        {
                            b1.Property<Guid>("BankContractId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("EndDate")
                                .HasColumnType("date");

                            b1.Property<DateOnly>("StartDate")
                                .HasColumnType("date");

                            b1.HasKey("BankContractId");

                            b1.ToTable("BankContract");

                            b1.WithOwner()
                                .HasForeignKey("BankContractId");
                        });

                    b.Navigation("BankCode");

                    b.Navigation("BankContractDuration")
                        .IsRequired();
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.BankSystem.WorkPlan.WorkPlanComment", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BankSystem.WorkPlan.WorkPlanFooter", "WorkPlanFooter")
                        .WithMany("WorkPlanComments")
                        .HasForeignKey("WorkPlanFooterId");

                    b.Navigation("WorkPlanFooter");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.BankSystem.WorkPlan.WorkPlanDetail", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BankSystem.WorkPlan.WorkPlanFooter", "WorkPlanFooter")
                        .WithMany("WorkPlanDetails")
                        .HasForeignKey("WorkPlanFooterId");

                    b.Navigation("WorkPlanFooter");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.BankSystem.WorkPlan.WorkPlanFooter", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Security.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.BankSystem.BankAtm", null)
                        .WithMany("WorkPlanFooters")
                        .HasForeignKey("BankAtmid");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BankSystem.OrderStatus", "OrderStatus")
                        .WithMany("WorkPlanFooters")
                        .HasForeignKey("OrderStatusId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BankSystem.WorkPlan.WorkPlanHeader", "WorkPlanHeader")
                        .WithMany("WorkPlanFooters")
                        .HasForeignKey("WorkPlanHeaderId");

                    b.Navigation("AppUser");

                    b.Navigation("OrderStatus");

                    b.Navigation("WorkPlanHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.BankSystem.WorkPlan.WorkPlanHeader", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.BankCode", "BankCode")
                        .WithMany("WorkPlanHeaders")
                        .HasForeignKey("BankCodeId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany()
                        .HasForeignKey("BranchesDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.CityCode", "CityCode")
                        .WithMany("WorkPlanHeaders")
                        .HasForeignKey("CityCodeId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany("WorkPlanHeaders")
                        .HasForeignKey("CompanyDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.CountryCode", "CountryCode")
                        .WithMany()
                        .HasForeignKey("CountryCodeId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.GovernorateCode", "GovernorateCode")
                        .WithMany("WorkPlanHeaders")
                        .HasForeignKey("GovernorateCodeId");

                    b.OwnsOne("ModelsUpgrade.Shared.Duration", "WorkPlanDuration", b1 =>
                        {
                            b1.Property<Guid>("WorkPlanHeaderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("EndDate")
                                .HasColumnType("date");

                            b1.Property<DateOnly>("StartDate")
                                .HasColumnType("date");

                            b1.HasKey("WorkPlanHeaderId");

                            b1.ToTable("WorkPlanHeader");

                            b1.WithOwner()
                                .HasForeignKey("WorkPlanHeaderId");
                        });

                    b.Navigation("BankCode");

                    b.Navigation("BranchesData");

                    b.Navigation("CityCode");

                    b.Navigation("CompanyData");

                    b.Navigation("CountryCode");

                    b.Navigation("GovernorateCode");

                    b.Navigation("WorkPlanDuration");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.CityCode", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.GovernorateCode", "GovernorateCode")
                        .WithMany("CityCodes")
                        .HasForeignKey("GovernorateCodeId");

                    b.Navigation("GovernorateCode");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.GovernorateCode", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.CountryCode", "CountryCode")
                        .WithMany("GovernorateCodes")
                        .HasForeignKey("CountryCodeId");

                    b.Navigation("CountryCode");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmployeeData", "BranchManager")
                        .WithMany("BranchesData")
                        .HasForeignKey("BranchManagerId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.CityCode", "CityCode")
                        .WithMany("BranchesData")
                        .HasForeignKey("CityCodeId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany("BranchesData")
                        .HasForeignKey("CompanyDataId");

                    b.OwnsOne("ModelsUpgrade.Shared.ObjectCompleteAddress", "Address", b1 =>
                        {
                            b1.Property<Guid>("BranchesDataId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("AddressInformation")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)");

                            b1.Property<string>("BuildingNumber")
                                .IsRequired()
                                .HasMaxLength(5)
                                .HasColumnType("nvarchar(5)");

                            b1.Property<string>("FloorNumber")
                                .IsRequired()
                                .HasMaxLength(5)
                                .HasColumnType("nvarchar(5)");

                            b1.Property<string>("LandMark")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasMaxLength(7)
                                .HasColumnType("nvarchar(7)");

                            b1.Property<string>("RoomNumber")
                                .IsRequired()
                                .HasMaxLength(3)
                                .HasColumnType("nvarchar(3)");

                            b1.HasKey("BranchesDataId");

                            b1.ToTable("BranchesData");

                            b1.WithOwner()
                                .HasForeignKey("BranchesDataId");
                        });

                    b.OwnsOne("ModelsUpgrade.Shared.ContactInfo", "BranchContactInfo", b1 =>
                        {
                            b1.Property<Guid>("BranchesDataId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Fax")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Mobile")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Phone")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Whatsapp")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("BranchesDataId");

                            b1.ToTable("BranchesData");

                            b1.WithOwner()
                                .HasForeignKey("BranchesDataId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("BranchContactInfo")
                        .IsRequired();

                    b.Navigation("BranchManager");

                    b.Navigation("CityCode");

                    b.Navigation("CompanyData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesList", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("BranchesLists")
                        .HasForeignKey("BranchesDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany("BranchesLists")
                        .HasForeignKey("CompanyDataId");

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.ProgramSetting.ActivityCode", "ActivityCode")
                        .WithMany()
                        .HasForeignKey("ActivityCodeId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.CityCode", "CityCode")
                        .WithMany("CompanyData")
                        .HasForeignKey("CityCodeId");

                    b.OwnsOne("ModelsUpgrade.Shared.ObjectCompleteAddress", "Address", b1 =>
                        {
                            b1.Property<Guid>("CompanyDataId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("AddressInformation")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)");

                            b1.Property<string>("BuildingNumber")
                                .IsRequired()
                                .HasMaxLength(5)
                                .HasColumnType("nvarchar(5)");

                            b1.Property<string>("FloorNumber")
                                .IsRequired()
                                .HasMaxLength(5)
                                .HasColumnType("nvarchar(5)");

                            b1.Property<string>("LandMark")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasMaxLength(7)
                                .HasColumnType("nvarchar(7)");

                            b1.Property<string>("RoomNumber")
                                .IsRequired()
                                .HasMaxLength(3)
                                .HasColumnType("nvarchar(3)");

                            b1.HasKey("CompanyDataId");

                            b1.ToTable("CompanyData");

                            b1.WithOwner()
                                .HasForeignKey("CompanyDataId");
                        });

                    b.OwnsOne("ModelsUpgrade.Shared.ContactInfo", "ContactInformation", b1 =>
                        {
                            b1.Property<Guid>("CompanyDataId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Fax")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Mobile")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Phone")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Whatsapp")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("CompanyDataId");

                            b1.ToTable("CompanyData");

                            b1.WithOwner()
                                .HasForeignKey("CompanyDataId");
                        });

                    b.OwnsOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyValueObjs.CompanyBasicInformation", "BasicInformation", b1 =>
                        {
                            b1.Property<Guid>("CompanyDataId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("AdditionalInformation")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("CommercialRegisterNumber")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("CompanyName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ImageUrl")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("SpecializationL1")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("SpecializationL2")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("TaxesErrand")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("CompanyDataId");

                            b1.ToTable("CompanyData");

                            b1.WithOwner()
                                .HasForeignKey("CompanyDataId");
                        });

                    b.OwnsOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyValueObjs.CompanyOpeningTime", "OpeningTime", b1 =>
                        {
                            b1.Property<Guid>("CompanyDataId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<TimeOnly?>("EveningPeriod1")
                                .HasColumnType("time");

                            b1.Property<TimeOnly?>("EveningPeriod2")
                                .HasColumnType("time");

                            b1.Property<TimeOnly?>("MorningTime1")
                                .HasColumnType("time");

                            b1.Property<TimeOnly?>("MorningTime2")
                                .HasColumnType("time");

                            b1.HasKey("CompanyDataId");

                            b1.ToTable("CompanyData");

                            b1.WithOwner()
                                .HasForeignKey("CompanyDataId");
                        });

                    b.Navigation("ActivityCode");

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("BasicInformation")
                        .IsRequired();

                    b.Navigation("CityCode");

                    b.Navigation("ContactInformation")
                        .IsRequired();

                    b.Navigation("OpeningTime")
                        .IsRequired();
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Contractors.ConContractorData", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.AccountName", "AccountsName")
                        .WithMany("ConContractorData")
                        .HasForeignKey("AccountsNameId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.CityCode", "CityCode")
                        .WithMany("ConContractorData")
                        .HasForeignKey("CityCodeId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany("ConContractorData")
                        .HasForeignKey("CompanyDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Purchasing.SupplierGroup", "ContractorGroups")
                        .WithMany("ConContractorData")
                        .HasForeignKey("ContractorGroupsId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmployeeData", "ContractorManager")
                        .WithMany("ConContractorData")
                        .HasForeignKey("ContractorManagerId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.CountryCode", "CountryCode")
                        .WithMany()
                        .HasForeignKey("CountryCodeId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.GovernorateCode", "GovernorateCode")
                        .WithMany()
                        .HasForeignKey("GovernorateCodeId");

                    b.OwnsOne("ModelsUpgrade.Shared.ContactInfo", "ContactInfo", b1 =>
                        {
                            b1.Property<Guid>("ConContractorDataId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Fax")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Mobile")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Phone")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Whatsapp")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ConContractorDataId");

                            b1.ToTable("ConContractorData");

                            b1.WithOwner()
                                .HasForeignKey("ConContractorDataId");
                        });

                    b.OwnsOne("ModelsUpgrade.Shared.ObjectCompleteAddress", "ContractorAddress", b1 =>
                        {
                            b1.Property<Guid>("ConContractorDataId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("AddressInformation")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)");

                            b1.Property<string>("BuildingNumber")
                                .IsRequired()
                                .HasMaxLength(5)
                                .HasColumnType("nvarchar(5)");

                            b1.Property<string>("FloorNumber")
                                .IsRequired()
                                .HasMaxLength(5)
                                .HasColumnType("nvarchar(5)");

                            b1.Property<string>("LandMark")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasMaxLength(7)
                                .HasColumnType("nvarchar(7)");

                            b1.Property<string>("RoomNumber")
                                .IsRequired()
                                .HasMaxLength(3)
                                .HasColumnType("nvarchar(3)");

                            b1.HasKey("ConContractorDataId");

                            b1.ToTable("ConContractorData");

                            b1.WithOwner()
                                .HasForeignKey("ConContractorDataId");
                        });

                    b.OwnsOne("ModelsUpgrade.Shared.Duration", "ContractorDuration", b1 =>
                        {
                            b1.Property<Guid>("ConContractorDataId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("EndDate")
                                .HasColumnType("date");

                            b1.Property<DateOnly>("StartDate")
                                .HasColumnType("date");

                            b1.HasKey("ConContractorDataId");

                            b1.ToTable("ConContractorData");

                            b1.WithOwner()
                                .HasForeignKey("ConContractorDataId");
                        });

                    b.Navigation("AccountsName");

                    b.Navigation("CityCode");

                    b.Navigation("CompanyData");

                    b.Navigation("ContactInfo")
                        .IsRequired();

                    b.Navigation("ContractorAddress")
                        .IsRequired();

                    b.Navigation("ContractorDuration");

                    b.Navigation("ContractorGroups");

                    b.Navigation("ContractorManager");

                    b.Navigation("CountryCode");

                    b.Navigation("GovernorateCode");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Contractors.ConContractorExtractDetail", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Contractors.ConContractorExtractMaster", "ContractorMaster")
                        .WithMany("ConContractorExtractDetails")
                        .HasForeignKey("ContractorMasterId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Contractors.ConProjectItem", "ProjectItems")
                        .WithMany("ConContractorExtractDetails")
                        .HasForeignKey("ProjectItemsId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.UnitType", "UnitType")
                        .WithMany("ConContractorExtractDetails")
                        .HasForeignKey("UnitTypeId");

                    b.OwnsOne("ModelsUpgrade.Shared.PurchaseInfo", "PurchaseInfo", b1 =>
                        {
                            b1.Property<Guid>("ConContractorExtractDetailId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("Price")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Quantity")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Value")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.HasKey("ConContractorExtractDetailId");

                            b1.ToTable("ConContractorExtractDetail");

                            b1.WithOwner()
                                .HasForeignKey("ConContractorExtractDetailId");
                        });

                    b.Navigation("ContractorMaster");

                    b.Navigation("ProjectItems");

                    b.Navigation("PurchaseInfo")
                        .IsRequired();

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Contractors.ConContractorExtractMaster", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany("ConContractorExtractMasters")
                        .HasForeignKey("CompanyDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.Contractors.ConContractorData", "ContractorData")
                        .WithMany("ConContractorExtractMasters")
                        .HasForeignKey("ContractorDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Contractors.ConProjectsData", "ProjectData")
                        .WithMany("ConContractorExtractMasters")
                        .HasForeignKey("ProjectDataId");

                    b.OwnsOne("ModelsUpgrade.Shared.Duration", "Duration", b1 =>
                        {
                            b1.Property<Guid>("ConContractorExtractMasterId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("EndDate")
                                .HasColumnType("date");

                            b1.Property<DateOnly>("StartDate")
                                .HasColumnType("date");

                            b1.HasKey("ConContractorExtractMasterId");

                            b1.ToTable("ConContractorExtractMaster");

                            b1.WithOwner()
                                .HasForeignKey("ConContractorExtractMasterId");
                        });

                    b.OwnsOne("ModelsUpgrade.UpdatedModels.Contractors.ContractorsValueObjs.ContractMasterPricing", "MasterPricing", b1 =>
                        {
                            b1.Property<Guid>("ConContractorExtractMasterId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("NetTotal")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Payments")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("TotalDiscount")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("TotalTax")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("TotalValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.HasKey("ConContractorExtractMasterId");

                            b1.ToTable("ConContractorExtractMaster");

                            b1.WithOwner()
                                .HasForeignKey("ConContractorExtractMasterId");
                        });

                    b.Navigation("CompanyData");

                    b.Navigation("ContractorData");

                    b.Navigation("Duration");

                    b.Navigation("MasterPricing")
                        .IsRequired();

                    b.Navigation("ProjectData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Contractors.ConProjectItem", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany("ConProjectItems")
                        .HasForeignKey("CompanyDataId");

                    b.Navigation("CompanyData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Contractors.ConProjectsData", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.AccountName", "AccountsName")
                        .WithMany("ConProjectsData")
                        .HasForeignKey("AccountsNameId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany("ConProjectsData")
                        .HasForeignKey("CompanyDataId");

                    b.OwnsOne("ModelsUpgrade.Shared.Duration", "ProjectDuration", b1 =>
                        {
                            b1.Property<Guid>("ConProjectsDataId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("EndDate")
                                .HasColumnType("date");

                            b1.Property<DateOnly>("StartDate")
                                .HasColumnType("date");

                            b1.HasKey("ConProjectsDataId");

                            b1.ToTable("ConProjectsData");

                            b1.WithOwner()
                                .HasForeignKey("ConProjectsDataId");
                        });

                    b.Navigation("AccountsName");

                    b.Navigation("CompanyData");

                    b.Navigation("ProjectDuration");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.CostAccounting.CostGeneralAccountFooter", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.CostCenter", "AccountName")
                        .WithMany("CostGeneralAccountFooters")
                        .HasForeignKey("AccountNameId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.CostAccounting.CostGeneralAccountHeader", "JournalHeader")
                        .WithMany("CostGeneralAccountFooters")
                        .HasForeignKey("JournalHeaderId");

                    b.Navigation("AccountName");

                    b.Navigation("JournalHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.CostAccounting.CostGeneralAccountHeader", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("CostGeneralAccountHeaders")
                        .HasForeignKey("BranchesDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany()
                        .HasForeignKey("CompanyDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.CurrencyData", "CurrencyData")
                        .WithMany("CostGeneralAccountHeaders")
                        .HasForeignKey("CurrencyDataId");

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");

                    b.Navigation("CurrencyData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.CostAccounting.CostJournalFooter", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.CostCenter", "AccountName")
                        .WithMany("CostJournalFooters")
                        .HasForeignKey("AccountNameId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.CostAccounting.CostJournalHeader", "JournalHeader")
                        .WithMany("CostJournalFooters")
                        .HasForeignKey("JournalHeaderId");

                    b.Navigation("AccountName");

                    b.Navigation("JournalHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.CostAccounting.CostJournalHeader", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("CostJournalHeaders")
                        .HasForeignKey("BranchesDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany()
                        .HasForeignKey("CompanyDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.CurrencyData", "CurrencyData")
                        .WithMany("CostJournalHeaders")
                        .HasForeignKey("CurrencyDataId");

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");

                    b.Navigation("CurrencyData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.EInvoicing.ClientAccessToken", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.EInvoicing.ClientDataToken", "ClientDataToken")
                        .WithMany("ClientAccessTokens")
                        .HasForeignKey("ClientDataTokenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientDataToken");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.EInvoicing.ClientDataToken", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("ClientDataTokens")
                        .HasForeignKey("BranchesDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany()
                        .HasForeignKey("CompanyDataId");

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.EInvoicing.SalesTaxInvoiceFooter", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsHeader", "ItemsHeader")
                        .WithMany("SalesTaxInvoiceFs")
                        .HasForeignKey("ItemsHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Sales.ReturnSalesFooter", "ReturnSalesFooter")
                        .WithMany("SalesTaxInvoiceFs")
                        .HasForeignKey("ReturnSalesFooterId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Sales.SalesInvoiceFooter", "SalesInvoiceFooter")
                        .WithMany("SalesTaxInvoiceFs")
                        .HasForeignKey("SalesInvoiceFooterId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.EInvoicing.TaxableType", "TaxableType")
                        .WithMany("SalesTaxInvoiceFs")
                        .HasForeignKey("TaxableTypeId");

                    b.Navigation("ItemsHeader");

                    b.Navigation("ReturnSalesFooter");

                    b.Navigation("SalesInvoiceFooter");

                    b.Navigation("TaxableType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.EInvoicing.SalesTaxInvoiceHeader", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany()
                        .HasForeignKey("BranchesDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany()
                        .HasForeignKey("CompanyDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.Sales.ReturnSalesHeader", "ReturnSalesHeader")
                        .WithMany("SalesTaxInvoiceHs")
                        .HasForeignKey("ReturnSalesHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Sales.SalesInvoiceHeader", "SalesInvoiceHeader")
                        .WithMany("SalesTaxInvoiceHs")
                        .HasForeignKey("SalesInvoiceHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.EInvoicing.TaxableType", "TaxableType")
                        .WithMany("SalesTaxInvoiceHs")
                        .HasForeignKey("TaxableTypeId");

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");

                    b.Navigation("ReturnSalesHeader");

                    b.Navigation("SalesInvoiceHeader");

                    b.Navigation("TaxableType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.EInvoicing.TaxableType", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.EInvoicing.TaxableType", "ParentCode")
                        .WithMany("InverseParentCodeNavigation")
                        .HasForeignKey("ParentCodeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("ParentCode");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Education.EduAcademyCourse", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("EduAcademyCourses")
                        .HasForeignKey("BranchesDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Education.EduAcademyCourse", "ParentCourse")
                        .WithMany("InverseParentCourseNavigation")
                        .HasForeignKey("ParentCourseId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("BranchesData");

                    b.Navigation("ParentCourse");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Education.EduQuestionDetail", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Education.EduQuestionsMaster", "QuestionsMaster")
                        .WithMany("EduQuestionDetails")
                        .HasForeignKey("QuestionsMasterId");

                    b.Navigation("QuestionsMaster");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Education.EduQuestionsMaster", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Education.EduAcademyCourse", "AcademyCourse")
                        .WithMany("EduQuestionsMasters")
                        .HasForeignKey("AcademyCourseId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("EduQuestionsMasters")
                        .HasForeignKey("BranchesDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Education.EduQuestionType", "QuestionType")
                        .WithMany("EduQuestionsMasters")
                        .HasForeignKey("QuestionTypeId");

                    b.OwnsOne("ModelsUpgrade.UpdatedModels.Education.EducationValueObjs.QuestionMasterInfo", "QuestionInfo", b1 =>
                        {
                            b1.Property<Guid>("EduQuestionsMasterId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("QuestionAnswer")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("QuestionDetails")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("QuestionValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasDefaultValueSql("0");

                            b1.HasKey("EduQuestionsMasterId");

                            b1.ToTable("EduQuestionsMaster");

                            b1.WithOwner()
                                .HasForeignKey("EduQuestionsMasterId");
                        });

                    b.Navigation("AcademyCourse");

                    b.Navigation("BranchesData");

                    b.Navigation("QuestionInfo")
                        .IsRequired();

                    b.Navigation("QuestionType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Education.EduStudentCourse", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Education.EduStudentData", "StudentData")
                        .WithMany("EduStudentCourses")
                        .HasForeignKey("StudentDataId");

                    b.OwnsOne("ModelsUpgrade.Shared.Duration", "CourseDuration", b1 =>
                        {
                            b1.Property<Guid>("EduStudentCourseId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("EndDate")
                                .HasColumnType("date");

                            b1.Property<DateOnly>("StartDate")
                                .HasColumnType("date");

                            b1.HasKey("EduStudentCourseId");

                            b1.ToTable("EduStudentCourse");

                            b1.WithOwner()
                                .HasForeignKey("EduStudentCourseId");
                        });

                    b.Navigation("CourseDuration")
                        .IsRequired();

                    b.Navigation("StudentData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Education.EduStudentData", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("EduStudentData")
                        .HasForeignKey("BranchesDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.CityCode", "CityCode")
                        .WithMany("EduStudentData")
                        .HasForeignKey("CityCodeId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany()
                        .HasForeignKey("CompanyDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.EducationData", "EducationData")
                        .WithMany("EduStudentData")
                        .HasForeignKey("EducationDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.EducationStimate", "EducationeStimate")
                        .WithMany("EduStudentData")
                        .HasForeignKey("EducationeStimateId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ProgramSetting.GenderData", "GenderData")
                        .WithMany("EduStudentData")
                        .HasForeignKey("GenderDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.RecruitmentData", "RecruitmentData")
                        .WithMany("EduStudentData")
                        .HasForeignKey("RecruitmentDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.SocialData", "SocialData")
                        .WithMany("EduStudentData")
                        .HasForeignKey("SocialDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.UniversityData", "UniversityData")
                        .WithMany("EduStudentData")
                        .HasForeignKey("UniversityDataId");

                    b.OwnsOne("ModelsUpgrade.Shared.ContactInfo", "ContactInfo", b1 =>
                        {
                            b1.Property<Guid>("EduStudentDataId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Fax")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Mobile")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Phone")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Whatsapp")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("EduStudentDataId");

                            b1.ToTable("EduStudentData");

                            b1.WithOwner()
                                .HasForeignKey("EduStudentDataId");
                        });

                    b.OwnsOne("ModelsUpgrade.Shared.Duration", "PassportDateInfo", b1 =>
                        {
                            b1.Property<Guid>("EduStudentDataId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("EndDate")
                                .HasColumnType("date");

                            b1.Property<DateOnly>("StartDate")
                                .HasColumnType("date");

                            b1.HasKey("EduStudentDataId");

                            b1.ToTable("EduStudentData");

                            b1.WithOwner()
                                .HasForeignKey("EduStudentDataId");
                        });

                    b.OwnsOne("ModelsUpgrade.Shared.Duration", "StudentDuration", b1 =>
                        {
                            b1.Property<Guid>("EduStudentDataId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("EndDate")
                                .HasColumnType("date");

                            b1.Property<DateOnly>("StartDate")
                                .HasColumnType("date");

                            b1.HasKey("EduStudentDataId");

                            b1.ToTable("EduStudentData");

                            b1.WithOwner()
                                .HasForeignKey("EduStudentDataId");
                        });

                    b.Navigation("BranchesData");

                    b.Navigation("CityCode");

                    b.Navigation("CompanyData");

                    b.Navigation("ContactInfo")
                        .IsRequired();

                    b.Navigation("EducationData");

                    b.Navigation("EducationeStimate");

                    b.Navigation("GenderData");

                    b.Navigation("PassportDateInfo")
                        .IsRequired();

                    b.Navigation("RecruitmentData");

                    b.Navigation("SocialData");

                    b.Navigation("StudentDuration")
                        .IsRequired();

                    b.Navigation("UniversityData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Education.EduStudentPayment", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Education.EduAcademyCourse", "AcademyCourse")
                        .WithMany("EduStudentPayments")
                        .HasForeignKey("AcademyCourseId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("EduStudentPayments")
                        .HasForeignKey("BranchesDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany("EduStudentPayments")
                        .HasForeignKey("CompanyDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Education.EduStudentData", "StudentData")
                        .WithMany("EduStudentPayments")
                        .HasForeignKey("StudentDataId");

                    b.Navigation("AcademyCourse");

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");

                    b.Navigation("StudentData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Education.EduStudentQuestion", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Education.EduQuestionDetail", "QuestionAnswer")
                        .WithMany()
                        .HasForeignKey("QuestionAnswerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.Education.EduStudentData", "StudentData")
                        .WithMany()
                        .HasForeignKey("StudentDataId");

                    b.Navigation("QuestionAnswer");

                    b.Navigation("StudentData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Fixed.AccountFixedDetail", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.AccountFication", "AccountFication")
                        .WithMany("AccountFixedDetails")
                        .HasForeignKey("AccountFicationId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.AccountName", "AccountName")
                        .WithMany("AccountFixedDetailAccountNames")
                        .HasForeignKey("AccountNameId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.AccountName", "AccountNameLevel2")
                        .WithMany("AccountFixedDetailAccountNameLevel2s")
                        .HasForeignKey("AccountNameLevel2Id");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany("AccountFixedDetails")
                        .HasForeignKey("CompanyDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.CostCenter", "CostCenter")
                        .WithMany("AccountFixedDetails")
                        .HasForeignKey("CostCenterId");

                    b.Navigation("AccountFication");

                    b.Navigation("AccountName");

                    b.Navigation("AccountNameLevel2");

                    b.Navigation("CompanyData");

                    b.Navigation("CostCenter");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpAccept", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpAcceptType", "EmpAcceptType")
                        .WithMany("EmpAccepts")
                        .HasForeignKey("EmpAcceptTypeId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmployeeData", "EmployeesData")
                        .WithMany("EmpAccepts")
                        .HasForeignKey("EmployeesDataId");

                    b.OwnsOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.HRSettingValueObjs.HRDateInfo", "DateInfo", b1 =>
                        {
                            b1.Property<Guid>("EmpAcceptId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("EndDate")
                                .HasColumnType("date");

                            b1.Property<int?>("Month")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasDefaultValueSql("0");

                            b1.Property<DateOnly?>("StartDate")
                                .HasColumnType("date");

                            b1.Property<int?>("Year")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasDefaultValueSql("0");

                            b1.HasKey("EmpAcceptId");

                            b1.ToTable("EmpAccept");

                            b1.WithOwner()
                                .HasForeignKey("EmpAcceptId");
                        });

                    b.Navigation("DateInfo")
                        .IsRequired();

                    b.Navigation("EmpAcceptType");

                    b.Navigation("EmployeesData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpAttend", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpAttendType", "AttendType")
                        .WithMany("EmpAttends")
                        .HasForeignKey("AttendTypeId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpDayWeek", "EmpDayWeek")
                        .WithMany("EmpAttends")
                        .HasForeignKey("EmpDayWeekId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmployeeData", "EmployeesData")
                        .WithMany("EmpAttends")
                        .HasForeignKey("EmployeesDataId");

                    b.OwnsOne("ModelsUpgrade.Shared.DateInfo", "DateInfo", b1 =>
                        {
                            b1.Property<Guid>("EmpAttendId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("Date")
                                .HasColumnType("date");

                            b1.Property<short?>("Month")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.Property<short?>("Year")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.HasKey("EmpAttendId");

                            b1.ToTable("EmpAttend");

                            b1.WithOwner()
                                .HasForeignKey("EmpAttendId");
                        });

                    b.OwnsOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.HRSettingValueObjs.EmpAttendTimeInfo", "TimeInfo", b1 =>
                        {
                            b1.Property<Guid>("EmpAttendId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<TimeOnly?>("OnTime")
                                .HasColumnType("time");

                            b1.Property<TimeOnly?>("OnTimes")
                                .HasColumnType("time");

                            b1.Property<TimeOnly?>("OutTime")
                                .HasColumnType("time");

                            b1.Property<TimeOnly?>("OutTimes")
                                .HasColumnType("time");

                            b1.Property<TimeOnly?>("OverTime")
                                .HasColumnType("time");

                            b1.Property<TimeOnly?>("TotalTime")
                                .HasColumnType("time");

                            b1.HasKey("EmpAttendId");

                            b1.ToTable("EmpAttend");

                            b1.WithOwner()
                                .HasForeignKey("EmpAttendId");
                        });

                    b.Navigation("AttendType");

                    b.Navigation("DateInfo")
                        .IsRequired();

                    b.Navigation("EmpDayWeek");

                    b.Navigation("EmployeesData");

                    b.Navigation("TimeInfo")
                        .IsRequired();
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpContractFooter", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpContractHeader", "EmpContractH")
                        .WithMany("EmpContractDetalis")
                        .HasForeignKey("EmpContractHid");

                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpElementData", "EmpElementData")
                        .WithMany("EmpContractDetalis")
                        .HasForeignKey("EmpElementDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpElementType", "EmpElementType")
                        .WithMany("EmpContractDetalis")
                        .HasForeignKey("EmpElementTypeId");

                    b.Navigation("EmpContractH");

                    b.Navigation("EmpElementData");

                    b.Navigation("EmpElementType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpContractHeader", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany()
                        .HasForeignKey("BranchesDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany()
                        .HasForeignKey("CompanyDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpContractType", "EmpContractType")
                        .WithMany("EmpContractMasters")
                        .HasForeignKey("EmpContractTypeId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmployeeData", "EmployeesData")
                        .WithMany("EmpContractMasters")
                        .HasForeignKey("EmployeesDataId");

                    b.OwnsOne("ModelsUpgrade.Shared.Duration", "ContractDuration", b1 =>
                        {
                            b1.Property<Guid>("EmpContractHeaderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("EndDate")
                                .HasColumnType("date");

                            b1.Property<DateOnly>("StartDate")
                                .HasColumnType("date");

                            b1.HasKey("EmpContractHeaderId");

                            b1.ToTable("EmpContractHeader");

                            b1.WithOwner()
                                .HasForeignKey("EmpContractHeaderId");
                        });

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");

                    b.Navigation("ContractDuration")
                        .IsRequired();

                    b.Navigation("EmpContractType");

                    b.Navigation("EmployeesData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpElementData", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpElementNature", "EmpElemntNature")
                        .WithMany("EmpElementsData")
                        .HasForeignKey("EmpElemntNatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpElementType", "EmpElemntType")
                        .WithMany("EmpElementData")
                        .HasForeignKey("EmpElemntTypeId");

                    b.Navigation("EmpElemntNature");

                    b.Navigation("EmpElemntType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpGroupWork", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("EmpGroupWorks")
                        .HasForeignKey("BranchesDataId");

                    b.OwnsOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.HRSettingValueObjs.EmpGroupTimeInfo", "TimeInfo", b1 =>
                        {
                            b1.Property<Guid>("EmpGroupWorkId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<TimeOnly?>("OnTime")
                                .HasColumnType("time");

                            b1.Property<TimeOnly?>("OnTimes")
                                .HasColumnType("time");

                            b1.Property<TimeOnly?>("OutTime")
                                .HasColumnType("time");

                            b1.Property<TimeOnly?>("OutTimes")
                                .HasColumnType("time");

                            b1.Property<TimeOnly?>("TotalDelayTime")
                                .HasColumnType("time");

                            b1.Property<TimeOnly?>("TotalEarlyTime")
                                .HasColumnType("time");

                            b1.HasKey("EmpGroupWorkId");

                            b1.ToTable("EmpGroupWork");

                            b1.WithOwner()
                                .HasForeignKey("EmpGroupWorkId");
                        });

                    b.Navigation("BranchesData");

                    b.Navigation("TimeInfo");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpLevel", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpLevelType", "EmpLevelType")
                        .WithMany("EmpLevels")
                        .HasForeignKey("EmpLevelTypeId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmployeeData", "EmployeesData")
                        .WithMany("EmpLevels")
                        .HasForeignKey("EmployeesDataId");

                    b.OwnsOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.HRSettingValueObjs.EmpLeveDateInfo", "DateInfo", b1 =>
                        {
                            b1.Property<Guid>("EmpLevelId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("EndDate")
                                .HasColumnType("date");

                            b1.Property<short?>("Month")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.Property<DateOnly?>("StartDate")
                                .HasColumnType("date");

                            b1.Property<short?>("Year")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.HasKey("EmpLevelId");

                            b1.ToTable("EmpLevel");

                            b1.WithOwner()
                                .HasForeignKey("EmpLevelId");
                        });

                    b.Navigation("DateInfo");

                    b.Navigation("EmpLevelType");

                    b.Navigation("EmployeesData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpLoans", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpLoansType", "EmpLoansType")
                        .WithMany("EmpLoans")
                        .HasForeignKey("EmpLoansTypeId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmployeeData", "EmployeesData")
                        .WithMany("EmpLoans")
                        .HasForeignKey("EmployeesDataId");

                    b.OwnsOne("ModelsUpgrade.Shared.DateInfo", "DateInfo", b1 =>
                        {
                            b1.Property<Guid>("EmpLoansId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("Date")
                                .HasColumnType("date");

                            b1.Property<short?>("Month")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.Property<short?>("Year")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.HasKey("EmpLoansId");

                            b1.ToTable("EmpLoans");

                            b1.WithOwner()
                                .HasForeignKey("EmpLoansId");
                        });

                    b.Navigation("DateInfo")
                        .IsRequired();

                    b.Navigation("EmpLoansType");

                    b.Navigation("EmployeesData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmployeeCourse", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmployeeData", "EmployeeData")
                        .WithMany()
                        .HasForeignKey("EmployeeDataId");

                    b.Navigation("EmployeeData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmployeeData", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesDataNavigation")
                        .WithMany("EmployeeData")
                        .HasForeignKey("BranchesDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.CityCode", "CityCode")
                        .WithMany("EmployeeData")
                        .HasForeignKey("CityCodeId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.Department", "Department")
                        .WithMany("EmployeeData")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.EducationData", "EducationData")
                        .WithMany("EmployeeData")
                        .HasForeignKey("EducationDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.EducationStimate", "EducationStimate")
                        .WithMany("EmployeeData")
                        .HasForeignKey("EducationStimateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.ProgramSetting.GenderData", "GenderData")
                        .WithMany("EmployeeData")
                        .HasForeignKey("GenderDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpGroupWork", "GroupWork")
                        .WithMany("EmployeeData")
                        .HasForeignKey("GroupWorkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.JobData", "JobData")
                        .WithMany("EmployeeData")
                        .HasForeignKey("JobDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.PaymentMode", "PaymentType")
                        .WithMany("EmployeeData")
                        .HasForeignKey("PaymentTypeId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.RecruitmentData", "RecruitmentData")
                        .WithMany("EmployeeData")
                        .HasForeignKey("RecruitmentDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.SocialData", "SocialData")
                        .WithMany("EmployeeData")
                        .HasForeignKey("SocialDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.UniversityData", "UniversityData")
                        .WithMany("EmployeeData")
                        .HasForeignKey("UniversityDataId");

                    b.OwnsOne("ModelsUpgrade.Shared.ContactInfo", "ContactInfo", b1 =>
                        {
                            b1.Property<Guid>("EmployeeDataId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Fax")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Mobile")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Phone")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Whatsapp")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("EmployeeDataId");

                            b1.ToTable("EmployeeData");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeDataId");
                        });

                    b.OwnsOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.HRSettingValueObjs.EmployeeTimeInfo", "EmployeeTimeInfo", b1 =>
                        {
                            b1.Property<Guid>("EmployeeDataId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime?>("DateBarith")
                                .HasColumnType("datetime2");

                            b1.Property<DateOnly?>("DateFinsh")
                                .HasColumnType("date");

                            b1.Property<DateOnly?>("DateStart")
                                .HasColumnType("date");

                            b1.Property<TimeOnly?>("TimeEndWork")
                                .HasColumnType("time");

                            b1.Property<TimeOnly?>("TimeStartWork")
                                .HasColumnType("time");

                            b1.HasKey("EmployeeDataId");

                            b1.ToTable("EmployeeData");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeDataId");
                        });

                    b.Navigation("BranchesDataNavigation");

                    b.Navigation("CityCode");

                    b.Navigation("ContactInfo")
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("EducationData");

                    b.Navigation("EducationStimate");

                    b.Navigation("EmployeeTimeInfo");

                    b.Navigation("GenderData");

                    b.Navigation("GroupWork");

                    b.Navigation("JobData");

                    b.Navigation("PaymentType");

                    b.Navigation("RecruitmentData");

                    b.Navigation("SocialData");

                    b.Navigation("UniversityData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmployeeJob", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmployeeData", "EmployeeData")
                        .WithMany("EmployeeJobs")
                        .HasForeignKey("EmployeeDataId");

                    b.OwnsOne("ModelsUpgrade.Shared.Duration", "JobDuration", b1 =>
                        {
                            b1.Property<Guid>("EmployeeJobId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("EndDate")
                                .HasColumnType("date");

                            b1.Property<DateOnly>("StartDate")
                                .HasColumnType("date");

                            b1.HasKey("EmployeeJobId");

                            b1.ToTable("EmployeeJob");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeJobId");
                        });

                    b.Navigation("EmployeeData");

                    b.Navigation("JobDuration")
                        .IsRequired();
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmployeeSkills", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmployeeData", "EmployeeData")
                        .WithMany("EmployeeSkills")
                        .HasForeignKey("EmployeeDataId");

                    b.Navigation("EmployeeData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.FinalData", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany()
                        .HasForeignKey("BranchesDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany()
                        .HasForeignKey("CompanyDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmployeeData", "EmployeeData")
                        .WithMany("FinalData")
                        .HasForeignKey("EmployeeDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");

                    b.Navigation("EmployeeData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.FinalDataFixed", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany()
                        .HasForeignKey("BranchesDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany()
                        .HasForeignKey("CompanyDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmployeeData", "EmployeeData")
                        .WithMany("FinalDataFixeds")
                        .HasForeignKey("EmployeeDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");

                    b.Navigation("EmployeeData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HotelSetting.HotelPayment", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany()
                        .HasForeignKey("BranchesDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany("HotelPayments")
                        .HasForeignKey("CompanyDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Sales.CustomerData", "CustomerData")
                        .WithMany("HotelPayments")
                        .HasForeignKey("CustomerDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.HotelSetting.HotelReservationMaster", "HotelReservationMaster")
                        .WithMany("HotelPayments")
                        .HasForeignKey("HotelReservationMasterId");

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");

                    b.Navigation("CustomerData");

                    b.Navigation("HotelReservationMaster");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HotelSetting.HotelReservationDetail", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.HotelSetting.HotelReservationMaster", "ReservationMaster")
                        .WithMany("HotelReservationDetails")
                        .HasForeignKey("ReservationMasterId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.HotelSetting.HotelService", "Services")
                        .WithMany("HotelReservationDetails")
                        .HasForeignKey("ServicesId");

                    b.OwnsOne("ModelsUpgrade.UpdatedModels.HotelSetting.HotelValueObjs.HotelPricingDetails", "PricingDetails", b1 =>
                        {
                            b1.Property<Guid>("HotelReservationDetailId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("Discount")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Quantity")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("ReservationValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("ServicesValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Tax")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("TotalValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Value")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.HasKey("HotelReservationDetailId");

                            b1.ToTable("HotelReservationDetail");

                            b1.WithOwner()
                                .HasForeignKey("HotelReservationDetailId");
                        });

                    b.Navigation("PricingDetails")
                        .IsRequired();

                    b.Navigation("ReservationMaster");

                    b.Navigation("Services");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HotelSetting.HotelReservationMaster", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany()
                        .HasForeignKey("BranchesDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany()
                        .HasForeignKey("CompanyDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Sales.CustomerData", "CustomerData")
                        .WithMany("HotelReservationMasters")
                        .HasForeignKey("CustomerDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.HotelSetting.HotelRoomData", "Room")
                        .WithMany("HotelReservationMasters")
                        .HasForeignKey("RoomId");

                    b.OwnsOne("ModelsUpgrade.Shared.Duration", "ReservationDuration", b1 =>
                        {
                            b1.Property<Guid>("HotelReservationMasterId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("EndDate")
                                .HasColumnType("date");

                            b1.Property<DateOnly>("StartDate")
                                .HasColumnType("date");

                            b1.HasKey("HotelReservationMasterId");

                            b1.ToTable("HotelReservationMaster");

                            b1.WithOwner()
                                .HasForeignKey("HotelReservationMasterId");
                        });

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");

                    b.Navigation("CustomerData");

                    b.Navigation("ReservationDuration");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HotelSetting.HotelRoomData", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany()
                        .HasForeignKey("BranchesDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany("HotelRoomData")
                        .HasForeignKey("CompanyDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.HotelSetting.HotelRoomData", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HotelSetting.HotelService", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany()
                        .HasForeignKey("BranchesDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany("HotelServices")
                        .HasForeignKey("CompanyDataId");

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Inventory.AdditionAdjustment", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("AdditionAdjustments")
                        .HasForeignKey("BranchesDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsHeader", "ItemsHeader")
                        .WithMany("AdditionAdjustments")
                        .HasForeignKey("ItemsHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Inventory.InventorySetting.StoreData", "StoreData")
                        .WithMany("AdditionAdjustments")
                        .HasForeignKey("StoreDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.UnitType", "UnitType")
                        .WithMany("AdditionAdjustments")
                        .HasForeignKey("UnitTypeId");

                    b.OwnsOne("ModelsUpgrade.Shared.PurchaseInfo", "PurchaseInfo", b1 =>
                        {
                            b1.Property<Guid>("AdditionAdjustmentId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("Price")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Quantity")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Value")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.HasKey("AdditionAdjustmentId");

                            b1.ToTable("AdditionAdjustment");

                            b1.WithOwner()
                                .HasForeignKey("AdditionAdjustmentId");
                        });

                    b.Navigation("BranchesData");

                    b.Navigation("ItemsHeader");

                    b.Navigation("PurchaseInfo")
                        .IsRequired();

                    b.Navigation("StoreData");

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Inventory.InventoryOrderFooter", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Inventory.InventoryOrderHeader", "InventoryOrderHeader")
                        .WithMany("InventoryOrderFooters")
                        .HasForeignKey("InventoryOrderHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsHeader", "ItemsHeader")
                        .WithMany("InventoryOrderFooters")
                        .HasForeignKey("ItemsHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.UnitType", "UnitType")
                        .WithMany("InventoryOrderFooters")
                        .HasForeignKey("UnitTypeId");

                    b.OwnsOne("ModelsUpgrade.Shared.PurchaseInfo", "OrderDetails", b1 =>
                        {
                            b1.Property<Guid>("InventoryOrderFooterId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("Price")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Quantity")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Value")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.HasKey("InventoryOrderFooterId");

                            b1.ToTable("InventoryOrderFooter");

                            b1.WithOwner()
                                .HasForeignKey("InventoryOrderFooterId");
                        });

                    b.Navigation("InventoryOrderHeader");

                    b.Navigation("ItemsHeader");

                    b.Navigation("OrderDetails")
                        .IsRequired();

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Inventory.InventoryOrderHeader", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("InventoryOrderHeaders")
                        .HasForeignKey("BranchesDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany()
                        .HasForeignKey("CompanyDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Inventory.InventorySetting.StoreData", "StoreData")
                        .WithMany("InventoryOrderHeaders")
                        .HasForeignKey("StoreDataId");

                    b.OwnsOne("ModelsUpgrade.Shared.DateInfo", "DateInfo", b1 =>
                        {
                            b1.Property<Guid>("InventoryOrderHeaderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("Date")
                                .HasColumnType("date");

                            b1.Property<short?>("Month")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.Property<short?>("Year")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.HasKey("InventoryOrderHeaderId");

                            b1.ToTable("InventoryOrderHeader");

                            b1.WithOwner()
                                .HasForeignKey("InventoryOrderHeaderId");
                        });

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");

                    b.Navigation("DateInfo")
                        .IsRequired();

                    b.Navigation("StoreData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Inventory.InventoryReports.ItemsStock", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Inventory.AdditionAdjustment", "AdditionAdjustment")
                        .WithMany("ItemsStocks")
                        .HasForeignKey("AdditionAdjustmentId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("ItemsStocks")
                        .HasForeignKey("BranchesDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Inventory.ItemsBalanceFooter", "ItemsBalanceFooter")
                        .WithMany("ItemsStocks")
                        .HasForeignKey("ItemsBalanceFooterId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsHeader", "ItemsHeader")
                        .WithMany("ItemsStocks")
                        .HasForeignKey("ItemsHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Purchasing.RequestReceiptFooter", "RequestReceiptFooter")
                        .WithMany("ItemsStocks")
                        .HasForeignKey("RequestReceiptFooterId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Purchasing.ReturnPurchasesFooter", "ReturnPurchasesFooter")
                        .WithMany("ItemsStocks")
                        .HasForeignKey("ReturnPurchasesFooterId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Sales.ReturnSalesFooter", "ReturnSalesFooter")
                        .WithMany("ItemsStocks")
                        .HasForeignKey("ReturnSalesFooterId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Sales.SalesInvoiceFooter", "SalesInvoiceFooter")
                        .WithMany("ItemsStocks")
                        .HasForeignKey("SalesInvoiceFooterId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Inventory.SettlementDiscount", "SettlementDiscount")
                        .WithMany("ItemsStocks")
                        .HasForeignKey("SettlementDiscountId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Inventory.InventorySetting.StoreData", "StoreData")
                        .WithMany("ItemsStocks")
                        .HasForeignKey("StoreDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Inventory.TransformationsDetail", "TransformationsDetail")
                        .WithMany("ItemsStocks")
                        .HasForeignKey("TransformationsDetailId");

                    b.OwnsOne("ModelsUpgrade.Shared.DateInfo", "DateInfo", b1 =>
                        {
                            b1.Property<Guid>("ItemsStockId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("Date")
                                .HasColumnType("date");

                            b1.Property<short?>("Month")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.Property<short?>("Year")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.HasKey("ItemsStockId");

                            b1.ToTable("ItemsStock");

                            b1.WithOwner()
                                .HasForeignKey("ItemsStockId");
                        });

                    b.Navigation("AdditionAdjustment");

                    b.Navigation("BranchesData");

                    b.Navigation("DateInfo")
                        .IsRequired();

                    b.Navigation("ItemsBalanceFooter");

                    b.Navigation("ItemsHeader");

                    b.Navigation("RequestReceiptFooter");

                    b.Navigation("ReturnPurchasesFooter");

                    b.Navigation("ReturnSalesFooter");

                    b.Navigation("SalesInvoiceFooter");

                    b.Navigation("SettlementDiscount");

                    b.Navigation("StoreData");

                    b.Navigation("TransformationsDetail");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Inventory.InventorySetting.StoreData", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.AccountName", "AccountsName")
                        .WithMany("StoreData")
                        .HasForeignKey("AccountsNameId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("StoreData")
                        .HasForeignKey("BranchesDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.CityCode", "CityCode")
                        .WithMany("StoreData")
                        .HasForeignKey("CityCodeId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmployeeData", "StoreManagerNavigation")
                        .WithMany("StoreData")
                        .HasForeignKey("StoreManagerNavigationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("ModelsUpgrade.Shared.ContactInfo", "ContactInformation", b1 =>
                        {
                            b1.Property<Guid>("StoreDataId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Fax")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Mobile")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Phone")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Whatsapp")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("StoreDataId");

                            b1.ToTable("StoreData");

                            b1.WithOwner()
                                .HasForeignKey("StoreDataId");
                        });

                    b.Navigation("AccountsName");

                    b.Navigation("BranchesData");

                    b.Navigation("CityCode");

                    b.Navigation("ContactInformation")
                        .IsRequired();

                    b.Navigation("StoreManagerNavigation");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Inventory.ItemsBalanceFooter", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Inventory.ItemsBalanceHeader", "ItemsBalanceHeader")
                        .WithMany("ItemsBalanceFooters")
                        .HasForeignKey("ItemsBalanceHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsHeader", "ItemsHeader")
                        .WithMany("ItemsBalanceFooters")
                        .HasForeignKey("ItemsHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.UnitType", "UnitType")
                        .WithMany("ItemsBalanceFooters")
                        .HasForeignKey("UnitTypeId");

                    b.OwnsOne("ModelsUpgrade.UpdatedModels.Inventory.ItemsBalanceValueObjs.ItemsBalanceCodeInfo", "ItemBalanceCodes", b1 =>
                        {
                            b1.Property<Guid>("ItemsBalanceFooterId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("InternalCode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("InternationalBarCode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("SupplierBarCode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ItemsBalanceFooterId");

                            b1.ToTable("ItemsBalanceFooter");

                            b1.WithOwner()
                                .HasForeignKey("ItemsBalanceFooterId");
                        });

                    b.OwnsOne("ModelsUpgrade.UpdatedModels.Inventory.ItemsBalanceValueObjs.ItemsBalancePurchaseInfo", "ItemBalancePurchaseInfo", b1 =>
                        {
                            b1.Property<Guid>("ItemsBalanceFooterId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("ItemPrice")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("ItemQuantity")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("ItemQuantityBroken")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("ItemQuantityDamaged")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("ItemValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.HasKey("ItemsBalanceFooterId");

                            b1.ToTable("ItemsBalanceFooter");

                            b1.WithOwner()
                                .HasForeignKey("ItemsBalanceFooterId");
                        });

                    b.Navigation("ItemBalanceCodes")
                        .IsRequired();

                    b.Navigation("ItemBalancePurchaseInfo")
                        .IsRequired();

                    b.Navigation("ItemsBalanceHeader");

                    b.Navigation("ItemsHeader");

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Inventory.ItemsBalanceHeader", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Inventory.InventorySetting.BalanceName", "BalanceName")
                        .WithMany("ItemsBalanceHeaders")
                        .HasForeignKey("BalanceNameId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("ItemsBalanceHeaders")
                        .HasForeignKey("BranchesDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany()
                        .HasForeignKey("CompanyDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Inventory.InventorySetting.StoreData", "StoreData")
                        .WithMany("ItemsBalanceHeaders")
                        .HasForeignKey("StoreDataId");

                    b.OwnsOne("ModelsUpgrade.Shared.DateInfo", "DateInfo", b1 =>
                        {
                            b1.Property<Guid>("ItemsBalanceHeaderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("Date")
                                .HasColumnType("date");

                            b1.Property<short?>("Month")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.Property<short?>("Year")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.HasKey("ItemsBalanceHeaderId");

                            b1.ToTable("ItemsBalanceHeader");

                            b1.WithOwner()
                                .HasForeignKey("ItemsBalanceHeaderId");
                        });

                    b.Navigation("BalanceName");

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");

                    b.Navigation("DateInfo")
                        .IsRequired();

                    b.Navigation("StoreData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Inventory.SettlementDiscount", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("SettlementDiscounts")
                        .HasForeignKey("BranchesDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsHeader", "ItemsHeader")
                        .WithMany("SettlementDiscounts")
                        .HasForeignKey("ItemsHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Inventory.InventorySetting.StoreData", "StoreData")
                        .WithMany("SettlementDiscounts")
                        .HasForeignKey("StoreDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.UnitType", "UnitType")
                        .WithMany("SettlementDiscounts")
                        .HasForeignKey("UnitTypeId");

                    b.OwnsOne("ModelsUpgrade.Shared.PurchaseInfo", "PurchaseInfo", b1 =>
                        {
                            b1.Property<Guid>("SettlementDiscountId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("Price")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Quantity")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Value")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.HasKey("SettlementDiscountId");

                            b1.ToTable("SettlementDiscount");

                            b1.WithOwner()
                                .HasForeignKey("SettlementDiscountId");
                        });

                    b.Navigation("BranchesData");

                    b.Navigation("ItemsHeader");

                    b.Navigation("PurchaseInfo")
                        .IsRequired();

                    b.Navigation("StoreData");

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Inventory.TransformationsDetail", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsHeader", "ItemsHeader")
                        .WithMany("TransformationsDetails")
                        .HasForeignKey("ItemsHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Inventory.TransformationsMaster", "TransformationsMaster")
                        .WithMany("TransformationsDetails")
                        .HasForeignKey("TransformationsMasterId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.UnitType", "UnitType")
                        .WithMany("TransformationsDetails")
                        .HasForeignKey("UnitTypeId");

                    b.OwnsOne("ModelsUpgrade.Shared.PurchaseInfo", "PurchaseInfo", b1 =>
                        {
                            b1.Property<Guid>("TransformationsDetailId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("Price")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Quantity")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Value")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.HasKey("TransformationsDetailId");

                            b1.ToTable("TransformationsDetail");

                            b1.WithOwner()
                                .HasForeignKey("TransformationsDetailId");
                        });

                    b.Navigation("ItemsHeader");

                    b.Navigation("PurchaseInfo")
                        .IsRequired();

                    b.Navigation("TransformationsMaster");

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Inventory.TransformationsMaster", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany("TransformationsMasters")
                        .HasForeignKey("CompanyDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Inventory.InventorySetting.StoreData", "From")
                        .WithMany("TransformationsMasterFroms")
                        .HasForeignKey("FromId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Inventory.InventorySetting.StoreData", "To")
                        .WithMany("TransformationsMasterTos")
                        .HasForeignKey("ToId");

                    b.Navigation("CompanyData");

                    b.Navigation("From");

                    b.Navigation("To");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ManageItems.ItemSize", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsHeader", "ItemHeader")
                        .WithMany("ItemsSizes")
                        .HasForeignKey("ItemHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.SizeType", "SizeType")
                        .WithMany("ItemsSizes")
                        .HasForeignKey("SizeTypeId");

                    b.Navigation("ItemHeader");

                    b.Navigation("SizeType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ManageItems.ItemsColor", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.ColorType", "ColorType")
                        .WithMany("ItemsColors")
                        .HasForeignKey("ColorTypeId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsHeader", "ItemHeader")
                        .WithMany("ItemsColors")
                        .HasForeignKey("ItemHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.SizeType", "SizeType")
                        .WithMany("ItemsColors")
                        .HasForeignKey("SizeTypeId");

                    b.Navigation("ColorType");

                    b.Navigation("ItemHeader");

                    b.Navigation("SizeType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ManageItems.ItemsGroup", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany("ItemsGroups")
                        .HasForeignKey("CompanyDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsGroup", "ParentCodeNavigation")
                        .WithMany("InverseParentCodeNavigation")
                        .HasForeignKey("ParentCodeNavigationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CompanyData");

                    b.Navigation("ParentCodeNavigation");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ManageItems.ItemsHeader", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany()
                        .HasForeignKey("CompanyDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.EInvoicing.ItemsCodeType", "ItemsCodeType")
                        .WithMany("ItemsHeaders")
                        .HasForeignKey("ItemsCodeTypeId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsGroup", "ItemsGroups")
                        .WithMany("ItemsHeaders")
                        .HasForeignKey("ItemsGroupsId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.ItemsType", "ItemsType")
                        .WithMany("ItemsHeaders")
                        .HasForeignKey("ItemsTypeId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Purchasing.SupplierData", "SupplierData")
                        .WithMany("ItemsHeaders")
                        .HasForeignKey("SupplierDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.UnitType", "UnitType")
                        .WithMany("ItemsHeaders")
                        .HasForeignKey("UnitTypeId");

                    b.OwnsOne("ModelsUpgrade.Shared.Duration", "DurationInfo", b1 =>
                        {
                            b1.Property<Guid>("ItemsHeaderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("EndDate")
                                .HasColumnType("date");

                            b1.Property<DateOnly>("StartDate")
                                .HasColumnType("date");

                            b1.HasKey("ItemsHeaderId");

                            b1.ToTable("ItemsHeader");

                            b1.WithOwner()
                                .HasForeignKey("ItemsHeaderId");
                        });

                    b.OwnsOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsValueObjs.ItemsCodeInfo", "ItemsCodeInfo", b1 =>
                        {
                            b1.Property<Guid>("ItemsHeaderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("InternalCode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("InternationalBarCode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("SupplierBarCode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ItemsHeaderId");

                            b1.ToTable("ItemsHeader");

                            b1.WithOwner()
                                .HasForeignKey("ItemsHeaderId");
                        });

                    b.OwnsOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsValueObjs.ItemsPricingDetails", "PricingDetails", b1 =>
                        {
                            b1.Property<Guid>("ItemsHeaderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("ItemPrice1")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("ItemPrice2")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("ItemPrice3")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("ItemPrice4")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("ItemPrice5")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("ItemPriceCost")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("ItemPricePurchase")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("ItemProfit1")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<int?>("StockLimit")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasDefaultValueSql("0");

                            b1.HasKey("ItemsHeaderId");

                            b1.ToTable("ItemsHeader");

                            b1.WithOwner()
                                .HasForeignKey("ItemsHeaderId");
                        });

                    b.Navigation("CompanyData");

                    b.Navigation("DurationInfo")
                        .IsRequired();

                    b.Navigation("ItemsCodeInfo")
                        .IsRequired();

                    b.Navigation("ItemsCodeType");

                    b.Navigation("ItemsGroups");

                    b.Navigation("ItemsType");

                    b.Navigation("PricingDetails")
                        .IsRequired();

                    b.Navigation("SupplierData");

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ManageItems.ItemsPricePurchase", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsHeader", "ItemsHeader")
                        .WithMany("ItemsPricePurchases")
                        .HasForeignKey("ItemsHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Purchasing.SupplierData", "SupplierData")
                        .WithMany("ItemsPricePurchases")
                        .HasForeignKey("SupplierDataId");

                    b.Navigation("ItemsHeader");

                    b.Navigation("SupplierData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ManageItems.ItemsPriceSale", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsHeader", "ItemsHeader")
                        .WithMany("ItemsPriceSales")
                        .HasForeignKey("ItemsHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.PriceType", "PriceType")
                        .WithMany("ItemsPriceSales")
                        .HasForeignKey("PriceTypeId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.UnitType", "UnitType")
                        .WithMany("ItemsPriceSales")
                        .HasForeignKey("UnitTypeId");

                    b.Navigation("ItemsHeader");

                    b.Navigation("PriceType");

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ManageItems.ItemsProduction", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsHeader", "ItemsHeader")
                        .WithMany("ItemsProductions")
                        .HasForeignKey("ItemsHeaderId");

                    b.Navigation("ItemsHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Medical.MedAnalysisName", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("MedAnalysisNames")
                        .HasForeignKey("BranchesDataId");

                    b.Navigation("BranchesData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Medical.MedCustomerDetail", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Medical.MedAnalysisName", "AnalysisName")
                        .WithMany("MedCustomerDetails")
                        .HasForeignKey("AnalysisNameId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Sales.CustomerData", "CustomerData")
                        .WithMany("MedCustomerDetails")
                        .HasForeignKey("CustomerDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Medical.MedRaysName", "RaysName")
                        .WithMany("MedCustomerDetails")
                        .HasForeignKey("RaysNameId");

                    b.Navigation("AnalysisName");

                    b.Navigation("CustomerData");

                    b.Navigation("RaysName");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Medical.MedCustomerMedicalService", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Sales.CustomerData", "CustomerData")
                        .WithMany("MedCustomerMedicalServices")
                        .HasForeignKey("CustomerDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Medical.MedMedicalService", "MedicalServices")
                        .WithMany("MedCustomerMedicalServices")
                        .HasForeignKey("MedicalServicesId");

                    b.Navigation("CustomerData");

                    b.Navigation("MedicalServices");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Medical.MedCustomerSurgicalService", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Sales.CustomerData", "CustomerData")
                        .WithMany("MedCustomerSurgicalServices")
                        .HasForeignKey("CustomerDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Medical.MedSurgicalService", "SurgicalServices")
                        .WithMany("MedCustomerSurgicalServices")
                        .HasForeignKey("SurgicalServicesId");

                    b.OwnsOne("ModelsUpgrade.Shared.PurchaseInfo", "PurchaseInfo", b1 =>
                        {
                            b1.Property<Guid>("MedCustomerSurgicalServiceId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("Price")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Quantity")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Value")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.HasKey("MedCustomerSurgicalServiceId");

                            b1.ToTable("MedCustomerSurgicalService");

                            b1.WithOwner()
                                .HasForeignKey("MedCustomerSurgicalServiceId");
                        });

                    b.Navigation("CustomerData");

                    b.Navigation("PurchaseInfo");

                    b.Navigation("SurgicalServices");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Medical.MedMedicalService", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("MedMedicalServices")
                        .HasForeignKey("BranchesDataId");

                    b.Navigation("BranchesData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Medical.MedPartnerData", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("MedPartnerData")
                        .HasForeignKey("BranchesDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.CityCode", "CityCode")
                        .WithMany("MedPartnerData")
                        .HasForeignKey("CityCodeId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.JobData", "JobData")
                        .WithMany("MedPartnerData")
                        .HasForeignKey("JobDataId");

                    b.OwnsOne("ModelsUpgrade.Shared.ContactInfo", "PartnerContacInfo", b1 =>
                        {
                            b1.Property<Guid>("MedPartnerDataId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Fax")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Mobile")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Phone")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Whatsapp")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("MedPartnerDataId");

                            b1.ToTable("MedPartnerData");

                            b1.WithOwner()
                                .HasForeignKey("MedPartnerDataId");
                        });

                    b.Navigation("BranchesData");

                    b.Navigation("CityCode");

                    b.Navigation("JobData");

                    b.Navigation("PartnerContacInfo")
                        .IsRequired();
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Medical.MedRaysName", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("MedRaysNames")
                        .HasForeignKey("BranchesDataId");

                    b.Navigation("BranchesData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Medical.MedSurgicalService", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("MedSurgicalServices")
                        .HasForeignKey("BranchesDataId");

                    b.Navigation("BranchesData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.POSCasher.PosMachine", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("Posmachines")
                        .HasForeignKey("BranchesDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BranchesData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.POSCasher.PosPaymentDaily", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.PaymentMode", "PaymentModes")
                        .WithMany("PospaymentDailies")
                        .HasForeignKey("PaymentModesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.POSCasher.PosSale", "PosSales")
                        .WithMany("PospaymentDailies")
                        .HasForeignKey("PossalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("ModelsUpgrade.UpdatedModels.POSCasher.POSValueObjs.POSTransactionInfo", "TransactionInfo", b1 =>
                        {
                            b1.Property<Guid>("PosPaymentDailyId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("Balance")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Credit")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Debit")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.HasKey("PosPaymentDailyId");

                            b1.ToTable("PosPaymentDaily");

                            b1.WithOwner()
                                .HasForeignKey("PosPaymentDailyId");
                        });

                    b.Navigation("PaymentModes");

                    b.Navigation("PosSales");

                    b.Navigation("TransactionInfo")
                        .IsRequired();
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.POSCasher.PosSale", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("PosSales")
                        .HasForeignKey("BranchesDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Sales.CustomerData", "CustomerData")
                        .WithMany("Possales")
                        .HasForeignKey("CustomerDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.PriceType", "PriceType")
                        .WithMany("Possales")
                        .HasForeignKey("PriceTypeId");

                    b.OwnsOne("ModelsUpgrade.UpdatedModels.POSCasher.POSValueObjs.POSPricingDetails", "PricingDetails", b1 =>
                        {
                            b1.Property<Guid>("PosSaleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("NetValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("TaxTotals")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("TotalDiscounts")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("TotalValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.HasKey("PosSaleId");

                            b1.ToTable("PosSale");

                            b1.WithOwner()
                                .HasForeignKey("PosSaleId");
                        });

                    b.OwnsOne("ModelsUpgrade.Shared.DateInfo", "DateInfo", b1 =>
                        {
                            b1.Property<Guid>("PosSaleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("Date")
                                .HasColumnType("date");

                            b1.Property<short?>("Month")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.Property<short?>("Year")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.HasKey("PosSaleId");

                            b1.ToTable("PosSale");

                            b1.WithOwner()
                                .HasForeignKey("PosSaleId");
                        });

                    b.Navigation("BranchesData");

                    b.Navigation("CustomerData");

                    b.Navigation("DateInfo")
                        .IsRequired();

                    b.Navigation("PriceType");

                    b.Navigation("PricingDetails")
                        .IsRequired();
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.POSCasher.PosSalesDetail", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsHeader", "ItemsHeader")
                        .WithMany("PossalesDetails")
                        .HasForeignKey("ItemsHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.POSCasher.PosSale", "Possales")
                        .WithMany("PossalesDetails")
                        .HasForeignKey("PosSalesId");

                    b.OwnsOne("ModelsUpgrade.Shared.ObjectPricingDetails", "PricingDetails", b1 =>
                        {
                            b1.Property<Guid>("PosSalesDetailId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("DiscountValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("ItemValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("NetValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Quantity")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("TaxValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("UnitPrice")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.HasKey("PosSalesDetailId");

                            b1.ToTable("PosSalesDetail");

                            b1.WithOwner()
                                .HasForeignKey("PosSalesDetailId");
                        });

                    b.Navigation("ItemsHeader");

                    b.Navigation("Possales");

                    b.Navigation("PricingDetails")
                        .IsRequired();
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.POSCasher.PosSalesDiscount", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.POSCasher.PosSalesDetail", "PosSalesDetails")
                        .WithMany("PossalesDiscounts")
                        .HasForeignKey("PossalesDetailsId");

                    b.Navigation("PosSalesDetails");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.POSCasher.PosSession", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("PosSessions")
                        .HasForeignKey("BranchesDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmployeeData", "EmployeesData")
                        .WithMany("Possessions")
                        .HasForeignKey("EmployeesDataId");

                    b.Navigation("BranchesData");

                    b.Navigation("EmployeesData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PAdditionAdjustment", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("PadditionAdjustments")
                        .HasForeignKey("BranchesDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Production.PItemsHeader", "PitemsHeader")
                        .WithMany("PadditionAdjustments")
                        .HasForeignKey("PItemsHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Inventory.InventorySetting.StoreData", "StoreData")
                        .WithMany("PadditionAdjustments")
                        .HasForeignKey("StoreDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.UnitType", "UnitType")
                        .WithMany("PadditionAdjustments")
                        .HasForeignKey("UnitTypeId");

                    b.OwnsOne("ModelsUpgrade.Shared.PurchaseInfo", "TransactionInfo", b1 =>
                        {
                            b1.Property<Guid>("PAdditionAdjustmentId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("Price")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Quantity")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Value")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.HasKey("PAdditionAdjustmentId");

                            b1.ToTable("PAdditionAdjustment");

                            b1.WithOwner()
                                .HasForeignKey("PAdditionAdjustmentId");
                        });

                    b.Navigation("BranchesData");

                    b.Navigation("PitemsHeader");

                    b.Navigation("StoreData");

                    b.Navigation("TransactionInfo");

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PInventoryOrderFooter", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany()
                        .HasForeignKey("BranchesDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.Production.PInventoryOrderHeader", "InventoryOrderHeader")
                        .WithMany("PinventoryOrderFooters")
                        .HasForeignKey("PInventoryHeaderId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ModelsUpgrade.UpdatedModels.Production.PItemsHeader", "PitemsHeader")
                        .WithMany("PinventoryOrderFooters")
                        .HasForeignKey("PItemsHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Inventory.InventorySetting.StoreData", "StoreData")
                        .WithMany()
                        .HasForeignKey("StoreDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.UnitType", "UnitType")
                        .WithMany("PInventoryOrderFooters")
                        .HasForeignKey("UnitTypeId");

                    b.OwnsOne("ModelsUpgrade.Shared.PurchaseInfo", "TransactionInfo", b1 =>
                        {
                            b1.Property<Guid>("PInventoryOrderFooterId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("Price")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Quantity")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Value")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.HasKey("PInventoryOrderFooterId");

                            b1.ToTable("PInventoryOrderFooter");

                            b1.WithOwner()
                                .HasForeignKey("PInventoryOrderFooterId");
                        });

                    b.Navigation("BranchesData");

                    b.Navigation("InventoryOrderHeader");

                    b.Navigation("PitemsHeader");

                    b.Navigation("StoreData");

                    b.Navigation("TransactionInfo")
                        .IsRequired();

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PInventoryOrderHeader", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("PinventoryOrderHeaders")
                        .HasForeignKey("BranchesDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany()
                        .HasForeignKey("CompanyDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.Inventory.InventorySetting.StoreData", "StoreData")
                        .WithMany("PinventoryOrderHeaders")
                        .HasForeignKey("StoreDataId");

                    b.OwnsOne("ModelsUpgrade.Shared.DateInfo", "DateInfo", b1 =>
                        {
                            b1.Property<Guid>("PInventoryOrderHeaderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("Date")
                                .HasColumnType("date");

                            b1.Property<short?>("Month")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.Property<short?>("Year")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.HasKey("PInventoryOrderHeaderId");

                            b1.ToTable("PInventoryOrderHeader");

                            b1.WithOwner()
                                .HasForeignKey("PInventoryOrderHeaderId");
                        });

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");

                    b.Navigation("DateInfo")
                        .IsRequired();

                    b.Navigation("StoreData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PItemsBalanceFooter", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Production.PItemsBalanceHeader", "PItemsBalanceHeader")
                        .WithMany("PItemsBalanceFooters")
                        .HasForeignKey("PItemsBalanceHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Production.PItemsHeader", "PItemsHeader")
                        .WithMany("PitemsBalanceFooters")
                        .HasForeignKey("PItemsHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.UnitType", "UnitType")
                        .WithMany("PItemsBalanceFooters")
                        .HasForeignKey("UnitTypeId");

                    b.OwnsOne("ModelsUpgrade.Shared.PurchaseInfo", "PurchaseInfo", b1 =>
                        {
                            b1.Property<Guid>("PItemsBalanceFooterId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("Price")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Quantity")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Value")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.HasKey("PItemsBalanceFooterId");

                            b1.ToTable("PItemsBalanceFooter");

                            b1.WithOwner()
                                .HasForeignKey("PItemsBalanceFooterId");
                        });

                    b.Navigation("PItemsBalanceHeader");

                    b.Navigation("PItemsHeader");

                    b.Navigation("PurchaseInfo");

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PItemsBalanceHeader", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("PitemsBalanceHeaders")
                        .HasForeignKey("BranchesDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany()
                        .HasForeignKey("CompanyDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.Inventory.InventorySetting.StoreData", "StoreData")
                        .WithMany("PitemsBalanceHeaders")
                        .HasForeignKey("StoreDataId");

                    b.OwnsOne("ModelsUpgrade.Shared.DateInfo", "DateInfo", b1 =>
                        {
                            b1.Property<Guid>("PItemsBalanceHeaderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("Date")
                                .HasColumnType("date");

                            b1.Property<short?>("Month")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.Property<short?>("Year")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.HasKey("PItemsBalanceHeaderId");

                            b1.ToTable("PItemsBalanceHeader");

                            b1.WithOwner()
                                .HasForeignKey("PItemsBalanceHeaderId");
                        });

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");

                    b.Navigation("DateInfo")
                        .IsRequired();

                    b.Navigation("StoreData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PItemsGroup", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany("PitemsGroups")
                        .HasForeignKey("CompanyDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Production.PItemsGroup", "ParentCodeNavigation")
                        .WithMany("InverseParentCodeNavigation")
                        .HasForeignKey("ParentCodeNavigationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CompanyData");

                    b.Navigation("ParentCodeNavigation");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PItemsHeader", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.AccountName", "AccountNameSales")
                        .WithMany("PitemsHeaderAccountNameSales")
                        .HasForeignKey("AccountNameSalesId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.AccountName", "AccountsNamePurchas")
                        .WithMany("PitemsHeaderAccountsNamePurchas")
                        .HasForeignKey("AccountsNamePurchasId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany()
                        .HasForeignKey("BranchesDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany()
                        .HasForeignKey("CompanyDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.ItemsType", "ItemsType")
                        .WithMany("PitemsHeaders")
                        .HasForeignKey("ItemsTypeId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Production.PItemsGroup", "PItemsGroups")
                        .WithMany("PItemsHeaders")
                        .HasForeignKey("PitemsGroupsId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Purchasing.SupplierData", "SupplierData")
                        .WithMany("PitemsHeaders")
                        .HasForeignKey("SupplierDataId");

                    b.OwnsOne("ModelsUpgrade.Shared.Duration", "Duration", b1 =>
                        {
                            b1.Property<Guid>("PItemsHeaderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("EndDate")
                                .HasColumnType("date");

                            b1.Property<DateOnly>("StartDate")
                                .HasColumnType("date");

                            b1.HasKey("PItemsHeaderId");

                            b1.ToTable("PItemsHeader");

                            b1.WithOwner()
                                .HasForeignKey("PItemsHeaderId");
                        });

                    b.Navigation("AccountNameSales");

                    b.Navigation("AccountsNamePurchas");

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");

                    b.Navigation("Duration")
                        .IsRequired();

                    b.Navigation("ItemsType");

                    b.Navigation("PItemsGroups");

                    b.Navigation("SupplierData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PItemsStock", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("PitemsStocks")
                        .HasForeignKey("BranchesDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Production.PAdditionAdjustment", "PAdditionAdjustment")
                        .WithMany("PItemsStocks")
                        .HasForeignKey("PAdditionAdjustmentId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Production.PInventoryOrderFooter", null)
                        .WithMany("PitemsStocks")
                        .HasForeignKey("PInventoryOrderFooterId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Production.PItemsBalanceFooter", "PItemsBalanceFooter")
                        .WithMany("PitemsStocks")
                        .HasForeignKey("PItemsBalanceFooterId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Production.PItemsHeader", "PItemsHeader")
                        .WithMany("PItemsStocks")
                        .HasForeignKey("PItemsHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Production.PRequestReceiptFooter", "PRequestReceiptFooter")
                        .WithMany("PItemsStocks")
                        .HasForeignKey("PRequestReceiptFooterId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Production.PRequestReservationFooter", "PRequestReservationFooter")
                        .WithMany("PItemsStocks")
                        .HasForeignKey("PRequestReservationFooterId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Production.PReturnPurchasesFooter", "PReturnPurchasesFooter")
                        .WithMany("PItemsStocks")
                        .HasForeignKey("PReturnPurchasesFooterId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Production.PReturnReservationFooter", "PReturnReservationFooter")
                        .WithMany("PitemsStocks")
                        .HasForeignKey("PReturnReservationFooterId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Production.PSettlementDiscount", "PSettlementDiscount")
                        .WithMany("PitemsStocks")
                        .HasForeignKey("PSettlementDiscountId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Inventory.InventorySetting.StoreData", "StoreData")
                        .WithMany("PitemsStocks")
                        .HasForeignKey("StoreDataId");

                    b.OwnsOne("ModelsUpgrade.Shared.DateInfo", "DateInfo", b1 =>
                        {
                            b1.Property<Guid>("PItemsStockId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("Date")
                                .HasColumnType("date");

                            b1.Property<short?>("Month")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.Property<short?>("Year")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.HasKey("PItemsStockId");

                            b1.ToTable("PItemsStock");

                            b1.WithOwner()
                                .HasForeignKey("PItemsStockId");
                        });

                    b.Navigation("BranchesData");

                    b.Navigation("DateInfo")
                        .IsRequired();

                    b.Navigation("PAdditionAdjustment");

                    b.Navigation("PItemsBalanceFooter");

                    b.Navigation("PItemsHeader");

                    b.Navigation("PRequestReceiptFooter");

                    b.Navigation("PRequestReservationFooter");

                    b.Navigation("PReturnPurchasesFooter");

                    b.Navigation("PReturnReservationFooter");

                    b.Navigation("PSettlementDiscount");

                    b.Navigation("StoreData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PPurchasesInvoiceFooter", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Production.PItemsHeader", "PItemsHeader")
                        .WithMany("PPurchasesInvoiceFooters")
                        .HasForeignKey("PItemsHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Production.PPurchasesInvoiceHeader", "PPurchasesInvoiceHeader")
                        .WithMany("PpurchasesInvoiceFooters")
                        .HasForeignKey("PPurchasesInvoiceHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.UnitType", "UnitType")
                        .WithMany("PPurchasesInvoiceFooters")
                        .HasForeignKey("UnitTypeId");

                    b.OwnsOne("ModelsUpgrade.Shared.ObjectPricingDetails", "PricingDetails", b1 =>
                        {
                            b1.Property<Guid>("PPurchasesInvoiceFooterId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("DiscountValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("ItemValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("NetValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Quantity")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("TaxValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("UnitPrice")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.HasKey("PPurchasesInvoiceFooterId");

                            b1.ToTable("PPurchasesInvoiceFooter");

                            b1.WithOwner()
                                .HasForeignKey("PPurchasesInvoiceFooterId");
                        });

                    b.Navigation("PItemsHeader");

                    b.Navigation("PPurchasesInvoiceHeader");

                    b.Navigation("PricingDetails")
                        .IsRequired();

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PPurchasesInvoiceHeader", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("PPurchasesInvoiceHeaders")
                        .HasForeignKey("BranchesDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany()
                        .HasForeignKey("CompanyDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.Production.PRequestReceiptHeader", "PrequestReceiptHeader")
                        .WithMany("PpurchasesInvoiceHeaders")
                        .HasForeignKey("PrequestReceiptHeaderid");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Purchasing.SupplierData", "SuppliersData")
                        .WithMany("PPurchasesInvoiceHeaders")
                        .HasForeignKey("SuppliersDataid");

                    b.OwnsOne("ModelsUpgrade.Shared.DateInfo", "DateInfo", b1 =>
                        {
                            b1.Property<Guid>("PPurchasesInvoiceHeaderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("Date")
                                .HasColumnType("date");

                            b1.Property<short?>("Month")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.Property<short?>("Year")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.HasKey("PPurchasesInvoiceHeaderId");

                            b1.ToTable("PPurchasesInvoiceHeader");

                            b1.WithOwner()
                                .HasForeignKey("PPurchasesInvoiceHeaderId");
                        });

                    b.OwnsOne("ModelsUpgrade.Shared.ObjectPricingDetails", "PricingDetails", b1 =>
                        {
                            b1.Property<Guid>("PPurchasesInvoiceHeaderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("DiscountValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("ItemValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("NetValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Quantity")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("TaxValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("UnitPrice")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.HasKey("PPurchasesInvoiceHeaderId");

                            b1.ToTable("PPurchasesInvoiceHeader");

                            b1.WithOwner()
                                .HasForeignKey("PPurchasesInvoiceHeaderId");
                        });

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");

                    b.Navigation("DateInfo")
                        .IsRequired();

                    b.Navigation("PrequestReceiptHeader");

                    b.Navigation("PricingDetails")
                        .IsRequired();

                    b.Navigation("SuppliersData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PRequestReceiptFooter", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Production.PItemsHeader", "PItemsHeader")
                        .WithMany("PRequestReceiptFooters")
                        .HasForeignKey("PItemsHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Production.PRequestReceiptHeader", "PRequestReceiptHeader")
                        .WithMany("PrequestReceiptFooters")
                        .HasForeignKey("PRequestReceiptHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.UnitType", "UnitType")
                        .WithMany("PRequestReceiptFooters")
                        .HasForeignKey("UnitTypeId");

                    b.OwnsOne("ModelsUpgrade.Shared.PurchaseInfo", "PurchaseInfo", b1 =>
                        {
                            b1.Property<Guid>("PRequestReceiptFooterId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("Price")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Quantity")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Value")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.HasKey("PRequestReceiptFooterId");

                            b1.ToTable("PRequestReceiptFooter");

                            b1.WithOwner()
                                .HasForeignKey("PRequestReceiptFooterId");
                        });

                    b.Navigation("PItemsHeader");

                    b.Navigation("PRequestReceiptHeader");

                    b.Navigation("PurchaseInfo")
                        .IsRequired();

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PRequestReceiptHeader", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("PRequestReceiptHeaders")
                        .HasForeignKey("BranchesDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany()
                        .HasForeignKey("CompanyDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.Production.PInventoryOrderHeader", "PPurchaseOrderHeader")
                        .WithMany("PrequestReceiptHeaders")
                        .HasForeignKey("PpurchaseOrderHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Inventory.InventorySetting.StoreData", "StoreData")
                        .WithMany("PrequestReceiptHeaders")
                        .HasForeignKey("StoreDataId");

                    b.OwnsOne("ModelsUpgrade.Shared.DateInfo", "DateInfo", b1 =>
                        {
                            b1.Property<Guid>("PRequestReceiptHeaderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("Date")
                                .HasColumnType("date");

                            b1.Property<short?>("Month")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.Property<short?>("Year")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.HasKey("PRequestReceiptHeaderId");

                            b1.ToTable("PRequestReceiptHeader");

                            b1.WithOwner()
                                .HasForeignKey("PRequestReceiptHeaderId");
                        });

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");

                    b.Navigation("DateInfo")
                        .IsRequired();

                    b.Navigation("PPurchaseOrderHeader");

                    b.Navigation("StoreData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PRequestReservationFooter", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Production.PItemsHeader", "PItemsHeader")
                        .WithMany("PRequestReservationFooters")
                        .HasForeignKey("PItemsHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Production.PRequestReservationHeader", "PRequestReservationHeader")
                        .WithMany("PRequestReservationFooters")
                        .HasForeignKey("PrequestReservationHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.UnitType", "UnitType")
                        .WithMany("PRequestReservationFooters")
                        .HasForeignKey("UnitTypeId");

                    b.OwnsOne("ModelsUpgrade.Shared.PurchaseInfo", "PurchaseInfo", b1 =>
                        {
                            b1.Property<Guid>("PRequestReservationFooterId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("Price")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Quantity")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Value")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.HasKey("PRequestReservationFooterId");

                            b1.ToTable("PRequestReservationFooter");

                            b1.WithOwner()
                                .HasForeignKey("PRequestReservationFooterId");
                        });

                    b.Navigation("PItemsHeader");

                    b.Navigation("PRequestReservationHeader");

                    b.Navigation("PurchaseInfo")
                        .IsRequired();

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PRequestReservationHeader", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("PRequestReservationHeaders")
                        .HasForeignKey("BranchesDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany()
                        .HasForeignKey("CompanyDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("ModelsUpgrade.Shared.DateInfo", "DateInfo", b1 =>
                        {
                            b1.Property<Guid>("PRequestReservationHeaderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("Date")
                                .HasColumnType("date");

                            b1.Property<short?>("Month")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.Property<short?>("Year")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.HasKey("PRequestReservationHeaderId");

                            b1.ToTable("PRequestReservationHeader");

                            b1.WithOwner()
                                .HasForeignKey("PRequestReservationHeaderId");
                        });

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");

                    b.Navigation("DateInfo")
                        .IsRequired();
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PReturnPurchasesFooter", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Production.PItemsHeader", "PItemsHeader")
                        .WithMany("PReturnPurchasesFooters")
                        .HasForeignKey("PitemsHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Production.PReturnPurchasesHeader", "PReturnPurchasesHeader")
                        .WithMany("PReturnPurchasesFooters")
                        .HasForeignKey("PreturnPurchasesHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.UnitType", "UnitType")
                        .WithMany("PReturnPurchasesFooters")
                        .HasForeignKey("UnitTypeId");

                    b.OwnsOne("ModelsUpgrade.Shared.ObjectPricingDetails", "PricingDetails", b1 =>
                        {
                            b1.Property<Guid>("PReturnPurchasesFooterId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("DiscountValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("ItemValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("NetValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Quantity")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("TaxValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("UnitPrice")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.HasKey("PReturnPurchasesFooterId");

                            b1.ToTable("PReturnPurchasesFooter");

                            b1.WithOwner()
                                .HasForeignKey("PReturnPurchasesFooterId");
                        });

                    b.Navigation("PItemsHeader");

                    b.Navigation("PReturnPurchasesHeader");

                    b.Navigation("PricingDetails")
                        .IsRequired();

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PReturnPurchasesHeader", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("PReturnPurchasesHeaders")
                        .HasForeignKey("BranchesDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany()
                        .HasForeignKey("CompanyDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.EInvoicing.DocumentsMode", "DocumentsModes")
                        .WithMany("PreturnPurchasesHeaders")
                        .HasForeignKey("DocumentsModesId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.PaymentMode", "PaymentModes")
                        .WithMany("PreturnPurchasesHeaders")
                        .HasForeignKey("PaymentModesId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Production.PPurchasesInvoiceHeader", "PinvoicePurchasesHeader")
                        .WithMany("PReturnPurchasesHeaders")
                        .HasForeignKey("PinvoicePurchasesHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Purchasing.SupplierData", "SuppliersData")
                        .WithMany("PReturnPurchasesHeaders")
                        .HasForeignKey("SuppliersDataId");

                    b.OwnsOne("ModelsUpgrade.Shared.DateInfo", "DateInfo", b1 =>
                        {
                            b1.Property<Guid>("PReturnPurchasesHeaderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("Date")
                                .HasColumnType("date");

                            b1.Property<short?>("Month")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.Property<short?>("Year")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.HasKey("PReturnPurchasesHeaderId");

                            b1.ToTable("PReturnPurchasesHeader");

                            b1.WithOwner()
                                .HasForeignKey("PReturnPurchasesHeaderId");
                        });

                    b.OwnsOne("ModelsUpgrade.Shared.ObjectPricingDetails", "PricingDetails", b1 =>
                        {
                            b1.Property<Guid>("PReturnPurchasesHeaderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("DiscountValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("ItemValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("NetValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Quantity")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("TaxValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("UnitPrice")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.HasKey("PReturnPurchasesHeaderId");

                            b1.ToTable("PReturnPurchasesHeader");

                            b1.WithOwner()
                                .HasForeignKey("PReturnPurchasesHeaderId");
                        });

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");

                    b.Navigation("DateInfo")
                        .IsRequired();

                    b.Navigation("DocumentsModes");

                    b.Navigation("PaymentModes");

                    b.Navigation("PinvoicePurchasesHeader");

                    b.Navigation("PricingDetails")
                        .IsRequired();

                    b.Navigation("SuppliersData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PReturnReservationFooter", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Production.PItemsHeader", "PitemsHeader")
                        .WithMany("PReturnReservationFooters")
                        .HasForeignKey("PitemsHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Production.PReturnReservationHeader", "PReturnReservationHeader")
                        .WithMany("PReturnReservationFooters")
                        .HasForeignKey("PreturnReservationHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.UnitType", "UnitType")
                        .WithMany("PReturnReservationFooters")
                        .HasForeignKey("UnitTypeId");

                    b.OwnsOne("ModelsUpgrade.Shared.PurchaseInfo", "PurchaseInfo", b1 =>
                        {
                            b1.Property<Guid>("PReturnReservationFooterId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("Price")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Quantity")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Value")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.HasKey("PReturnReservationFooterId");

                            b1.ToTable("PReturnReservationFooter");

                            b1.WithOwner()
                                .HasForeignKey("PReturnReservationFooterId");
                        });

                    b.Navigation("PReturnReservationHeader");

                    b.Navigation("PitemsHeader");

                    b.Navigation("PurchaseInfo")
                        .IsRequired();

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PReturnReservationHeader", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("PReturnReservationHeaders")
                        .HasForeignKey("BranchesDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany()
                        .HasForeignKey("CompanyDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("ModelsUpgrade.Shared.DateInfo", "DateInfo", b1 =>
                        {
                            b1.Property<Guid>("PReturnReservationHeaderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("Date")
                                .HasColumnType("date");

                            b1.Property<short?>("Month")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.Property<short?>("Year")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.HasKey("PReturnReservationHeaderId");

                            b1.ToTable("PReturnReservationHeader");

                            b1.WithOwner()
                                .HasForeignKey("PReturnReservationHeaderId");
                        });

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");

                    b.Navigation("DateInfo")
                        .IsRequired();
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PSettlementDiscount", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("PsettlementDiscounts")
                        .HasForeignKey("BranchesDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsHeader", "ItemsHeader")
                        .WithMany("PsettlementDiscounts")
                        .HasForeignKey("ItemsHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Inventory.InventorySetting.StoreData", "StoreData")
                        .WithMany("PsettlementDiscounts")
                        .HasForeignKey("StoreDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.UnitType", "UnitType")
                        .WithMany("PRSettlementDiscounts")
                        .HasForeignKey("UnitTypeId");

                    b.OwnsOne("ModelsUpgrade.Shared.PurchaseInfo", "PurchaseInfo", b1 =>
                        {
                            b1.Property<Guid>("PSettlementDiscountId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("Price")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Quantity")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Value")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.HasKey("PSettlementDiscountId");

                            b1.ToTable("PSettlementDiscount");

                            b1.WithOwner()
                                .HasForeignKey("PSettlementDiscountId");
                        });

                    b.Navigation("BranchesData");

                    b.Navigation("ItemsHeader");

                    b.Navigation("PurchaseInfo")
                        .IsRequired();

                    b.Navigation("StoreData");

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ProgramSetting.ApplicationMenu", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("ApplicationMenus")
                        .HasForeignKey("BranchesDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany("ApplicationMenus")
                        .HasForeignKey("CompanyDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ProgramSetting.ApplicationSetting", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany("ApplicationSettings")
                        .HasForeignKey("CompanyDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.CountryCode", "CountryCode")
                        .WithMany("ApplicationSettings")
                        .HasForeignKey("CountryCodeId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Inventory.InventoryValuation", "InventoryValuation")
                        .WithMany("ApplicationSettings")
                        .HasForeignKey("InventoryValuationId");

                    b.Navigation("CompanyData");

                    b.Navigation("CountryCode");

                    b.Navigation("InventoryValuation");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ProgramSetting.AspPermission", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.ProgramSetting.ApplicationMenu", "ApplicationMenu")
                        .WithMany("AspPermissions")
                        .HasForeignKey("ApplicationMenuId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Security.AppUser", "AspNetUser")
                        .WithMany()
                        .HasForeignKey("AspNetUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationMenu");

                    b.Navigation("AspNetUser");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ProgramSetting.AttatchmentFile", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.ProgramSetting.AttachmentFilesType", "AttachmentFilesType")
                        .WithMany("AttachmentFiles")
                        .HasForeignKey("AttachmentFilesTypeId");

                    b.Navigation("AttachmentFilesType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ProgramSetting.DatabaseDescription", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.ProgramSetting.DatabaseDescription", "ParentCodeNavigation")
                        .WithMany("InverseParentCodeNavigation")
                        .HasForeignKey("ParentCodeNavigationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ParentCodeNavigation");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ProgramSetting.ProgramOption", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.ProgramSetting.ApplicationMenu", "ApplicationMenu")
                        .WithMany("ProgramOptions")
                        .HasForeignKey("ApplicationMenuId");

                    b.Navigation("ApplicationMenu");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ProgramSetting.ReportsName", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.ProgramSetting.ApplicationMenu", "ApplicationMenu")
                        .WithMany("ReportsNames")
                        .HasForeignKey("ApplicationMenuId");

                    b.Navigation("ApplicationMenu");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Purchasing.PurchasesInvoiceDiscount", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.DiscountType", "DiscountType")
                        .WithMany("PurchasesInvoiceDiscounts")
                        .HasForeignKey("DiscountTypeId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Purchasing.PurchasesInvoiceFooter", "PurchasesInvoiceFooter")
                        .WithMany("PurchasesInvoiceDiscounts")
                        .HasForeignKey("PurchasesInvoiceFooterId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Purchasing.ReturnPurchasesFooter", "ReturnPurchasesFooter")
                        .WithMany("PurchasesInvoiceDiscounts")
                        .HasForeignKey("ReturnPurchasesFooterId");

                    b.Navigation("DiscountType");

                    b.Navigation("PurchasesInvoiceFooter");

                    b.Navigation("ReturnPurchasesFooter");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Purchasing.PurchasesInvoiceFooter", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsHeader", "ItemsHeader")
                        .WithMany("PurchasesInvoiceFooters")
                        .HasForeignKey("ItemsHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Purchasing.PurchasesInvoiceHeader", "PurchasesInvoiceHeader")
                        .WithMany("PurchasesInvoiceFooters")
                        .HasForeignKey("PurchasesInvoiceHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.UnitType", "UnitType")
                        .WithMany("PurchasesInvoiceFooters")
                        .HasForeignKey("UnitTypeId");

                    b.OwnsOne("ModelsUpgrade.Shared.ObjectPricingDetails", "PricingDetails", b1 =>
                        {
                            b1.Property<Guid>("PurchasesInvoiceFooterId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("DiscountValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("ItemValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("NetValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Quantity")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("TaxValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("UnitPrice")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.HasKey("PurchasesInvoiceFooterId");

                            b1.ToTable("PurchasesInvoiceFooter");

                            b1.WithOwner()
                                .HasForeignKey("PurchasesInvoiceFooterId");
                        });

                    b.Navigation("ItemsHeader");

                    b.Navigation("PricingDetails")
                        .IsRequired();

                    b.Navigation("PurchasesInvoiceHeader");

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Purchasing.PurchasesInvoiceHeader", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("PurchasesInvoiceHeaders")
                        .HasForeignKey("BranchesDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany()
                        .HasForeignKey("CompanyDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.EInvoicing.DocumentsMode", "DocumentsModes")
                        .WithMany("PurchasesInvoiceHeaders")
                        .HasForeignKey("DocumentsModesId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.PaymentMode", "PaymentModes")
                        .WithMany("PurchasesInvoiceHeaders")
                        .HasForeignKey("PaymentModesId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Purchasing.RequestReceiptHeader", "RequestReceiptHeader")
                        .WithMany("PurchasesInvoiceHeaders")
                        .HasForeignKey("RequestReceiptHeaderid");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Purchasing.SupplierData", "SuppliersData")
                        .WithMany("PurchasesInvoiceHeaders")
                        .HasForeignKey("SuppliersDataid");

                    b.OwnsOne("ModelsUpgrade.Shared.DateInfo", "DateInfo", b1 =>
                        {
                            b1.Property<Guid>("PurchasesInvoiceHeaderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("Date")
                                .HasColumnType("date");

                            b1.Property<short?>("Month")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.Property<short?>("Year")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.HasKey("PurchasesInvoiceHeaderId");

                            b1.ToTable("PurchasesInvoiceHeader");

                            b1.WithOwner()
                                .HasForeignKey("PurchasesInvoiceHeaderId");
                        });

                    b.OwnsOne("ModelsUpgrade.Shared.ObjectPricingDetails", "PricingDetails", b1 =>
                        {
                            b1.Property<Guid>("PurchasesInvoiceHeaderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("DiscountValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("ItemValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("NetValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Quantity")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("TaxValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("UnitPrice")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.HasKey("PurchasesInvoiceHeaderId");

                            b1.ToTable("PurchasesInvoiceHeader");

                            b1.WithOwner()
                                .HasForeignKey("PurchasesInvoiceHeaderId");
                        });

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");

                    b.Navigation("DateInfo")
                        .IsRequired();

                    b.Navigation("DocumentsModes");

                    b.Navigation("PaymentModes");

                    b.Navigation("PricingDetails")
                        .IsRequired();

                    b.Navigation("RequestReceiptHeader");

                    b.Navigation("SuppliersData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Purchasing.PurchasesOrderFooter", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsHeader", "ItemsHeader")
                        .WithMany("PurchasesOrderFooters")
                        .HasForeignKey("ItemsHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Purchasing.PurchasesOrderHeader", "PurchaseOrderHeader")
                        .WithMany("PurchasesOrderFooters")
                        .HasForeignKey("PurchaseOrderHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.UnitType", "UnitType")
                        .WithMany("PurchasesOrderFooters")
                        .HasForeignKey("UnitTypeId");

                    b.OwnsOne("ModelsUpgrade.Shared.PurchaseInfo", "PurchaseInfo", b1 =>
                        {
                            b1.Property<Guid>("PurchasesOrderFooterId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("Price")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Quantity")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Value")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.HasKey("PurchasesOrderFooterId");

                            b1.ToTable("PurchasesOrderFooter");

                            b1.WithOwner()
                                .HasForeignKey("PurchasesOrderFooterId");
                        });

                    b.Navigation("ItemsHeader");

                    b.Navigation("PurchaseInfo")
                        .IsRequired();

                    b.Navigation("PurchaseOrderHeader");

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Purchasing.PurchasesOrderHeader", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("PurchasesOrderHeaders")
                        .HasForeignKey("BranchesDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany()
                        .HasForeignKey("CompanyDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.Purchasing.SupplierData", "SupplierData")
                        .WithMany("PurchasesOrderHeaders")
                        .HasForeignKey("SupplierDataId");

                    b.OwnsOne("ModelsUpgrade.Shared.DateInfo", "DateInfo", b1 =>
                        {
                            b1.Property<Guid>("PurchasesOrderHeaderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("Date")
                                .HasColumnType("date");

                            b1.Property<short?>("Month")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.Property<short?>("Year")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.HasKey("PurchasesOrderHeaderId");

                            b1.ToTable("PurchasesOrderHeader");

                            b1.WithOwner()
                                .HasForeignKey("PurchasesOrderHeaderId");
                        });

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");

                    b.Navigation("DateInfo")
                        .IsRequired();

                    b.Navigation("SupplierData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Purchasing.PurchasesTaxInvoice", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Purchasing.PurchasesInvoiceFooter", "InvoicePurchasesFooter")
                        .WithMany("PurchasesTaxInvoices")
                        .HasForeignKey("InvoicePurchasesFooterId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Purchasing.ReturnPurchasesFooter", "ReturnPurchasesFooter")
                        .WithMany("PurchasesTaxInvoices")
                        .HasForeignKey("ReturnPurchasesFooterId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.EInvoicing.TaxableType", "TaxableType")
                        .WithMany("PurchasesTaxInvoices")
                        .HasForeignKey("TaxableTypeId");

                    b.Navigation("InvoicePurchasesFooter");

                    b.Navigation("ReturnPurchasesFooter");

                    b.Navigation("TaxableType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Purchasing.RequestReceiptFooter", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsHeader", "ItemsHeader")
                        .WithMany("RequestReceiptFooters")
                        .HasForeignKey("ItemsHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Purchasing.RequestReceiptHeader", "RequestReceiptHeader")
                        .WithMany("RequestReceiptFooters")
                        .HasForeignKey("RequestReceiptHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.UnitType", "UnitType")
                        .WithMany("RequestReceiptFooters")
                        .HasForeignKey("UnitTypeId");

                    b.OwnsOne("ModelsUpgrade.Shared.PurchaseInfo", "RequestPurchaseInfo", b1 =>
                        {
                            b1.Property<Guid>("RequestReceiptFooterId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("Price")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Quantity")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Value")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.HasKey("RequestReceiptFooterId");

                            b1.ToTable("RequestReceiptFooter");

                            b1.WithOwner()
                                .HasForeignKey("RequestReceiptFooterId");
                        });

                    b.Navigation("ItemsHeader");

                    b.Navigation("RequestPurchaseInfo")
                        .IsRequired();

                    b.Navigation("RequestReceiptHeader");

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Purchasing.RequestReceiptHeader", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("RequestReceiptHeaders")
                        .HasForeignKey("BranchesDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany()
                        .HasForeignKey("CompanyDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.Inventory.InventoryOrderHeader", "PurchaseOrderHeader")
                        .WithMany("RequestReceiptHeaders")
                        .HasForeignKey("PurchaseOrderHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Inventory.InventorySetting.StoreData", "StoreData")
                        .WithMany("RequestReceiptHeaders")
                        .HasForeignKey("StoreDataId");

                    b.OwnsOne("ModelsUpgrade.Shared.DateInfo", "RequestReciptDateInfo", b1 =>
                        {
                            b1.Property<Guid>("RequestReceiptHeaderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("Date")
                                .HasColumnType("date");

                            b1.Property<short?>("Month")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.Property<short?>("Year")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.HasKey("RequestReceiptHeaderId");

                            b1.ToTable("RequestReceiptHeader");

                            b1.WithOwner()
                                .HasForeignKey("RequestReceiptHeaderId");
                        });

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");

                    b.Navigation("PurchaseOrderHeader");

                    b.Navigation("RequestReciptDateInfo")
                        .IsRequired();

                    b.Navigation("StoreData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Purchasing.ReturnPurchasesFooter", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsHeader", "ItemsHeader")
                        .WithMany("ReturnPurchasesFooters")
                        .HasForeignKey("ItemsHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Purchasing.ReturnPurchasesHeader", "ReturnPurchasesHeader")
                        .WithMany("ReturnPurchasesFooters")
                        .HasForeignKey("ReturnPurchasesHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.UnitType", "UnitType")
                        .WithMany("ReturnPurchasesFooters")
                        .HasForeignKey("UnitTypeId");

                    b.OwnsOne("ModelsUpgrade.Shared.ObjectPricingDetails", "PricingDetails", b1 =>
                        {
                            b1.Property<Guid>("ReturnPurchasesFooterId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("DiscountValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("ItemValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("NetValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Quantity")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("TaxValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("UnitPrice")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.HasKey("ReturnPurchasesFooterId");

                            b1.ToTable("ReturnPurchasesFooter");

                            b1.WithOwner()
                                .HasForeignKey("ReturnPurchasesFooterId");
                        });

                    b.Navigation("ItemsHeader");

                    b.Navigation("PricingDetails")
                        .IsRequired();

                    b.Navigation("ReturnPurchasesHeader");

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Purchasing.ReturnPurchasesHeader", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("ReturnPurchasesHeaders")
                        .HasForeignKey("BranchesDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany()
                        .HasForeignKey("CompanyDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.EInvoicing.DocumentsMode", "DocumentsModes")
                        .WithMany("ReturnPurchasesHeaders")
                        .HasForeignKey("DocumentsModesId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.PaymentMode", "PaymentModes")
                        .WithMany("ReturnPurchasesHeaders")
                        .HasForeignKey("PaymentModesId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Purchasing.PurchasesInvoiceHeader", "PurchasesInvoiceHeader")
                        .WithMany("ReturnPurchasesHeaders")
                        .HasForeignKey("PurchasesInvoiceHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Purchasing.SupplierData", "SuppliersData")
                        .WithMany("ReturnPurchasesHeaders")
                        .HasForeignKey("SuppliersDataId");

                    b.OwnsOne("ModelsUpgrade.UpdatedModels.Purchasing.PurchasingValueObjs.ReturnPurchaseHeaderPrice", "PurchasePricing", b1 =>
                        {
                            b1.Property<Guid>("ReturnPurchasesHeaderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("NetValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("TotalDiscounts")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("TotalTaxs")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("TotalValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.HasKey("ReturnPurchasesHeaderId");

                            b1.ToTable("ReturnPurchasesHeader");

                            b1.WithOwner()
                                .HasForeignKey("ReturnPurchasesHeaderId");
                        });

                    b.OwnsOne("ModelsUpgrade.Shared.DateInfo", "DateInfo", b1 =>
                        {
                            b1.Property<Guid>("ReturnPurchasesHeaderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("Date")
                                .HasColumnType("date");

                            b1.Property<short?>("Month")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.Property<short?>("Year")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.HasKey("ReturnPurchasesHeaderId");

                            b1.ToTable("ReturnPurchasesHeader");

                            b1.WithOwner()
                                .HasForeignKey("ReturnPurchasesHeaderId");
                        });

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");

                    b.Navigation("DateInfo")
                        .IsRequired();

                    b.Navigation("DocumentsModes");

                    b.Navigation("PaymentModes");

                    b.Navigation("PurchasePricing")
                        .IsRequired();

                    b.Navigation("PurchasesInvoiceHeader");

                    b.Navigation("SuppliersData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Purchasing.SupplierData", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.AccountName", "AccountsName")
                        .WithMany("SupplierData")
                        .HasForeignKey("AccountsNameId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.CityCode", "CityCode")
                        .WithMany("SupplierData")
                        .HasForeignKey("CityCodeId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany("SupplierData")
                        .HasForeignKey("CompanyDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Purchasing.SupplierGroup", "SupplierGroups")
                        .WithMany("SupplierData")
                        .HasForeignKey("SupplierGroupsId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmployeeData", "SupplierManagerNavigation")
                        .WithMany("SupplierData")
                        .HasForeignKey("SupplierManagerNavigationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("ModelsUpgrade.Shared.ObjectCompleteAddress", "Address", b1 =>
                        {
                            b1.Property<Guid>("SupplierDataId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("AddressInformation")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)");

                            b1.Property<string>("BuildingNumber")
                                .IsRequired()
                                .HasMaxLength(5)
                                .HasColumnType("nvarchar(5)");

                            b1.Property<string>("FloorNumber")
                                .IsRequired()
                                .HasMaxLength(5)
                                .HasColumnType("nvarchar(5)");

                            b1.Property<string>("LandMark")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasMaxLength(7)
                                .HasColumnType("nvarchar(7)");

                            b1.Property<string>("RoomNumber")
                                .IsRequired()
                                .HasMaxLength(3)
                                .HasColumnType("nvarchar(3)");

                            b1.HasKey("SupplierDataId");

                            b1.ToTable("SupplierData");

                            b1.WithOwner()
                                .HasForeignKey("SupplierDataId");
                        });

                    b.OwnsOne("ModelsUpgrade.Shared.ContactInfo", "Contacts", b1 =>
                        {
                            b1.Property<Guid>("SupplierDataId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Fax")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Mobile")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Phone")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Whatsapp")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("SupplierDataId");

                            b1.ToTable("SupplierData");

                            b1.WithOwner()
                                .HasForeignKey("SupplierDataId");
                        });

                    b.Navigation("AccountsName");

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("CityCode");

                    b.Navigation("CompanyData");

                    b.Navigation("Contacts")
                        .IsRequired();

                    b.Navigation("SupplierGroups");

                    b.Navigation("SupplierManagerNavigation");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.CrmOpportunity", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.RealEstate.CrmContact", "Contact")
                        .WithMany("CrmOpportunities")
                        .HasForeignKey("ContactId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.RealEstate.CrmOpportunityStatus", "Status")
                        .WithMany("CrmOpportunities")
                        .HasForeignKey("StatusId");

                    b.Navigation("Contact");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.CrmTask", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.RealEstate.CrmOpportunity", "Opportunity")
                        .WithMany("CrmTasks")
                        .HasForeignKey("OpportunityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.RealEstate.CrmTaskstatus", "Status")
                        .WithMany("CrmTasks")
                        .HasForeignKey("StatusId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.RealEstate.CrmTaskType", "Type")
                        .WithMany("CrmTasks")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Opportunity");

                    b.Navigation("Status");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.RntActivity", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("RntActivities")
                        .HasForeignKey("BranchesDataId");

                    b.Navigation("BranchesData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.RntContractsData", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.RealEstate.RntContractsHeader", "ContractsHeader")
                        .WithMany("RntContractsDs")
                        .HasForeignKey("ContractsHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.RealEstate.RntFloor", "Floors")
                        .WithMany("RntContractsDs")
                        .HasForeignKey("FloorsId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.UnitType", "UnitType")
                        .WithMany("RntContractsDatas")
                        .HasForeignKey("UnitTypeId");

                    b.Navigation("ContractsHeader");

                    b.Navigation("Floors");

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.RntContractsHeader", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.RealEstate.RntActivity", "Activities")
                        .WithMany("RntContractsHes")
                        .HasForeignKey("ActivitiesId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("RntContractsHes")
                        .HasForeignKey("BranchesDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany()
                        .HasForeignKey("CompanyDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.Sales.CustomerData", "CustomerData")
                        .WithMany("RntContractsHes")
                        .HasForeignKey("CustomerDataId");

                    b.OwnsOne("ModelsUpgrade.Shared.Duration", "ContractDuration", b1 =>
                        {
                            b1.Property<Guid>("RntContractsHeaderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("EndDate")
                                .HasColumnType("date");

                            b1.Property<DateOnly>("StartDate")
                                .HasColumnType("date");

                            b1.HasKey("RntContractsHeaderId");

                            b1.ToTable("RntContractsHeader");

                            b1.WithOwner()
                                .HasForeignKey("RntContractsHeaderId");
                        });

                    b.Navigation("Activities");

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");

                    b.Navigation("ContractDuration")
                        .IsRequired();

                    b.Navigation("CustomerData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.RntCustomerPercentData", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.RealEstate.RntCustomerPercentHeader", "CustomerPercent")
                        .WithMany("RntCustomerPercentDs")
                        .HasForeignKey("CustomerPercentId");

                    b.Navigation("CustomerPercent");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.RntCustomerPercentHeader", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("RntCustomerPercentHs")
                        .HasForeignKey("BranchesDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany()
                        .HasForeignKey("CompanyDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.Sales.CustomerData", null)
                        .WithMany("RntCustomerPercentHs")
                        .HasForeignKey("CustomerDataId");

                    b.OwnsOne("ModelsUpgrade.Shared.DateInfo", "DateInfo", b1 =>
                        {
                            b1.Property<Guid>("RntCustomerPercentHeaderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("Date")
                                .HasColumnType("date");

                            b1.Property<short?>("Month")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.Property<short?>("Year")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.HasKey("RntCustomerPercentHeaderId");

                            b1.ToTable("RntCustomerPercentHeader");

                            b1.WithOwner()
                                .HasForeignKey("RntCustomerPercentHeaderId");
                        });

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");

                    b.Navigation("DateInfo")
                        .IsRequired();
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.RntExpense", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("RntExpenses")
                        .HasForeignKey("BranchesDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.RealEstate.RntExpenseType", "ExpenseType")
                        .WithMany("RntExpenses")
                        .HasForeignKey("ExpenseTypeId");

                    b.Navigation("BranchesData");

                    b.Navigation("ExpenseType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.RntExpenseType", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("RntExpenseTypes")
                        .HasForeignKey("BranchesDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BranchesData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.RntFloor", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("RntFloors")
                        .HasForeignKey("BranchesDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.RealEstate.RntFloor", "ParentCodeNavigation")
                        .WithMany("InverseParentCodeNavigation")
                        .HasForeignKey("ParentCodeNavigationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BranchesData");

                    b.Navigation("ParentCodeNavigation");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.RntReceiptsData", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.RealEstate.RntReceiptsHeader", "ReceiptHeaderNavigation")
                        .WithMany("RntReceiptsDs")
                        .HasForeignKey("ReceiptHeaderNavigationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReceiptHeaderNavigation");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.RntReceiptsHeader", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("RntReceiptsHes")
                        .HasForeignKey("BranchesDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany()
                        .HasForeignKey("CompanyDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.RealEstate.RntContractsHeader", "Contracts")
                        .WithMany("RntReceiptsHes")
                        .HasForeignKey("ContractsId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.CurrencyData", "CurrencyData")
                        .WithMany("RntReceiptsHes")
                        .HasForeignKey("CurrencyDataId");

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");

                    b.Navigation("Contracts");

                    b.Navigation("CurrencyData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Sales.CustomerData", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.AccountName", "AccountsNameSales")
                        .WithMany("CustomerData")
                        .HasForeignKey("AccountsNameSalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.CityCode", "CityCode")
                        .WithMany("CustomerData")
                        .HasForeignKey("CityCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany("CustomerData")
                        .HasForeignKey("CompanyDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Sales.CustomerCategories", "CustomerCategories")
                        .WithMany("CustomerData")
                        .HasForeignKey("CustomerCategoriesId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.EInvoicing.CustomerModes", "CustomerModes")
                        .WithMany("CustomerData")
                        .HasForeignKey("CustomerModesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.Sales.DelegateData", "RepresentativeData")
                        .WithMany("CustomerData")
                        .HasForeignKey("RepresentativeDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("ModelsUpgrade.Shared.ObjectCompleteAddress", "Address", b1 =>
                        {
                            b1.Property<Guid>("CustomerDataId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("AddressInformation")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)");

                            b1.Property<string>("BuildingNumber")
                                .IsRequired()
                                .HasMaxLength(5)
                                .HasColumnType("nvarchar(5)");

                            b1.Property<string>("FloorNumber")
                                .IsRequired()
                                .HasMaxLength(5)
                                .HasColumnType("nvarchar(5)");

                            b1.Property<string>("LandMark")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasMaxLength(7)
                                .HasColumnType("nvarchar(7)");

                            b1.Property<string>("RoomNumber")
                                .IsRequired()
                                .HasMaxLength(3)
                                .HasColumnType("nvarchar(3)");

                            b1.HasKey("CustomerDataId");

                            b1.ToTable("CustomerData");

                            b1.WithOwner()
                                .HasForeignKey("CustomerDataId");
                        });

                    b.OwnsOne("ModelsUpgrade.Shared.ContactInfo", "Contacts", b1 =>
                        {
                            b1.Property<Guid>("CustomerDataId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Fax")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Mobile")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Phone")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Whatsapp")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("CustomerDataId");

                            b1.ToTable("CustomerData");

                            b1.WithOwner()
                                .HasForeignKey("CustomerDataId");
                        });

                    b.Navigation("AccountsNameSales");

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("CityCode");

                    b.Navigation("CompanyData");

                    b.Navigation("Contacts")
                        .IsRequired();

                    b.Navigation("CustomerCategories");

                    b.Navigation("CustomerModes");

                    b.Navigation("RepresentativeData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Sales.DelegateData", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.AccountName", "AccountsName")
                        .WithMany("DelegateData")
                        .HasForeignKey("AccountsNameId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.CityCode", "CityCode")
                        .WithMany("DelegateData")
                        .HasForeignKey("CityCodeId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany("DelegateData")
                        .HasForeignKey("CompanyDataId");

                    b.OwnsOne("ModelsUpgrade.Shared.ContactInfo", "Contacts", b1 =>
                        {
                            b1.Property<Guid>("DelegateDataId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Fax")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Mobile")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Phone")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Whatsapp")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("DelegateDataId");

                            b1.ToTable("DelegateData");

                            b1.WithOwner()
                                .HasForeignKey("DelegateDataId");
                        });

                    b.OwnsOne("ModelsUpgrade.Shared.Duration", "DelegateDuration", b1 =>
                        {
                            b1.Property<Guid>("DelegateDataId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("EndDate")
                                .HasColumnType("date");

                            b1.Property<DateOnly>("StartDate")
                                .HasColumnType("date");

                            b1.HasKey("DelegateDataId");

                            b1.ToTable("DelegateData");

                            b1.WithOwner()
                                .HasForeignKey("DelegateDataId");
                        });

                    b.Navigation("AccountsName");

                    b.Navigation("CityCode");

                    b.Navigation("CompanyData");

                    b.Navigation("Contacts")
                        .IsRequired();

                    b.Navigation("DelegateDuration")
                        .IsRequired();
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Sales.InstallmentFooter", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Sales.InstallmentHeader", "InstallmentHeader")
                        .WithMany("InstallmentFooters")
                        .HasForeignKey("InstallmentHeaderId");

                    b.Navigation("InstallmentHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Sales.InstallmentHeader", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany()
                        .HasForeignKey("BranchesDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany()
                        .HasForeignKey("CompanyDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.Sales.CustomerData", "CustomerData")
                        .WithMany("InstallmentHeaders")
                        .HasForeignKey("CustomerDataId");

                    b.OwnsOne("ModelsUpgrade.Shared.DateInfo", "DateInfo", b1 =>
                        {
                            b1.Property<Guid>("InstallmentHeaderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("Date")
                                .HasColumnType("date");

                            b1.Property<short?>("Month")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.Property<short?>("Year")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.HasKey("InstallmentHeaderId");

                            b1.ToTable("InstallmentHeader");

                            b1.WithOwner()
                                .HasForeignKey("InstallmentHeaderId");
                        });

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");

                    b.Navigation("CustomerData");

                    b.Navigation("DateInfo")
                        .IsRequired();
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Sales.RequestReservationFooter", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsHeader", "ItemsHeader")
                        .WithMany("RequestReservationFooters")
                        .HasForeignKey("ItemsHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Sales.RequestReservationHeader", "RequestReservationHeader")
                        .WithMany("RequestReservationFooters")
                        .HasForeignKey("RequestReservationHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.UnitType", "UnitType")
                        .WithMany("RequestReservationFooters")
                        .HasForeignKey("UnitTypeId");

                    b.OwnsOne("ModelsUpgrade.Shared.PurchaseInfo", "PurchaseInfo", b1 =>
                        {
                            b1.Property<Guid>("RequestReservationFooterId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("Price")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Quantity")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Value")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.HasKey("RequestReservationFooterId");

                            b1.ToTable("RequestReservationFooter");

                            b1.WithOwner()
                                .HasForeignKey("RequestReservationFooterId");
                        });

                    b.Navigation("ItemsHeader");

                    b.Navigation("PurchaseInfo")
                        .IsRequired();

                    b.Navigation("RequestReservationHeader");

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Sales.RequestReservationHeader", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("RequestReservationHeaders")
                        .HasForeignKey("BranchesDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany()
                        .HasForeignKey("CompanyDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("ModelsUpgrade.Shared.DateInfo", "DateInfo", b1 =>
                        {
                            b1.Property<Guid>("RequestReservationHeaderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("Date")
                                .HasColumnType("date");

                            b1.Property<short?>("Month")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.Property<short?>("Year")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.HasKey("RequestReservationHeaderId");

                            b1.ToTable("RequestReservationHeader");

                            b1.WithOwner()
                                .HasForeignKey("RequestReservationHeaderId");
                        });

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");

                    b.Navigation("DateInfo")
                        .IsRequired();
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Sales.ReturnSalesFooter", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsHeader", "ItemsHeader")
                        .WithMany("ReturnSalesFooters")
                        .HasForeignKey("ItemsHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Sales.ReturnSalesHeader", "ReturnSalesHeader")
                        .WithMany("ReturnSalesFooters")
                        .HasForeignKey("ReturnSalesHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.UnitType", "UnitType")
                        .WithMany("ReturnSalesFooters")
                        .HasForeignKey("UnitTypeId");

                    b.OwnsOne("ModelsUpgrade.Shared.ObjectPricingDetails", "PricingDetails", b1 =>
                        {
                            b1.Property<Guid>("ReturnSalesFooterId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("DiscountValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("ItemValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("NetValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Quantity")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("TaxValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("UnitPrice")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.HasKey("ReturnSalesFooterId");

                            b1.ToTable("ReturnSalesFooter");

                            b1.WithOwner()
                                .HasForeignKey("ReturnSalesFooterId");
                        });

                    b.Navigation("ItemsHeader");

                    b.Navigation("PricingDetails")
                        .IsRequired();

                    b.Navigation("ReturnSalesHeader");

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Sales.ReturnSalesHeader", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("ReturnSalesHeaders")
                        .HasForeignKey("BranchesDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany()
                        .HasForeignKey("CompanyDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.Sales.CustomerData", null)
                        .WithMany("ReturnSalesHeaders")
                        .HasForeignKey("CustomerDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.EInvoicing.DocumentsMode", "DocumentsModes")
                        .WithMany("ReturnSalesHeaders")
                        .HasForeignKey("DocumentsModesId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Sales.SalesInvoiceHeader", "InvoiceSalesHeader")
                        .WithMany("ReturnSalesHeaders")
                        .HasForeignKey("InvoiceSalesHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.PaymentMode", "PaymentModes")
                        .WithMany("ReturnSalesHeaders")
                        .HasForeignKey("PaymentModesId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.PriceType", "PriceType")
                        .WithMany("ReturnSalesHeaders")
                        .HasForeignKey("PriceTypeId");

                    b.OwnsOne("ModelsUpgrade.Shared.DateInfo", "DateInfo", b1 =>
                        {
                            b1.Property<Guid>("ReturnSalesHeaderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("Date")
                                .HasColumnType("date");

                            b1.Property<short?>("Month")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.Property<short?>("Year")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.HasKey("ReturnSalesHeaderId");

                            b1.ToTable("ReturnSalesHeader");

                            b1.WithOwner()
                                .HasForeignKey("ReturnSalesHeaderId");
                        });

                    b.OwnsOne("ModelsUpgrade.Shared.ObjectPricingDetails", "PricingDetails", b1 =>
                        {
                            b1.Property<Guid>("ReturnSalesHeaderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("DiscountValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("ItemValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("NetValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Quantity")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("TaxValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("UnitPrice")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.HasKey("ReturnSalesHeaderId");

                            b1.ToTable("ReturnSalesHeader");

                            b1.WithOwner()
                                .HasForeignKey("ReturnSalesHeaderId");
                        });

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");

                    b.Navigation("DateInfo")
                        .IsRequired();

                    b.Navigation("DocumentsModes");

                    b.Navigation("InvoiceSalesHeader");

                    b.Navigation("PaymentModes");

                    b.Navigation("PriceType");

                    b.Navigation("PricingDetails");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Sales.SalesInvoiceDelivery", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.EInvoicing.DeliveryModes", "DeliveryModes")
                        .WithMany("SalesInvoiceDeliveries")
                        .HasForeignKey("DeliveryModesId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Sales.SalesInvoiceHeader", "InvoiceSalesHeader")
                        .WithMany("SalesInvoiceDeliveries")
                        .HasForeignKey("InvoiceSalesHeaderId");

                    b.Navigation("DeliveryModes");

                    b.Navigation("InvoiceSalesHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Sales.SalesInvoiceDiscount", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.DiscountType", "DiscountType")
                        .WithMany("SalesInvoiceDiscounts")
                        .HasForeignKey("DiscountTypeId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Sales.ReturnSalesFooter", "ReturnSalesFooter")
                        .WithMany("SalesInvoiceDiscounts")
                        .HasForeignKey("ReturnSalesFooterId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Sales.SalesInvoiceFooter", "DiscountInvoice")
                        .WithOne("SalesInvoiceDiscount")
                        .HasForeignKey("ModelsUpgrade.UpdatedModels.Sales.SalesInvoiceDiscount", "SalesInvoiceFooterId");

                    b.Navigation("DiscountInvoice");

                    b.Navigation("DiscountType");

                    b.Navigation("ReturnSalesFooter");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Sales.SalesInvoiceFooter", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsHeader", "ItemsHeader")
                        .WithMany("SalesInvoiceFooters")
                        .HasForeignKey("ItemsHeaderId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Sales.SalesInvoiceHeader", "SalesInvoiceHeader")
                        .WithMany("SalesInvoiceFooters")
                        .HasForeignKey("SalesInvoiceHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.UnitType", "UnitType")
                        .WithMany("SalesInvoiceFooters")
                        .HasForeignKey("UnitTypeId");

                    b.OwnsOne("ModelsUpgrade.Shared.ObjectPricingDetails", "PricingDetails", b1 =>
                        {
                            b1.Property<Guid>("SalesInvoiceFooterId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("DiscountValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("ItemValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("NetValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Quantity")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("TaxValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("UnitPrice")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.HasKey("SalesInvoiceFooterId");

                            b1.ToTable("SalesInvoiceFooter");

                            b1.WithOwner()
                                .HasForeignKey("SalesInvoiceFooterId");
                        });

                    b.Navigation("ItemsHeader");

                    b.Navigation("PricingDetails")
                        .IsRequired();

                    b.Navigation("SalesInvoiceHeader");

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Sales.SalesInvoiceHeader", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany("SalesInvoiceHeaders")
                        .HasForeignKey("BranchesDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany()
                        .HasForeignKey("CompanyDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.Sales.CustomerData", "CustomerData")
                        .WithMany("SalesInvoiceHeaders")
                        .HasForeignKey("CustomerDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.EInvoicing.DocumentsMode", "DocumentsModes")
                        .WithMany("SalesInvoiceHeaders")
                        .HasForeignKey("DocumentsModesId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.PaymentMode", "PaymentModes")
                        .WithMany("SalesInvoiceHeaders")
                        .HasForeignKey("PaymentModesId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.PriceType", "PriceType")
                        .WithMany("SalesInvoiceHeaders")
                        .HasForeignKey("PriceTypeId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Sales.RequestReservationHeader", "RequestReservationHeader")
                        .WithMany("SalesInvoiceHeaders")
                        .HasForeignKey("RequestReservationHeaderId");

                    b.OwnsOne("ModelsUpgrade.Shared.DateInfo", "DateInfo", b1 =>
                        {
                            b1.Property<Guid>("SalesInvoiceHeaderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateOnly?>("Date")
                                .HasColumnType("date");

                            b1.Property<short?>("Month")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.Property<short?>("Year")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("smallint")
                                .HasDefaultValueSql("0");

                            b1.HasKey("SalesInvoiceHeaderId");

                            b1.ToTable("SalesInvoiceHeader");

                            b1.WithOwner()
                                .HasForeignKey("SalesInvoiceHeaderId");
                        });

                    b.OwnsOne("ModelsUpgrade.UpdatedModels.Sales.SalesValueObjs.SalesInvoiceHeaderPricing", "PricingDetails", b1 =>
                        {
                            b1.Property<Guid>("SalesInvoiceHeaderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("NetValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("TaxTotals")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("TotalAfterDiscounts")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("TotalDiscounts")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("TotalValue")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.HasKey("SalesInvoiceHeaderId");

                            b1.ToTable("SalesInvoiceHeader");

                            b1.WithOwner()
                                .HasForeignKey("SalesInvoiceHeaderId");
                        });

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");

                    b.Navigation("CustomerData");

                    b.Navigation("DateInfo")
                        .IsRequired();

                    b.Navigation("DocumentsModes");

                    b.Navigation("PaymentModes");

                    b.Navigation("PriceType");

                    b.Navigation("PricingDetails")
                        .IsRequired();

                    b.Navigation("RequestReservationHeader");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Sales.SalesInvoicePayment", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.BankCode", "BankCode")
                        .WithMany("SalesInvoicePayments")
                        .HasForeignKey("BankCodeId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.PaymentMode", "PaymentModes")
                        .WithMany("SalesInvoicePayments")
                        .HasForeignKey("PaymentModesId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.Sales.SalesInvoiceHeader", "SalesInvoiceHeader")
                        .WithMany("SalesInvoicePayments")
                        .HasForeignKey("SalesInvoiceHeaderId");

                    b.OwnsOne("ModelsUpgrade.UpdatedModels.Sales.SalesValueObjs.SalesTransactionInfo", "TransactionInfo", b1 =>
                        {
                            b1.Property<Guid>("SalesInvoicePaymentId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double?>("Balance")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Credit")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.Property<double?>("Debit")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValueSql("0");

                            b1.HasKey("SalesInvoicePaymentId");

                            b1.ToTable("SalesInvoicePayment");

                            b1.WithOwner()
                                .HasForeignKey("SalesInvoicePaymentId");
                        });

                    b.Navigation("BankCode");

                    b.Navigation("PaymentModes");

                    b.Navigation("SalesInvoiceHeader");

                    b.Navigation("TransactionInfo")
                        .IsRequired();
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Security.AppUser", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.BankCode", null)
                        .WithMany("AppUsers")
                        .HasForeignKey("BankCodeId");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.UserSetting.TenantUser", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.UserSetting.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.UserSetting.UsePermissions", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Security.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelsUpgrade.UpdatedModels.ProgramSetting.ApplicationMenu", "ApplicationMenu")
                        .WithMany()
                        .HasForeignKey("ApplicationMenuId");

                    b.Navigation("AppUser");

                    b.Navigation("ApplicationMenu");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.WhatsApp.WhatsAppMessageData", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", "BranchesData")
                        .WithMany()
                        .HasForeignKey("BranchesDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", "CompanyData")
                        .WithMany("WhatsAppMessageData")
                        .HasForeignKey("CompanyDataId");

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.WhatsApp.WhatsAppResult", b =>
                {
                    b.HasOne("ModelsUpgrade.UpdatedModels.Sales.CustomerData", "CustomerData")
                        .WithMany()
                        .HasForeignKey("CustomerDataId");

                    b.HasOne("ModelsUpgrade.UpdatedModels.WhatsApp.WhatsAppMessageData", "MessageData")
                        .WithMany()
                        .HasForeignKey("MessageDataId");

                    b.Navigation("CustomerData");

                    b.Navigation("MessageData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.AccountName", b =>
                {
                    b.Navigation("AccountFixedDetailAccountNameLevel2s");

                    b.Navigation("AccountFixedDetailAccountNames");

                    b.Navigation("AccountsBalanceFooters");

                    b.Navigation("CheckDetailAccountNameFromNavigations");

                    b.Navigation("CheckDetailAccountNameToNavigations");

                    b.Navigation("ConContractorData");

                    b.Navigation("ConProjectsData");

                    b.Navigation("CustomerData");

                    b.Navigation("DelegateData");

                    b.Navigation("FinancialCenters");

                    b.Navigation("GeneralAccountFooters");

                    b.Navigation("InverseParentCodeNavigation");

                    b.Navigation("JournalFooters");

                    b.Navigation("LockersData");

                    b.Navigation("MoneyPaymentFromAccountNames");

                    b.Navigation("MoneyPaymentFromCashes");

                    b.Navigation("MoneyPaymentToAccountNames");

                    b.Navigation("MoneyReceiveFromAccountNames");

                    b.Navigation("MoneyReceiveFromCashes");

                    b.Navigation("MoneyReceiveToAccountNames");

                    b.Navigation("PitemsHeaderAccountNameSales");

                    b.Navigation("PitemsHeaderAccountsNamePurchas");

                    b.Navigation("StoreData");

                    b.Navigation("SupplierData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.AccountsBalanceHeader", b =>
                {
                    b.Navigation("AccountsBalanceFooters");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.CostCenter", b =>
                {
                    b.Navigation("AccountFixedDetails");

                    b.Navigation("CheckDetails");

                    b.Navigation("CostGeneralAccountFooters");

                    b.Navigation("CostJournalFooters");

                    b.Navigation("GeneralAccountFooters");

                    b.Navigation("InverseParentCodeNavigation");

                    b.Navigation("JournalFooters");

                    b.Navigation("MoneyPayments");

                    b.Navigation("MoneyReceives");

                    b.Navigation("ReservationDebits");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.GeneralAccountHeader", b =>
                {
                    b.Navigation("GeneralAccountFooters");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.JournalHeader", b =>
                {
                    b.Navigation("JournalFooters");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.AccountsFinancial.ReservationStatus", b =>
                {
                    b.Navigation("ReservationDebits");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.AccountFication", b =>
                {
                    b.Navigation("AccountFixedDetails");

                    b.Navigation("AccountNames");

                    b.Navigation("AccountsBalanceFooters");

                    b.Navigation("FinancialCenters");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.AccountMenu", b =>
                {
                    b.Navigation("AccountNames");

                    b.Navigation("CostCenters");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.AccountNature", b =>
                {
                    b.Navigation("AccountNames");

                    b.Navigation("CostCenters");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.AccountType", b =>
                {
                    b.Navigation("AccountNames");

                    b.Navigation("CostCenters");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.BankCode", b =>
                {
                    b.Navigation("AppUsers");

                    b.Navigation("BankAtms");

                    b.Navigation("BankContracts");

                    b.Navigation("CheckDetails");

                    b.Navigation("SalesInvoicePayments");

                    b.Navigation("WorkPlanHeaders");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.CheckStatus", b =>
                {
                    b.Navigation("CheckDetails");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.CheckType", b =>
                {
                    b.Navigation("CheckDetails");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Accounts.SettingAccounts.PaymentMode", b =>
                {
                    b.Navigation("EmployeeData");

                    b.Navigation("PospaymentDailies");

                    b.Navigation("PreturnPurchasesHeaders");

                    b.Navigation("PurchasesInvoiceHeaders");

                    b.Navigation("ReturnPurchasesHeaders");

                    b.Navigation("ReturnSalesHeaders");

                    b.Navigation("SalesInvoiceHeaders");

                    b.Navigation("SalesInvoicePayments");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.BankSystem.BankAtm", b =>
                {
                    b.Navigation("WorkPlanFooters");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.BankSystem.OrderStatus", b =>
                {
                    b.Navigation("WorkPlanFooters");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.BankSystem.WorkPlan.WorkPlanFooter", b =>
                {
                    b.Navigation("WorkPlanComments");

                    b.Navigation("WorkPlanDetails");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.BankSystem.WorkPlan.WorkPlanHeader", b =>
                {
                    b.Navigation("WorkPlanFooters");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.CityCode", b =>
                {
                    b.Navigation("BankAtms");

                    b.Navigation("BankCodes");

                    b.Navigation("BranchesData");

                    b.Navigation("CompanyData");

                    b.Navigation("ConContractorData");

                    b.Navigation("CustomerData");

                    b.Navigation("DelegateData");

                    b.Navigation("EduStudentData");

                    b.Navigation("EmployeeData");

                    b.Navigation("MedPartnerData");

                    b.Navigation("StoreData");

                    b.Navigation("SupplierData");

                    b.Navigation("WorkPlanHeaders");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.CountryCode", b =>
                {
                    b.Navigation("ApplicationSettings");

                    b.Navigation("GovernorateCodes");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.CurrencyData", b =>
                {
                    b.Navigation("AccountNames");

                    b.Navigation("BankCodes");

                    b.Navigation("CheckDetails");

                    b.Navigation("CostGeneralAccountHeaders");

                    b.Navigation("CostJournalHeaders");

                    b.Navigation("JournalHeaders");

                    b.Navigation("RntReceiptsHes");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.BasicInformation.BasicSettings.GovernorateCode", b =>
                {
                    b.Navigation("BankAtms");

                    b.Navigation("BankCodes");

                    b.Navigation("CityCodes");

                    b.Navigation("WorkPlanHeaders");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.BasicInformation.BranchesData", b =>
                {
                    b.Navigation("AdditionAdjustments");

                    b.Navigation("ApplicationMenus");

                    b.Navigation("BranchesLists");

                    b.Navigation("ClientDataTokens");

                    b.Navigation("CostCenters");

                    b.Navigation("CostGeneralAccountHeaders");

                    b.Navigation("CostJournalHeaders");

                    b.Navigation("EduAcademyCourses");

                    b.Navigation("EduQuestionsMasters");

                    b.Navigation("EduStudentData");

                    b.Navigation("EduStudentPayments");

                    b.Navigation("EmpGroupWorks");

                    b.Navigation("EmployeeData");

                    b.Navigation("GeneralAccountHeaders");

                    b.Navigation("InventoryOrderHeaders");

                    b.Navigation("ItemsBalanceHeaders");

                    b.Navigation("ItemsStocks");

                    b.Navigation("LockersData");

                    b.Navigation("MedAnalysisNames");

                    b.Navigation("MedMedicalServices");

                    b.Navigation("MedPartnerData");

                    b.Navigation("MedRaysNames");

                    b.Navigation("MedSurgicalServices");

                    b.Navigation("PPurchasesInvoiceHeaders");

                    b.Navigation("PRequestReceiptHeaders");

                    b.Navigation("PRequestReservationHeaders");

                    b.Navigation("PReturnPurchasesHeaders");

                    b.Navigation("PReturnReservationHeaders");

                    b.Navigation("PadditionAdjustments");

                    b.Navigation("PinventoryOrderHeaders");

                    b.Navigation("PitemsBalanceHeaders");

                    b.Navigation("PitemsStocks");

                    b.Navigation("PosSales");

                    b.Navigation("PosSessions");

                    b.Navigation("Posmachines");

                    b.Navigation("PsettlementDiscounts");

                    b.Navigation("PurchasesInvoiceHeaders");

                    b.Navigation("PurchasesOrderHeaders");

                    b.Navigation("RequestReceiptHeaders");

                    b.Navigation("RequestReservationHeaders");

                    b.Navigation("ReturnPurchasesHeaders");

                    b.Navigation("ReturnSalesHeaders");

                    b.Navigation("RntActivities");

                    b.Navigation("RntContractsHes");

                    b.Navigation("RntCustomerPercentHs");

                    b.Navigation("RntExpenseTypes");

                    b.Navigation("RntExpenses");

                    b.Navigation("RntFloors");

                    b.Navigation("RntReceiptsHes");

                    b.Navigation("SalesInvoiceHeaders");

                    b.Navigation("SettlementDiscounts");

                    b.Navigation("StoreData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.BasicInformation.CompanyData", b =>
                {
                    b.Navigation("AccountFiscalYears");

                    b.Navigation("AccountFixedDetails");

                    b.Navigation("AccountNames");

                    b.Navigation("AccountsBalanceHeaders");

                    b.Navigation("ApplicationMenus");

                    b.Navigation("ApplicationSettings");

                    b.Navigation("BankAtms");

                    b.Navigation("BankCodes");

                    b.Navigation("BranchesData");

                    b.Navigation("BranchesLists");

                    b.Navigation("CheckDetails");

                    b.Navigation("ConContractorData");

                    b.Navigation("ConContractorExtractMasters");

                    b.Navigation("ConProjectItems");

                    b.Navigation("ConProjectsData");

                    b.Navigation("CustomerData");

                    b.Navigation("DelegateData");

                    b.Navigation("EduStudentPayments");

                    b.Navigation("FinancialCenters");

                    b.Navigation("HotelPayments");

                    b.Navigation("HotelRoomData");

                    b.Navigation("HotelServices");

                    b.Navigation("ItemsGroups");

                    b.Navigation("JournalHeaders");

                    b.Navigation("MoneyPayments");

                    b.Navigation("MoneyReceives");

                    b.Navigation("PitemsGroups");

                    b.Navigation("ReservationDebits");

                    b.Navigation("SupplierData");

                    b.Navigation("TransformationsMasters");

                    b.Navigation("WhatsAppMessageData");

                    b.Navigation("WorkPlanHeaders");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Contractors.ConContractorData", b =>
                {
                    b.Navigation("ConContractorExtractMasters");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Contractors.ConContractorExtractMaster", b =>
                {
                    b.Navigation("ConContractorExtractDetails");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Contractors.ConProjectItem", b =>
                {
                    b.Navigation("ConContractorExtractDetails");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Contractors.ConProjectsData", b =>
                {
                    b.Navigation("ConContractorExtractMasters");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.CostAccounting.CostGeneralAccountHeader", b =>
                {
                    b.Navigation("CostGeneralAccountFooters");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.CostAccounting.CostJournalHeader", b =>
                {
                    b.Navigation("CostJournalFooters");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.EInvoicing.ClientDataToken", b =>
                {
                    b.Navigation("ClientAccessTokens");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.EInvoicing.CustomerModes", b =>
                {
                    b.Navigation("CustomerData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.EInvoicing.DeliveryModes", b =>
                {
                    b.Navigation("SalesInvoiceDeliveries");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.EInvoicing.DocumentsMode", b =>
                {
                    b.Navigation("PreturnPurchasesHeaders");

                    b.Navigation("PurchasesInvoiceHeaders");

                    b.Navigation("ReturnPurchasesHeaders");

                    b.Navigation("ReturnSalesHeaders");

                    b.Navigation("SalesInvoiceHeaders");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.EInvoicing.ItemsCodeType", b =>
                {
                    b.Navigation("ItemsHeaders");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.EInvoicing.TaxableType", b =>
                {
                    b.Navigation("InverseParentCodeNavigation");

                    b.Navigation("PurchasesTaxInvoices");

                    b.Navigation("SalesTaxInvoiceFs");

                    b.Navigation("SalesTaxInvoiceHs");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Education.EduAcademyCourse", b =>
                {
                    b.Navigation("EduQuestionsMasters");

                    b.Navigation("EduStudentPayments");

                    b.Navigation("InverseParentCourseNavigation");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Education.EduQuestionType", b =>
                {
                    b.Navigation("EduQuestionsMasters");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Education.EduQuestionsMaster", b =>
                {
                    b.Navigation("EduQuestionDetails");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Education.EduStudentData", b =>
                {
                    b.Navigation("EduStudentCourses");

                    b.Navigation("EduStudentPayments");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.Department", b =>
                {
                    b.Navigation("EmployeeData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EducationData", b =>
                {
                    b.Navigation("EduStudentData");

                    b.Navigation("EmployeeData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EducationStimate", b =>
                {
                    b.Navigation("EduStudentData");

                    b.Navigation("EmployeeData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpAcceptType", b =>
                {
                    b.Navigation("EmpAccepts");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpAttendType", b =>
                {
                    b.Navigation("EmpAttends");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpContractHeader", b =>
                {
                    b.Navigation("EmpContractDetalis");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpContractType", b =>
                {
                    b.Navigation("EmpContractMasters");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpDayWeek", b =>
                {
                    b.Navigation("EmpAttends");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpElementData", b =>
                {
                    b.Navigation("EmpContractDetalis");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpElementNature", b =>
                {
                    b.Navigation("EmpElementsData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpElementType", b =>
                {
                    b.Navigation("EmpContractDetalis");

                    b.Navigation("EmpElementData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpGroupWork", b =>
                {
                    b.Navigation("EmployeeData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpLevelType", b =>
                {
                    b.Navigation("EmpLevels");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmpLoansType", b =>
                {
                    b.Navigation("EmpLoans");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.EmployeeData", b =>
                {
                    b.Navigation("BranchesData");

                    b.Navigation("ConContractorData");

                    b.Navigation("EmpAccepts");

                    b.Navigation("EmpAttends");

                    b.Navigation("EmpContractMasters");

                    b.Navigation("EmpLevels");

                    b.Navigation("EmpLoans");

                    b.Navigation("EmployeeJobs");

                    b.Navigation("EmployeeSkills");

                    b.Navigation("FinalData");

                    b.Navigation("FinalDataFixeds");

                    b.Navigation("Possessions");

                    b.Navigation("StoreData");

                    b.Navigation("SupplierData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.JobData", b =>
                {
                    b.Navigation("EmployeeData");

                    b.Navigation("MedPartnerData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.RecruitmentData", b =>
                {
                    b.Navigation("EduStudentData");

                    b.Navigation("EmployeeData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.SocialData", b =>
                {
                    b.Navigation("EduStudentData");

                    b.Navigation("EmployeeData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HR.HRSetting.UniversityData", b =>
                {
                    b.Navigation("EduStudentData");

                    b.Navigation("EmployeeData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HotelSetting.HotelReservationMaster", b =>
                {
                    b.Navigation("HotelPayments");

                    b.Navigation("HotelReservationDetails");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HotelSetting.HotelRoomData", b =>
                {
                    b.Navigation("HotelReservationMasters");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.HotelSetting.HotelService", b =>
                {
                    b.Navigation("HotelReservationDetails");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Inventory.AdditionAdjustment", b =>
                {
                    b.Navigation("ItemsStocks");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Inventory.InventoryOrderHeader", b =>
                {
                    b.Navigation("InventoryOrderFooters");

                    b.Navigation("RequestReceiptHeaders");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Inventory.InventorySetting.BalanceName", b =>
                {
                    b.Navigation("AccountsBalanceHeaders");

                    b.Navigation("ItemsBalanceHeaders");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Inventory.InventorySetting.StoreData", b =>
                {
                    b.Navigation("AdditionAdjustments");

                    b.Navigation("InventoryOrderHeaders");

                    b.Navigation("ItemsBalanceHeaders");

                    b.Navigation("ItemsStocks");

                    b.Navigation("PadditionAdjustments");

                    b.Navigation("PinventoryOrderHeaders");

                    b.Navigation("PitemsBalanceHeaders");

                    b.Navigation("PitemsStocks");

                    b.Navigation("PrequestReceiptHeaders");

                    b.Navigation("PsettlementDiscounts");

                    b.Navigation("RequestReceiptHeaders");

                    b.Navigation("SettlementDiscounts");

                    b.Navigation("TransformationsMasterFroms");

                    b.Navigation("TransformationsMasterTos");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Inventory.InventoryValuation", b =>
                {
                    b.Navigation("ApplicationSettings");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Inventory.ItemsBalanceFooter", b =>
                {
                    b.Navigation("ItemsStocks");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Inventory.ItemsBalanceHeader", b =>
                {
                    b.Navigation("ItemsBalanceFooters");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Inventory.SettlementDiscount", b =>
                {
                    b.Navigation("ItemsStocks");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Inventory.TransformationsDetail", b =>
                {
                    b.Navigation("ItemsStocks");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Inventory.TransformationsMaster", b =>
                {
                    b.Navigation("TransformationsDetails");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ManageItems.ItemsGroup", b =>
                {
                    b.Navigation("InverseParentCodeNavigation");

                    b.Navigation("ItemsHeaders");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ManageItems.ItemsHeader", b =>
                {
                    b.Navigation("AdditionAdjustments");

                    b.Navigation("InventoryOrderFooters");

                    b.Navigation("ItemsBalanceFooters");

                    b.Navigation("ItemsColors");

                    b.Navigation("ItemsPricePurchases");

                    b.Navigation("ItemsPriceSales");

                    b.Navigation("ItemsProductions");

                    b.Navigation("ItemsSizes");

                    b.Navigation("ItemsStocks");

                    b.Navigation("PossalesDetails");

                    b.Navigation("PsettlementDiscounts");

                    b.Navigation("PurchasesInvoiceFooters");

                    b.Navigation("PurchasesOrderFooters");

                    b.Navigation("RequestReceiptFooters");

                    b.Navigation("RequestReservationFooters");

                    b.Navigation("ReturnPurchasesFooters");

                    b.Navigation("ReturnSalesFooters");

                    b.Navigation("SalesInvoiceFooters");

                    b.Navigation("SalesTaxInvoiceFs");

                    b.Navigation("SettlementDiscounts");

                    b.Navigation("TransformationsDetails");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.ColorType", b =>
                {
                    b.Navigation("ItemsColors");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.DiscountType", b =>
                {
                    b.Navigation("PurchasesInvoiceDiscounts");

                    b.Navigation("SalesInvoiceDiscounts");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.ItemsType", b =>
                {
                    b.Navigation("ItemsHeaders");

                    b.Navigation("PitemsHeaders");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.PriceType", b =>
                {
                    b.Navigation("ItemsPriceSales");

                    b.Navigation("Possales");

                    b.Navigation("ReturnSalesHeaders");

                    b.Navigation("SalesInvoiceHeaders");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.SizeType", b =>
                {
                    b.Navigation("ItemsColors");

                    b.Navigation("ItemsSizes");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ManageItems.ItemsSetting.UnitType", b =>
                {
                    b.Navigation("AdditionAdjustments");

                    b.Navigation("ConContractorExtractDetails");

                    b.Navigation("InventoryOrderFooters");

                    b.Navigation("ItemsBalanceFooters");

                    b.Navigation("ItemsHeaders");

                    b.Navigation("ItemsPriceSales");

                    b.Navigation("PInventoryOrderFooters");

                    b.Navigation("PItemsBalanceFooters");

                    b.Navigation("PPurchasesInvoiceFooters");

                    b.Navigation("PRSettlementDiscounts");

                    b.Navigation("PRequestReceiptFooters");

                    b.Navigation("PRequestReservationFooters");

                    b.Navigation("PReturnPurchasesFooters");

                    b.Navigation("PReturnReservationFooters");

                    b.Navigation("PadditionAdjustments");

                    b.Navigation("PurchasesInvoiceFooters");

                    b.Navigation("PurchasesOrderFooters");

                    b.Navigation("RequestReceiptFooters");

                    b.Navigation("RequestReservationFooters");

                    b.Navigation("ReturnPurchasesFooters");

                    b.Navigation("ReturnSalesFooters");

                    b.Navigation("RntContractsDatas");

                    b.Navigation("SalesInvoiceFooters");

                    b.Navigation("SettlementDiscounts");

                    b.Navigation("TransformationsDetails");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Medical.MedAnalysisName", b =>
                {
                    b.Navigation("MedCustomerDetails");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Medical.MedMedicalService", b =>
                {
                    b.Navigation("MedCustomerMedicalServices");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Medical.MedRaysName", b =>
                {
                    b.Navigation("MedCustomerDetails");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Medical.MedSurgicalService", b =>
                {
                    b.Navigation("MedCustomerSurgicalServices");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.POSCasher.PosSale", b =>
                {
                    b.Navigation("PospaymentDailies");

                    b.Navigation("PossalesDetails");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.POSCasher.PosSalesDetail", b =>
                {
                    b.Navigation("PossalesDiscounts");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PAdditionAdjustment", b =>
                {
                    b.Navigation("PItemsStocks");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PInventoryOrderFooter", b =>
                {
                    b.Navigation("PitemsStocks");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PInventoryOrderHeader", b =>
                {
                    b.Navigation("PinventoryOrderFooters");

                    b.Navigation("PrequestReceiptHeaders");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PItemsBalanceFooter", b =>
                {
                    b.Navigation("PitemsStocks");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PItemsBalanceHeader", b =>
                {
                    b.Navigation("PItemsBalanceFooters");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PItemsGroup", b =>
                {
                    b.Navigation("InverseParentCodeNavigation");

                    b.Navigation("PItemsHeaders");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PItemsHeader", b =>
                {
                    b.Navigation("PItemsStocks");

                    b.Navigation("PPurchasesInvoiceFooters");

                    b.Navigation("PRequestReceiptFooters");

                    b.Navigation("PRequestReservationFooters");

                    b.Navigation("PReturnPurchasesFooters");

                    b.Navigation("PReturnReservationFooters");

                    b.Navigation("PadditionAdjustments");

                    b.Navigation("PinventoryOrderFooters");

                    b.Navigation("PitemsBalanceFooters");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PPurchasesInvoiceHeader", b =>
                {
                    b.Navigation("PReturnPurchasesHeaders");

                    b.Navigation("PpurchasesInvoiceFooters");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PRequestReceiptFooter", b =>
                {
                    b.Navigation("PItemsStocks");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PRequestReceiptHeader", b =>
                {
                    b.Navigation("PpurchasesInvoiceHeaders");

                    b.Navigation("PrequestReceiptFooters");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PRequestReservationFooter", b =>
                {
                    b.Navigation("PItemsStocks");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PRequestReservationHeader", b =>
                {
                    b.Navigation("PRequestReservationFooters");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PReturnPurchasesFooter", b =>
                {
                    b.Navigation("PItemsStocks");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PReturnPurchasesHeader", b =>
                {
                    b.Navigation("PReturnPurchasesFooters");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PReturnReservationFooter", b =>
                {
                    b.Navigation("PitemsStocks");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PReturnReservationHeader", b =>
                {
                    b.Navigation("PReturnReservationFooters");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Production.PSettlementDiscount", b =>
                {
                    b.Navigation("PitemsStocks");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ProgramSetting.ApplicationMenu", b =>
                {
                    b.Navigation("AspPermissions");

                    b.Navigation("ProgramOptions");

                    b.Navigation("ReportsNames");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ProgramSetting.AttachmentFilesType", b =>
                {
                    b.Navigation("AttachmentFiles");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ProgramSetting.DatabaseDescription", b =>
                {
                    b.Navigation("InverseParentCodeNavigation");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.ProgramSetting.GenderData", b =>
                {
                    b.Navigation("EduStudentData");

                    b.Navigation("EmployeeData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Purchasing.PurchasesInvoiceFooter", b =>
                {
                    b.Navigation("PurchasesInvoiceDiscounts");

                    b.Navigation("PurchasesTaxInvoices");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Purchasing.PurchasesInvoiceHeader", b =>
                {
                    b.Navigation("PurchasesInvoiceFooters");

                    b.Navigation("ReturnPurchasesHeaders");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Purchasing.PurchasesOrderHeader", b =>
                {
                    b.Navigation("PurchasesOrderFooters");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Purchasing.RequestReceiptFooter", b =>
                {
                    b.Navigation("ItemsStocks");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Purchasing.RequestReceiptHeader", b =>
                {
                    b.Navigation("PurchasesInvoiceHeaders");

                    b.Navigation("RequestReceiptFooters");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Purchasing.ReturnPurchasesFooter", b =>
                {
                    b.Navigation("ItemsStocks");

                    b.Navigation("PurchasesInvoiceDiscounts");

                    b.Navigation("PurchasesTaxInvoices");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Purchasing.ReturnPurchasesHeader", b =>
                {
                    b.Navigation("ReturnPurchasesFooters");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Purchasing.SupplierData", b =>
                {
                    b.Navigation("ItemsHeaders");

                    b.Navigation("ItemsPricePurchases");

                    b.Navigation("PPurchasesInvoiceHeaders");

                    b.Navigation("PReturnPurchasesHeaders");

                    b.Navigation("PitemsHeaders");

                    b.Navigation("PurchasesInvoiceHeaders");

                    b.Navigation("PurchasesOrderHeaders");

                    b.Navigation("ReturnPurchasesHeaders");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Purchasing.SupplierGroup", b =>
                {
                    b.Navigation("ConContractorData");

                    b.Navigation("SupplierData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.CrmContact", b =>
                {
                    b.Navigation("CrmOpportunities");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.CrmOpportunity", b =>
                {
                    b.Navigation("CrmTasks");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.CrmOpportunityStatus", b =>
                {
                    b.Navigation("CrmOpportunities");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.CrmTaskType", b =>
                {
                    b.Navigation("CrmTasks");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.CrmTaskstatus", b =>
                {
                    b.Navigation("CrmTasks");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.RntActivity", b =>
                {
                    b.Navigation("RntContractsHes");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.RntContractsHeader", b =>
                {
                    b.Navigation("RntContractsDs");

                    b.Navigation("RntReceiptsHes");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.RntCustomerPercentHeader", b =>
                {
                    b.Navigation("RntCustomerPercentDs");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.RntExpenseType", b =>
                {
                    b.Navigation("RntExpenses");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.RntFloor", b =>
                {
                    b.Navigation("InverseParentCodeNavigation");

                    b.Navigation("RntContractsDs");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.RealEstate.RntReceiptsHeader", b =>
                {
                    b.Navigation("RntReceiptsDs");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Sales.CustomerCategories", b =>
                {
                    b.Navigation("CustomerData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Sales.CustomerData", b =>
                {
                    b.Navigation("HotelPayments");

                    b.Navigation("HotelReservationMasters");

                    b.Navigation("InstallmentHeaders");

                    b.Navigation("MedCustomerDetails");

                    b.Navigation("MedCustomerMedicalServices");

                    b.Navigation("MedCustomerSurgicalServices");

                    b.Navigation("Possales");

                    b.Navigation("ReturnSalesHeaders");

                    b.Navigation("RntContractsHes");

                    b.Navigation("RntCustomerPercentHs");

                    b.Navigation("SalesInvoiceHeaders");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Sales.DelegateData", b =>
                {
                    b.Navigation("CustomerData");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Sales.InstallmentHeader", b =>
                {
                    b.Navigation("InstallmentFooters");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Sales.RequestReservationHeader", b =>
                {
                    b.Navigation("RequestReservationFooters");

                    b.Navigation("SalesInvoiceHeaders");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Sales.ReturnSalesFooter", b =>
                {
                    b.Navigation("ItemsStocks");

                    b.Navigation("SalesInvoiceDiscounts");

                    b.Navigation("SalesTaxInvoiceFs");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Sales.ReturnSalesHeader", b =>
                {
                    b.Navigation("ReturnSalesFooters");

                    b.Navigation("SalesTaxInvoiceHs");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Sales.SalesInvoiceFooter", b =>
                {
                    b.Navigation("ItemsStocks");

                    b.Navigation("SalesInvoiceDiscount")
                        .IsRequired();

                    b.Navigation("SalesTaxInvoiceFs");
                });

            modelBuilder.Entity("ModelsUpgrade.UpdatedModels.Sales.SalesInvoiceHeader", b =>
                {
                    b.Navigation("ReturnSalesHeaders");

                    b.Navigation("SalesInvoiceDeliveries");

                    b.Navigation("SalesInvoiceFooters");

                    b.Navigation("SalesInvoicePayments");

                    b.Navigation("SalesTaxInvoiceHs");
                });
#pragma warning restore 612, 618
        }
    }
}
